import{r as Re,b as Z_}from"./index-aca7c5c9.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Oc="149",J_={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},j_={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Og=0,qh=1,kg=2,Q_=3,Ug=0,kc=1,Zo=2,Yr=3,Ji=0,In=1,Xi=2,K_=2,Zi=0,Kr=1,Yh=2,Zh=3,Jh=4,Bg=5,Xr=100,Vg=101,Gg=102,jh=103,Qh=104,Hg=200,Wg=201,Xg=202,qg=203,kf=204,Uf=205,Yg=206,Zg=207,Jg=208,jg=209,Qg=210,Kg=0,$g=1,e0=2,Rc=3,t0=4,n0=5,i0=6,r0=7,_a=0,s0=1,o0=2,fi=0,a0=1,l0=2,c0=3,Bf=4,u0=5,Uc=300,_r=301,yr=302,$o=303,ea=304,ro=306,ta=1e3,_n=1001,na=1002,Wt=1003,Ic=1004,$_=1004,Jo=1005,ey=1005,Xt=1006,Vf=1007,ty=1007,xr=1008,ny=1008,ji=1009,h0=1010,f0=1011,Gf=1012,d0=1013,mr=1014,qi=1015,$s=1016,p0=1017,m0=1018,$r=1020,g0=1021,Rn=1023,v0=1024,_0=1025,vr=1026,rs=1027,y0=1028,x0=1029,M0=1030,S0=1031,w0=1033,Sc=33776,wc=33777,bc=33778,Tc=33779,Kh=35840,$h=35841,ef=35842,tf=35843,b0=36196,nf=37492,rf=37496,sf=37808,of=37809,af=37810,lf=37811,cf=37812,uf=37813,hf=37814,ff=37815,df=37816,pf=37817,mf=37818,gf=37819,vf=37820,_f=37821,Ec=36492,T0=36283,yf=36284,xf=36285,Mf=36286,E0=2200,A0=2201,C0=2202,ia=2300,ra=2301,Ac=2302,Zr=2400,Jr=2401,sa=2402,Bc=2500,Hf=2501,iy=0,ry=1,sy=2,Qi=3e3,Tt=3001,P0=3200,L0=3201,Sr=0,R0=1,oy="",ui="srgb",eo="srgb-linear",ay=0,Cc=7680,ly=7681,cy=7682,uy=7683,hy=34055,fy=34056,dy=5386,py=512,my=513,gy=514,vy=515,_y=516,yy=517,xy=518,I0=519,oa=35044,My=35048,Sy=35040,wy=35045,by=35049,Ty=35041,Ey=35046,Ay=35050,Cy=35042,Py="100",Sf="300 es",Dc=1035;class $i{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const gn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let sm=1234567;const es=Math.PI/180,aa=180/Math.PI;function Bn(){const l=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(gn[l&255]+gn[l>>8&255]+gn[l>>16&255]+gn[l>>24&255]+"-"+gn[e&255]+gn[e>>8&255]+"-"+gn[e>>16&15|64]+gn[e>>24&255]+"-"+gn[t&63|128]+gn[t>>8&255]+"-"+gn[t>>16&255]+gn[t>>24&255]+gn[n&255]+gn[n>>8&255]+gn[n>>16&255]+gn[n>>24&255]).toLowerCase()}function qt(l,e,t){return Math.max(e,Math.min(t,l))}function Wf(l,e){return(l%e+e)%e}function Ly(l,e,t,n,i){return n+(l-e)*(i-n)/(t-e)}function Ry(l,e,t){return l!==e?(t-l)/(e-l):0}function jo(l,e,t){return(1-t)*l+t*e}function Iy(l,e,t,n){return jo(l,e,1-Math.exp(-t*n))}function Dy(l,e=1){return e-Math.abs(Wf(l,e*2)-e)}function zy(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*(3-2*l))}function Ny(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*l*(l*(l*6-15)+10))}function Fy(l,e){return l+Math.floor(Math.random()*(e-l+1))}function Oy(l,e){return l+Math.random()*(e-l)}function ky(l){return l*(.5-Math.random())}function Uy(l){l!==void 0&&(sm=l);let e=sm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function By(l){return l*es}function Vy(l){return l*aa}function wf(l){return(l&l-1)===0&&l!==0}function D0(l){return Math.pow(2,Math.ceil(Math.log(l)/Math.LN2))}function zc(l){return Math.pow(2,Math.floor(Math.log(l)/Math.LN2))}function Gy(l,e,t,n,i){const r=Math.cos,a=Math.sin,c=r(t/2),u=a(t/2),h=r((e+n)/2),d=a((e+n)/2),p=r((e-n)/2),m=a((e-n)/2),v=r((n-e)/2),x=a((n-e)/2);switch(i){case"XYX":l.set(c*d,u*p,u*m,c*h);break;case"YZY":l.set(u*m,c*d,u*p,c*h);break;case"ZXZ":l.set(u*p,u*m,c*d,c*h);break;case"XZX":l.set(c*d,u*x,u*v,c*h);break;case"YXY":l.set(u*v,c*d,u*x,c*h);break;case"ZYZ":l.set(u*x,u*v,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Yi(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return l/65535;case Uint8Array:return l/255;case Int16Array:return Math.max(l/32767,-1);case Int8Array:return Math.max(l/127,-1);default:throw new Error("Invalid component type.")}}function Pt(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return Math.round(l*65535);case Uint8Array:return Math.round(l*255);case Int16Array:return Math.round(l*32767);case Int8Array:return Math.round(l*127);default:throw new Error("Invalid component type.")}}var Hy=Object.freeze({__proto__:null,DEG2RAD:es,RAD2DEG:aa,ceilPowerOfTwo:D0,clamp:qt,damp:Iy,degToRad:By,denormalize:Yi,euclideanModulo:Wf,floorPowerOfTwo:zc,generateUUID:Bn,inverseLerp:Ry,isPowerOfTwo:wf,lerp:jo,mapLinear:Ly,normalize:Pt,pingpong:Dy,radToDeg:Vy,randFloat:Oy,randFloatSpread:ky,randInt:Fy,seededRandom:Uy,setQuaternionFromProperEuler:Gy,smootherstep:Ny,smoothstep:zy});class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class bn{constructor(){bn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=r,d[5]=u,d[6]=n,d[7]=a,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],v=n[5],x=n[8],_=i[0],y=i[3],S=i[6],b=i[1],w=i[4],E=i[7],C=i[2],L=i[5],N=i[8];return r[0]=a*_+c*b+u*C,r[3]=a*y+c*w+u*L,r[6]=a*S+c*E+u*N,r[1]=h*_+d*b+p*C,r[4]=h*y+d*w+p*L,r[7]=h*S+d*E+p*N,r[2]=m*_+v*b+x*C,r[5]=m*y+v*w+x*L,r[8]=m*S+v*E+x*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*a*d-t*c*h-n*r*d+n*c*u+i*r*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*a-c*h,m=c*u-d*r,v=h*r-a*u,x=t*p+n*m+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/x;return e[0]=p*_,e[1]=(i*h-d*n)*_,e[2]=(c*n-i*a)*_,e[3]=m*_,e[4]=(d*t-i*u)*_,e[5]=(i*r-c*t)*_,e[6]=v*_,e[7]=(n*u-h*t)*_,e[8]=(a*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,c){const u=Math.cos(r),h=Math.sin(r);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(rh.makeScale(e,t)),this}rotate(e){return this.premultiply(rh.makeRotation(-e)),this}translate(e,t){return this.premultiply(rh.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const rh=new bn;function z0(l){for(let e=l.length-1;e>=0;--e)if(l[e]>=65535)return!0;return!1}const Wy={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Zs(l,e){return new Wy[l](e)}function la(l){return document.createElementNS("http://www.w3.org/1999/xhtml",l)}function ts(l){return l<.04045?l*.0773993808:Math.pow(l*.9478672986+.0521327014,2.4)}function Pc(l){return l<.0031308?l*12.92:1.055*Math.pow(l,.41666)-.055}const sh={[ui]:{[eo]:ts},[eo]:{[ui]:Pc}},vn={legacyMode:!0,get workingColorSpace(){return eo},set workingColorSpace(l){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(l,e,t){if(this.legacyMode||e===t||!e||!t)return l;if(sh[e]&&sh[e][t]!==void 0){const n=sh[e][t];return l.r=n(l.r),l.g=n(l.g),l.b=n(l.b),l}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(l,e){return this.convert(l,this.workingColorSpace,e)},toWorkingColorSpace:function(l,e){return this.convert(l,e,this.workingColorSpace)}},N0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Kt={r:0,g:0,b:0},ai={h:0,s:0,l:0},zl={h:0,s:0,l:0};function oh(l,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?l+(e-l)*6*t:t<1/2?e:t<2/3?l+(e-l)*6*(2/3-t):l}function Nl(l,e){return e.r=l.r,e.g=l.g,e.b=l.b,e}class Pe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ui){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,vn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=vn.workingColorSpace){return this.r=e,this.g=t,this.b=n,vn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=vn.workingColorSpace){if(e=Wf(e,1),t=qt(t,0,1),n=qt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=oh(a,r,e+1/3),this.g=oh(a,r,e),this.b=oh(a,r,e-1/3)}return vn.toWorkingColorSpace(this,i),this}setStyle(e,t=ui){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,vn.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,vn.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){const u=parseFloat(r[1])/360,h=parseFloat(r[2])/100,d=parseFloat(r[3])/100;return n(r[4]),this.setHSL(u,h,d,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,vn.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,vn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=ui){const n=N0[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ts(e.r),this.g=ts(e.g),this.b=ts(e.b),this}copyLinearToSRGB(e){return this.r=Pc(e.r),this.g=Pc(e.g),this.b=Pc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ui){return vn.fromWorkingColorSpace(Nl(this,Kt),e),qt(Kt.r*255,0,255)<<16^qt(Kt.g*255,0,255)<<8^qt(Kt.b*255,0,255)<<0}getHexString(e=ui){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=vn.workingColorSpace){vn.fromWorkingColorSpace(Nl(this,Kt),t);const n=Kt.r,i=Kt.g,r=Kt.b,a=Math.max(n,i,r),c=Math.min(n,i,r);let u,h;const d=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=d<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-r)/p+(i<r?6:0);break;case i:u=(r-n)/p+2;break;case r:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=vn.workingColorSpace){return vn.fromWorkingColorSpace(Nl(this,Kt),t),e.r=Kt.r,e.g=Kt.g,e.b=Kt.b,e}getStyle(e=ui){return vn.fromWorkingColorSpace(Nl(this,Kt),e),e!==ui?`color(${e} ${Kt.r} ${Kt.g} ${Kt.b})`:`rgb(${Kt.r*255|0},${Kt.g*255|0},${Kt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(ai),ai.h+=e,ai.s+=t,ai.l+=n,this.setHSL(ai.h,ai.s,ai.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ai),e.getHSL(zl);const n=jo(ai.h,zl.h,t),i=jo(ai.s,zl.s,t),r=jo(ai.l,zl.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Pe.NAMES=N0;let As;class Xf{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{As===void 0&&(As=la("canvas")),As.width=e.width,As.height=e.height;const n=As.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=As}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=la("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=ts(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ts(t[n]/255)*255):t[n]=ts(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class jr{constructor(e=null){this.isSource=!0,this.uuid=Bn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?r.push(ah(i[a].image)):r.push(ah(i[a]))}else r=ah(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function ah(l){return typeof HTMLImageElement<"u"&&l instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&l instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&l instanceof ImageBitmap?Xf.getDataURL(l):l.data?{data:Array.from(l.data),width:l.width,height:l.height,type:l.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Xy=0;class Bt extends $i{constructor(e=Bt.DEFAULT_IMAGE,t=Bt.DEFAULT_MAPPING,n=_n,i=_n,r=Xt,a=xr,c=Rn,u=ji,h=Bt.DEFAULT_ANISOTROPY,d=Qi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Xy++}),this.uuid=Bn(),this.name="",this.source=new jr(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new bn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Uc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ta:e.x=e.x-Math.floor(e.x);break;case _n:e.x=e.x<0?0:1;break;case na:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ta:e.y=e.y-Math.floor(e.y);break;case _n:e.y=e.y<0?0:1;break;case na:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Bt.DEFAULT_IMAGE=null;Bt.DEFAULT_MAPPING=Uc;Bt.DEFAULT_ANISOTROPY=1;class bt{constructor(e=0,t=0,n=0,i=1){bt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],v=u[5],x=u[9],_=u[2],y=u[6],S=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-_)<.01&&Math.abs(x-y)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+_)<.1&&Math.abs(x+y)<.1&&Math.abs(h+v+S-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,E=(v+1)/2,C=(S+1)/2,L=(d+m)/4,N=(p+_)/4,A=(x+y)/4;return w>E&&w>C?w<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(w),i=L/n,r=N/n):E>C?E<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(E),n=L/i,r=A/i):C<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(C),n=N/r,i=A/r),this.set(n,i,r,t),this}let b=Math.sqrt((y-x)*(y-x)+(p-_)*(p-_)+(m-d)*(m-d));return Math.abs(b)<.001&&(b=1),this.x=(y-x)/b,this.y=(p-_)/b,this.z=(m-d)/b,this.w=Math.acos((h+v+S-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class di extends $i{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new bt(0,0,e,t),this.scissorTest=!1,this.viewport=new bt(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new Bt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Xt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new jr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Vc extends Bt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Wt,this.minFilter=Wt,this.wrapR=_n,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qy extends di{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Vc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class qf extends Bt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Wt,this.minFilter=Wt,this.wrapR=_n,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Yy extends di{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new qf(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Zy extends di{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Dn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=r[a+0],v=r[a+1],x=r[a+2],_=r[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=x,e[t+3]=_;return}if(p!==_||u!==m||h!==v||d!==x){let y=1-c;const S=u*m+h*v+d*x+p*_,b=S>=0?1:-1,w=1-S*S;if(w>Number.EPSILON){const C=Math.sqrt(w),L=Math.atan2(C,S*b);y=Math.sin(y*L)/C,c=Math.sin(c*L)/C}const E=c*b;if(u=u*y+m*E,h=h*y+v*E,d=d*y+x*E,p=p*y+_*E,y===1-c){const C=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=C,h*=C,d*=C,p*=C}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,a){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=r[a],m=r[a+1],v=r[a+2],x=r[a+3];return e[t]=c*x+d*p+u*v-h*m,e[t+1]=u*x+d*m+h*p-c*v,e[t+2]=h*x+d*v+c*m-u*p,e[t+3]=d*x-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(r/2),m=u(n/2),v=u(i/2),x=u(r/2);switch(a){case"XYZ":this._x=m*d*p+h*v*x,this._y=h*v*p-m*d*x,this._z=h*d*x+m*v*p,this._w=h*d*p-m*v*x;break;case"YXZ":this._x=m*d*p+h*v*x,this._y=h*v*p-m*d*x,this._z=h*d*x-m*v*p,this._w=h*d*p+m*v*x;break;case"ZXY":this._x=m*d*p-h*v*x,this._y=h*v*p+m*d*x,this._z=h*d*x+m*v*p,this._w=h*d*p-m*v*x;break;case"ZYX":this._x=m*d*p-h*v*x,this._y=h*v*p+m*d*x,this._z=h*d*x-m*v*p,this._w=h*d*p+m*v*x;break;case"YZX":this._x=m*d*p+h*v*x,this._y=h*v*p+m*d*x,this._z=h*d*x-m*v*p,this._w=h*d*p-m*v*x;break;case"XZY":this._x=m*d*p-h*v*x,this._y=h*v*p-m*d*x,this._z=h*d*x+m*v*p,this._w=h*d*p+m*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(d-u)*v,this._y=(r-h)*v,this._z=(a-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(d-u)/v,this._x=.25*v,this._y=(i+a)/v,this._z=(r+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(r-h)/v,this._x=(i+a)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(a-i)/v,this._x=(r+h)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(qt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+a*c+i*h-r*u,this._y=i*d+a*u+r*c-n*h,this._z=r*d+a*h+n*u-i*c,this._w=a*d-n*c-i*u-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+r*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*a+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=r*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(om.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(om.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,c=e.z,u=e.w,h=u*t+a*i-c*n,d=u*n+c*t-r*i,p=u*i+r*n-a*t,m=-r*t-a*n-c*i;return this.x=h*u+m*-r+d*-c-p*-a,this.y=d*u+m*-a+p*-r-h*-c,this.z=p*u+m*-c+h*-a-d*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-r*c,this.y=r*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return lh.copy(this).projectOnVector(e),this.sub(lh)}reflect(e){return this.sub(lh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const lh=new D,om=new Dn;class ls{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,h=e.length;u<h;u+=3){const d=e[u],p=e[u+1],m=e[u+2];d<t&&(t=d),p<n&&(n=p),m<i&&(i=m),d>r&&(r=d),p>a&&(a=p),m>c&&(c=m)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,h=e.count;u<h;u++){const d=e.getX(u),p=e.getY(u),m=e.getZ(u);d<t&&(t=d),p<n&&(n=p),m<i&&(i=m),d>r&&(r=d),p>a&&(a=p),m>c&&(c=m)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Fr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,c=r.count;a<c;a++)Fr.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Fr)}else n.boundingBox===null&&n.computeBoundingBox(),ch.copy(n.boundingBox),ch.applyMatrix4(e.matrixWorld),this.union(ch);const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Fr),Fr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Io),Fl.subVectors(this.max,Io),Cs.subVectors(e.a,Io),Ps.subVectors(e.b,Io),Ls.subVectors(e.c,Io),cr.subVectors(Ps,Cs),ur.subVectors(Ls,Ps),Or.subVectors(Cs,Ls);let t=[0,-cr.z,cr.y,0,-ur.z,ur.y,0,-Or.z,Or.y,cr.z,0,-cr.x,ur.z,0,-ur.x,Or.z,0,-Or.x,-cr.y,cr.x,0,-ur.y,ur.x,0,-Or.y,Or.x,0];return!uh(t,Cs,Ps,Ls,Fl)||(t=[1,0,0,0,1,0,0,0,1],!uh(t,Cs,Ps,Ls,Fl))?!1:(Ol.crossVectors(cr,ur),t=[Ol.x,Ol.y,Ol.z],uh(t,Cs,Ps,Ls,Fl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Fr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Fr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Oi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Oi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Oi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Oi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Oi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Oi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Oi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Oi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Oi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Oi=[new D,new D,new D,new D,new D,new D,new D,new D],Fr=new D,ch=new ls,Cs=new D,Ps=new D,Ls=new D,cr=new D,ur=new D,Or=new D,Io=new D,Fl=new D,Ol=new D,kr=new D;function uh(l,e,t,n,i){for(let r=0,a=l.length-3;r<=a;r+=3){kr.fromArray(l,r);const c=i.x*Math.abs(kr.x)+i.y*Math.abs(kr.y)+i.z*Math.abs(kr.z),u=e.dot(kr),h=t.dot(kr),d=n.dot(kr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const Jy=new ls,Do=new D,hh=new D;class cs{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Jy.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Do.subVectors(e,this.center);const t=Do.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Do,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Do.copy(e.center).add(hh)),this.expandByPoint(Do.copy(e.center).sub(hh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ki=new D,fh=new D,kl=new D,hr=new D,dh=new D,Ul=new D,ph=new D;class ya{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ki)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ki.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ki.copy(this.direction).multiplyScalar(t).add(this.origin),ki.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){fh.copy(e).add(t).multiplyScalar(.5),kl.copy(t).sub(e).normalize(),hr.copy(this.origin).sub(fh);const r=e.distanceTo(t)*.5,a=-this.direction.dot(kl),c=hr.dot(this.direction),u=-hr.dot(kl),h=hr.lengthSq(),d=Math.abs(1-a*a);let p,m,v,x;if(d>0)if(p=a*u-c,m=a*c-u,x=r*d,p>=0)if(m>=-x)if(m<=x){const _=1/d;p*=_,m*=_,v=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m=-r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-x?(p=Math.max(0,-(-a*r+c)),m=p>0?-r:Math.min(Math.max(-r,-u),r),v=-p*p+m*(m+2*u)+h):m<=x?(p=0,m=Math.min(Math.max(-r,-u),r),v=m*(m+2*u)+h):(p=Math.max(0,-(a*r+c)),m=p>0?r:Math.min(Math.max(-r,-u),r),v=-p*p+m*(m+2*u)+h);else m=a>0?-r:r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.direction).multiplyScalar(p).add(this.origin),i&&i.copy(kl).multiplyScalar(m).add(fh),v}intersectSphere(e,t){ki.subVectors(e.center,this.origin);const n=ki.dot(this.direction),i=ki.dot(ki)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),c=n-a,u=n+a;return c<0&&u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(r=(e.min.y-m.y)*d,a=(e.max.y-m.y)*d):(r=(e.max.y-m.y)*d,a=(e.min.y-m.y)*d),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,ki)!==null}intersectTriangle(e,t,n,i,r){dh.subVectors(t,e),Ul.subVectors(n,e),ph.crossVectors(dh,Ul);let a=this.direction.dot(ph),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;hr.subVectors(this.origin,e);const u=c*this.direction.dot(Ul.crossVectors(hr,Ul));if(u<0)return null;const h=c*this.direction.dot(dh.cross(hr));if(h<0||u+h>a)return null;const d=-c*hr.dot(ph);return d<0?null:this.at(d/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class tt{constructor(){tt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,c,u,h,d,p,m,v,x,_,y){const S=this.elements;return S[0]=e,S[4]=t,S[8]=n,S[12]=i,S[1]=r,S[5]=a,S[9]=c,S[13]=u,S[2]=h,S[6]=d,S[10]=p,S[14]=m,S[3]=v,S[7]=x,S[11]=_,S[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new tt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Rs.setFromMatrixColumn(e,0).length(),r=1/Rs.setFromMatrixColumn(e,1).length(),a=1/Rs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const m=a*d,v=a*p,x=c*d,_=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=v+x*h,t[5]=m-_*h,t[9]=-c*u,t[2]=_-m*h,t[6]=x+v*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*d,v=u*p,x=h*d,_=h*p;t[0]=m+_*c,t[4]=x*c-v,t[8]=a*h,t[1]=a*p,t[5]=a*d,t[9]=-c,t[2]=v*c-x,t[6]=_+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*d,v=u*p,x=h*d,_=h*p;t[0]=m-_*c,t[4]=-a*p,t[8]=x+v*c,t[1]=v+x*c,t[5]=a*d,t[9]=_-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*d,v=a*p,x=c*d,_=c*p;t[0]=u*d,t[4]=x*h-v,t[8]=m*h+_,t[1]=u*p,t[5]=_*h+m,t[9]=v*h-x,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,v=a*h,x=c*u,_=c*h;t[0]=u*d,t[4]=_-m*p,t[8]=x*p+v,t[1]=p,t[5]=a*d,t[9]=-c*d,t[2]=-h*d,t[6]=v*p+x,t[10]=m-_*p}else if(e.order==="XZY"){const m=a*u,v=a*h,x=c*u,_=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+_,t[5]=a*d,t[9]=v*p-x,t[2]=x*p-v,t[6]=c*d,t[10]=_*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(jy,e,Qy)}lookAt(e,t,n){const i=this.elements;return kn.subVectors(e,t),kn.lengthSq()===0&&(kn.z=1),kn.normalize(),fr.crossVectors(n,kn),fr.lengthSq()===0&&(Math.abs(n.z)===1?kn.x+=1e-4:kn.z+=1e-4,kn.normalize(),fr.crossVectors(n,kn)),fr.normalize(),Bl.crossVectors(kn,fr),i[0]=fr.x,i[4]=Bl.x,i[8]=kn.x,i[1]=fr.y,i[5]=Bl.y,i[9]=kn.y,i[2]=fr.z,i[6]=Bl.z,i[10]=kn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],v=n[13],x=n[2],_=n[6],y=n[10],S=n[14],b=n[3],w=n[7],E=n[11],C=n[15],L=i[0],N=i[4],A=i[8],P=i[12],O=i[1],H=i[5],K=i[9],X=i[13],V=i[2],ee=i[6],oe=i[10],de=i[14],k=i[3],J=i[7],j=i[11],he=i[15];return r[0]=a*L+c*O+u*V+h*k,r[4]=a*N+c*H+u*ee+h*J,r[8]=a*A+c*K+u*oe+h*j,r[12]=a*P+c*X+u*de+h*he,r[1]=d*L+p*O+m*V+v*k,r[5]=d*N+p*H+m*ee+v*J,r[9]=d*A+p*K+m*oe+v*j,r[13]=d*P+p*X+m*de+v*he,r[2]=x*L+_*O+y*V+S*k,r[6]=x*N+_*H+y*ee+S*J,r[10]=x*A+_*K+y*oe+S*j,r[14]=x*P+_*X+y*de+S*he,r[3]=b*L+w*O+E*V+C*k,r[7]=b*N+w*H+E*ee+C*J,r[11]=b*A+w*K+E*oe+C*j,r[15]=b*P+w*X+E*de+C*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],v=e[14],x=e[3],_=e[7],y=e[11],S=e[15];return x*(+r*u*p-i*h*p-r*c*m+n*h*m+i*c*v-n*u*v)+_*(+t*u*v-t*h*m+r*a*m-i*a*v+i*h*d-r*u*d)+y*(+t*h*p-t*c*v-r*a*p+n*a*v+r*c*d-n*h*d)+S*(-i*c*d-t*u*p+t*c*m+i*a*p-n*a*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],v=e[11],x=e[12],_=e[13],y=e[14],S=e[15],b=p*y*h-_*m*h+_*u*v-c*y*v-p*u*S+c*m*S,w=x*m*h-d*y*h-x*u*v+a*y*v+d*u*S-a*m*S,E=d*_*h-x*p*h+x*c*v-a*_*v-d*c*S+a*p*S,C=x*p*u-d*_*u-x*c*m+a*_*m+d*c*y-a*p*y,L=t*b+n*w+i*E+r*C;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/L;return e[0]=b*N,e[1]=(_*m*r-p*y*r-_*i*v+n*y*v+p*i*S-n*m*S)*N,e[2]=(c*y*r-_*u*r+_*i*h-n*y*h-c*i*S+n*u*S)*N,e[3]=(p*u*r-c*m*r-p*i*h+n*m*h+c*i*v-n*u*v)*N,e[4]=w*N,e[5]=(d*y*r-x*m*r+x*i*v-t*y*v-d*i*S+t*m*S)*N,e[6]=(x*u*r-a*y*r-x*i*h+t*y*h+a*i*S-t*u*S)*N,e[7]=(a*m*r-d*u*r+d*i*h-t*m*h-a*i*v+t*u*v)*N,e[8]=E*N,e[9]=(x*p*r-d*_*r-x*n*v+t*_*v+d*n*S-t*p*S)*N,e[10]=(a*_*r-x*c*r+x*n*h-t*_*h-a*n*S+t*c*S)*N,e[11]=(d*c*r-a*p*r-d*n*h+t*p*h+a*n*v-t*c*v)*N,e[12]=C*N,e[13]=(d*_*i-x*p*i+x*n*m-t*_*m-d*n*y+t*p*y)*N,e[14]=(x*c*i-a*_*i-x*n*u+t*_*u+a*n*y-t*c*y)*N,e[15]=(a*p*i-d*c*i+d*n*u-t*p*u-a*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,c=e.y,u=e.z,h=r*a,d=r*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*a,0,h*u-i*c,d*u+i*a,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,c=t._z,u=t._w,h=r+r,d=a+a,p=c+c,m=r*h,v=r*d,x=r*p,_=a*d,y=a*p,S=c*p,b=u*h,w=u*d,E=u*p,C=n.x,L=n.y,N=n.z;return i[0]=(1-(_+S))*C,i[1]=(v+E)*C,i[2]=(x-w)*C,i[3]=0,i[4]=(v-E)*L,i[5]=(1-(m+S))*L,i[6]=(y+b)*L,i[7]=0,i[8]=(x+w)*N,i[9]=(y-b)*N,i[10]=(1-(m+_))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Rs.set(i[0],i[1],i[2]).length();const a=Rs.set(i[4],i[5],i[6]).length(),c=Rs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],li.copy(this);const h=1/r,d=1/a,p=1/c;return li.elements[0]*=h,li.elements[1]*=h,li.elements[2]*=h,li.elements[4]*=d,li.elements[5]*=d,li.elements[6]*=d,li.elements[8]*=p,li.elements[9]*=p,li.elements[10]*=p,t.setFromRotationMatrix(li),n.x=r,n.y=a,n.z=c,this}makePerspective(e,t,n,i,r,a){const c=this.elements,u=2*r/(t-e),h=2*r/(n-i),d=(t+e)/(t-e),p=(n+i)/(n-i),m=-(a+r)/(a-r),v=-2*a*r/(a-r);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=p,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=v,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,r,a){const c=this.elements,u=1/(t-e),h=1/(n-i),d=1/(a-r),p=(t+e)*u,m=(n+i)*h,v=(a+r)*d;return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-p,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=-2*d,c[14]=-v,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Rs=new D,li=new tt,jy=new D(0,0,0),Qy=new D(1,1,1),fr=new D,Bl=new D,kn=new D,am=new tt,lm=new Dn;class xa{constructor(e=0,t=0,n=0,i=xa.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(qt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-qt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(qt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-qt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(qt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-qt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return am.makeRotationFromQuaternion(e),this.setFromRotationMatrix(am,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return lm.setFromEuler(this),this.setFromQuaternion(lm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}xa.DEFAULT_ORDER="XYZ";class ns{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ky=0;const cm=new D,Is=new Dn,Ui=new tt,Vl=new D,zo=new D,$y=new D,ex=new Dn,um=new D(1,0,0),hm=new D(0,1,0),fm=new D(0,0,1),tx={type:"added"},dm={type:"removed"};class xt extends $i{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ky++}),this.uuid=Bn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xt.DEFAULT_UP.clone();const e=new D,t=new xa,n=new Dn,i=new D(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new tt},normalMatrix:{value:new bn}}),this.matrix=new tt,this.matrixWorld=new tt,this.matrixAutoUpdate=xt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ns,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Is.setFromAxisAngle(e,t),this.quaternion.multiply(Is),this}rotateOnWorldAxis(e,t){return Is.setFromAxisAngle(e,t),this.quaternion.premultiply(Is),this}rotateX(e){return this.rotateOnAxis(um,e)}rotateY(e){return this.rotateOnAxis(hm,e)}rotateZ(e){return this.rotateOnAxis(fm,e)}translateOnAxis(e,t){return cm.copy(e).applyQuaternion(this.quaternion),this.position.add(cm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(um,e)}translateY(e){return this.translateOnAxis(hm,e)}translateZ(e){return this.translateOnAxis(fm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ui.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Vl.copy(e):Vl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),zo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ui.lookAt(zo,Vl,this.up):Ui.lookAt(Vl,zo,this.up),this.quaternion.setFromRotationMatrix(Ui),i&&(Ui.extractRotation(i.matrixWorld),Is.setFromRotationMatrix(Ui),this.quaternion.premultiply(Is.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(tx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(dm)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(dm)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ui.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ui.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ui),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zo,e,$y),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zo,ex,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const c=i[r];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];r(e.shapes,p)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(r(e.materials,this.material[u]));i.material=c}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(r(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),d=a(e.images),p=a(e.shapes),m=a(e.skeletons),v=a(e.animations),x=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function a(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}xt.DEFAULT_UP=new D(0,1,0);xt.DEFAULT_MATRIX_AUTO_UPDATE=!0;xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ci=new D,Bi=new D,mh=new D,Vi=new D,Ds=new D,zs=new D,pm=new D,gh=new D,vh=new D,_h=new D;class ni{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),ci.subVectors(e,t),i.cross(ci);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){ci.subVectors(i,t),Bi.subVectors(n,t),mh.subVectors(e,t);const a=ci.dot(ci),c=ci.dot(Bi),u=ci.dot(mh),h=Bi.dot(Bi),d=Bi.dot(mh),p=a*h-c*c;if(p===0)return r.set(-2,-1,-1);const m=1/p,v=(h*u-c*d)*m,x=(a*d-c*u)*m;return r.set(1-v-x,x,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Vi),Vi.x>=0&&Vi.y>=0&&Vi.x+Vi.y<=1}static getUV(e,t,n,i,r,a,c,u){return this.getBarycoord(e,t,n,i,Vi),u.set(0,0),u.addScaledVector(r,Vi.x),u.addScaledVector(a,Vi.y),u.addScaledVector(c,Vi.z),u}static isFrontFacing(e,t,n,i){return ci.subVectors(n,t),Bi.subVectors(e,t),ci.cross(Bi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ci.subVectors(this.c,this.b),Bi.subVectors(this.a,this.b),ci.cross(Bi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ni.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ni.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return ni.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ni.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ni.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,c;Ds.subVectors(i,n),zs.subVectors(r,n),gh.subVectors(e,n);const u=Ds.dot(gh),h=zs.dot(gh);if(u<=0&&h<=0)return t.copy(n);vh.subVectors(e,i);const d=Ds.dot(vh),p=zs.dot(vh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return a=u/(u-d),t.copy(n).addScaledVector(Ds,a);_h.subVectors(e,r);const v=Ds.dot(_h),x=zs.dot(_h);if(x>=0&&v<=x)return t.copy(r);const _=v*h-u*x;if(_<=0&&h>=0&&x<=0)return c=h/(h-x),t.copy(n).addScaledVector(zs,c);const y=d*x-v*p;if(y<=0&&p-d>=0&&v-x>=0)return pm.subVectors(r,i),c=(p-d)/(p-d+(v-x)),t.copy(i).addScaledVector(pm,c);const S=1/(y+_+m);return a=_*S,c=m*S,t.copy(n).addScaledVector(Ds,a).addScaledVector(zs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let nx=0;class hn extends $i{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nx++}),this.uuid=Bn(),this.name="",this.type="Material",this.blending=Kr,this.side=Ji,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=kf,this.blendDst=Uf,this.blendEquation=Xr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Rc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=I0,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Cc,this.stencilZFail=Cc,this.stencilZPass=Cc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Kr&&(n.blending=this.blending),this.side!==Ji&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const c in r){const u=r[c];delete u.metadata,a.push(u)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class wr extends hn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_a,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const jt=new D,Gl=new fe;class Lt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=oa,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Gl.fromBufferAttribute(this,t),Gl.applyMatrix3(e),this.setXY(t,Gl.x,Gl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix3(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix4(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyNormalMatrix(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.transformDirection(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Yi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Yi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Yi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Yi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==oa&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class ix extends Lt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class rx extends Lt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class sx extends Lt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class ox extends Lt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Yf extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ax extends Lt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Zf extends Lt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class lx extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class Ie extends Lt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class cx extends Lt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let ux=0;const ei=new tt,yh=new xt,Ns=new D,Un=new ls,No=new ls,an=new D;class at extends $i{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ux++}),this.uuid=Bn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(z0(e)?Zf:Yf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new bn().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ei.makeRotationFromQuaternion(e),this.applyMatrix4(ei),this}rotateX(e){return ei.makeRotationX(e),this.applyMatrix4(ei),this}rotateY(e){return ei.makeRotationY(e),this.applyMatrix4(ei),this}rotateZ(e){return ei.makeRotationZ(e),this.applyMatrix4(ei),this}translate(e,t,n){return ei.makeTranslation(e,t,n),this.applyMatrix4(ei),this}scale(e,t,n){return ei.makeScale(e,t,n),this.applyMatrix4(ei),this}lookAt(e){return yh.lookAt(e),yh.updateMatrix(),this.applyMatrix4(yh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ns).negate(),this.translate(Ns.x,Ns.y,Ns.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ie(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ls);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Un.setFromBufferAttribute(r),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,Un.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,Un.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(Un.min),this.boundingBox.expandByPoint(Un.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new cs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Un.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const c=t[r];No.setFromBufferAttribute(c),this.morphTargetsRelative?(an.addVectors(Un.min,No.min),Un.expandByPoint(an),an.addVectors(Un.max,No.max),Un.expandByPoint(an)):(Un.expandByPoint(No.min),Un.expandByPoint(No.max))}Un.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)an.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(an));if(t)for(let r=0,a=t.length;r<a;r++){const c=t[r],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)an.fromBufferAttribute(c,h),u&&(Ns.fromBufferAttribute(e,h),an.add(Ns)),i=Math.max(i,n.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Lt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let O=0;O<c;O++)h[O]=new D,d[O]=new D;const p=new D,m=new D,v=new D,x=new fe,_=new fe,y=new fe,S=new D,b=new D;function w(O,H,K){p.fromArray(i,O*3),m.fromArray(i,H*3),v.fromArray(i,K*3),x.fromArray(a,O*2),_.fromArray(a,H*2),y.fromArray(a,K*2),m.sub(p),v.sub(p),_.sub(x),y.sub(x);const X=1/(_.x*y.y-y.x*_.y);isFinite(X)&&(S.copy(m).multiplyScalar(y.y).addScaledVector(v,-_.y).multiplyScalar(X),b.copy(v).multiplyScalar(_.x).addScaledVector(m,-y.x).multiplyScalar(X),h[O].add(S),h[H].add(S),h[K].add(S),d[O].add(b),d[H].add(b),d[K].add(b))}let E=this.groups;E.length===0&&(E=[{start:0,count:n.length}]);for(let O=0,H=E.length;O<H;++O){const K=E[O],X=K.start,V=K.count;for(let ee=X,oe=X+V;ee<oe;ee+=3)w(n[ee+0],n[ee+1],n[ee+2])}const C=new D,L=new D,N=new D,A=new D;function P(O){N.fromArray(r,O*3),A.copy(N);const H=h[O];C.copy(H),C.sub(N.multiplyScalar(N.dot(H))).normalize(),L.crossVectors(A,H);const X=L.dot(d[O])<0?-1:1;u[O*4]=C.x,u[O*4+1]=C.y,u[O*4+2]=C.z,u[O*4+3]=X}for(let O=0,H=E.length;O<H;++O){const K=E[O],X=K.start,V=K.count;for(let ee=X,oe=X+V;ee<oe;ee+=3)P(n[ee+0]),P(n[ee+1]),P(n[ee+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Lt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new D,r=new D,a=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,v=e.count;m<v;m+=3){const x=e.getX(m+0),_=e.getX(m+1),y=e.getX(m+2);i.fromBufferAttribute(t,x),r.fromBufferAttribute(t,_),a.fromBufferAttribute(t,y),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,_),h.fromBufferAttribute(n,y),c.add(d),u.add(d),h.add(d),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(_,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),r.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)an.fromBufferAttribute(e,t),an.normalize(),e.setXYZ(t,an.x,an.y,an.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let v=0,x=0;for(let _=0,y=u.length;_<y;_++){c.isInterleavedBufferAttribute?v=u[_]*c.data.stride+c.offset:v=u[_]*d;for(let S=0;S<d;S++)m[x++]=h[v++]}return new Lt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new at,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const r=this.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];d.push(v.toJSON(e.data))}d.length>0&&(i[u]=d,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const r=e.morphAttributes;for(const h in r){const d=[],p=r[h];for(let m=0,v=p.length;m<v;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,d=a.length;h<d;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const mm=new tt,Fs=new ya,xh=new cs,Fo=new D,Oo=new D,ko=new D,Mh=new D,Hl=new D,Wl=new fe,Xl=new fe,ql=new fe,Sh=new D,Yl=new D;class un extends xt{constructor(e=new at,t=new wr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(r&&c){Hl.set(0,0,0);for(let u=0,h=r.length;u<h;u++){const d=c[u],p=r[u];d!==0&&(Mh.fromBufferAttribute(p,e),a?Hl.addScaledVector(Mh,d):Hl.addScaledVector(Mh.sub(t),d))}t.add(Hl)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),xh.copy(n.boundingSphere),xh.applyMatrix4(r),e.ray.intersectsSphere(xh)===!1)||(mm.copy(r).invert(),Fs.copy(e.ray).applyMatrix4(mm),n.boundingBox!==null&&Fs.intersectsBox(n.boundingBox)===!1))return;let a;const c=n.index,u=n.attributes.position,h=n.attributes.uv,d=n.attributes.uv2,p=n.groups,m=n.drawRange;if(c!==null)if(Array.isArray(i))for(let v=0,x=p.length;v<x;v++){const _=p[v],y=i[_.materialIndex],S=Math.max(_.start,m.start),b=Math.min(c.count,Math.min(_.start+_.count,m.start+m.count));for(let w=S,E=b;w<E;w+=3){const C=c.getX(w),L=c.getX(w+1),N=c.getX(w+2);a=Zl(this,y,e,Fs,h,d,C,L,N),a&&(a.faceIndex=Math.floor(w/3),a.face.materialIndex=_.materialIndex,t.push(a))}}else{const v=Math.max(0,m.start),x=Math.min(c.count,m.start+m.count);for(let _=v,y=x;_<y;_+=3){const S=c.getX(_),b=c.getX(_+1),w=c.getX(_+2);a=Zl(this,i,e,Fs,h,d,S,b,w),a&&(a.faceIndex=Math.floor(_/3),t.push(a))}}else if(u!==void 0)if(Array.isArray(i))for(let v=0,x=p.length;v<x;v++){const _=p[v],y=i[_.materialIndex],S=Math.max(_.start,m.start),b=Math.min(u.count,Math.min(_.start+_.count,m.start+m.count));for(let w=S,E=b;w<E;w+=3){const C=w,L=w+1,N=w+2;a=Zl(this,y,e,Fs,h,d,C,L,N),a&&(a.faceIndex=Math.floor(w/3),a.face.materialIndex=_.materialIndex,t.push(a))}}else{const v=Math.max(0,m.start),x=Math.min(u.count,m.start+m.count);for(let _=v,y=x;_<y;_+=3){const S=_,b=_+1,w=_+2;a=Zl(this,i,e,Fs,h,d,S,b,w),a&&(a.faceIndex=Math.floor(_/3),t.push(a))}}}}function hx(l,e,t,n,i,r,a,c){let u;if(e.side===In?u=n.intersectTriangle(a,r,i,!0,c):u=n.intersectTriangle(i,r,a,e.side===Ji,c),u===null)return null;Yl.copy(c),Yl.applyMatrix4(l.matrixWorld);const h=t.ray.origin.distanceTo(Yl);return h<t.near||h>t.far?null:{distance:h,point:Yl.clone(),object:l}}function Zl(l,e,t,n,i,r,a,c,u){l.getVertexPosition(a,Fo),l.getVertexPosition(c,Oo),l.getVertexPosition(u,ko);const h=hx(l,e,t,n,Fo,Oo,ko,Sh);if(h){i&&(Wl.fromBufferAttribute(i,a),Xl.fromBufferAttribute(i,c),ql.fromBufferAttribute(i,u),h.uv=ni.getUV(Sh,Fo,Oo,ko,Wl,Xl,ql,new fe)),r&&(Wl.fromBufferAttribute(r,a),Xl.fromBufferAttribute(r,c),ql.fromBufferAttribute(r,u),h.uv2=ni.getUV(Sh,Fo,Oo,ko,Wl,Xl,ql,new fe));const d={a,b:c,c:u,normal:new D,materialIndex:0};ni.getNormal(Fo,Oo,ko,d.normal),h.face=d}return h}class br extends at{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const c=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const u=[],h=[],d=[],p=[];let m=0,v=0;x("z","y","x",-1,-1,n,t,e,a,r,0),x("z","y","x",1,-1,n,t,-e,a,r,1),x("x","z","y",1,1,e,n,t,i,a,2),x("x","z","y",1,-1,e,n,-t,i,a,3),x("x","y","z",1,-1,e,t,n,i,r,4),x("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Ie(h,3)),this.setAttribute("normal",new Ie(d,3)),this.setAttribute("uv",new Ie(p,2));function x(_,y,S,b,w,E,C,L,N,A,P){const O=E/N,H=C/A,K=E/2,X=C/2,V=L/2,ee=N+1,oe=A+1;let de=0,k=0;const J=new D;for(let j=0;j<oe;j++){const he=j*H-X;for(let W=0;W<ee;W++){const ue=W*O-K;J[_]=ue*b,J[y]=he*w,J[S]=V,h.push(J.x,J.y,J.z),J[_]=0,J[y]=0,J[S]=L>0?1:-1,d.push(J.x,J.y,J.z),p.push(W/N),p.push(1-j/A),de+=1}}for(let j=0;j<A;j++)for(let he=0;he<N;he++){const W=m+he+ee*j,ue=m+he+ee*(j+1),ge=m+(he+1)+ee*(j+1),_e=m+(he+1)+ee*j;u.push(W,ue,_e),u.push(ue,ge,_e),k+=6}c.addGroup(v,k,P),v+=k,m+=de}}static fromJSON(e){return new br(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function to(l){const e={};for(const t in l){e[t]={};for(const n in l[t]){const i=l[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function wn(l){const e={};for(let t=0;t<l.length;t++){const n=to(l[t]);for(const i in n)e[i]=n[i]}return e}function fx(l){const e=[];for(let t=0;t<l.length;t++)e.push(l[t].clone());return e}function F0(l){return l.getRenderTarget()===null&&l.outputEncoding===Tt?ui:eo}const O0={clone:to,merge:wn};var dx=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,px=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ti extends hn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=dx,this.fragmentShader=px,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=to(e.uniforms),this.uniformsGroups=fx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ma extends xt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new tt,this.projectionMatrix=new tt,this.projectionMatrixInverse=new tt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ln extends Ma{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=aa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(es*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return aa*2*Math.atan(Math.tan(es*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(es*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;r+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(r+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Os=-90,ks=1;class Jf extends xt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ln(Os,ks,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new ln(Os,ks,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const a=new ln(Os,ks,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const c=new ln(Os,ks,e,t);c.layers=this.layers,c.up.set(0,0,1),c.lookAt(0,-1,0),this.add(c);const u=new ln(Os,ks,e,t);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,1),this.add(u);const h=new ln(Os,ks,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,c,u,h]=this.children,d=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=fi,e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=p,e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class Sa extends Bt{constructor(e,t,n,i,r,a,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:_r,super(e,t,n,i,r,a,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class jf extends di{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Sa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Xt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new br(5,5,5),r=new Ti({name:"CubemapFromEquirect",uniforms:to(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:In,blending:Zi});r.uniforms.tEquirect.value=t;const a=new un(i,r),c=t.minFilter;return t.minFilter===xr&&(t.minFilter=Xt),new Jf(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const wh=new D,mx=new D,gx=new bn;class pr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=wh.subVectors(n,t).cross(mx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(wh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||gx.getNormalMatrix(e),i=this.coplanarPoint(wh).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Us=new cs,Jl=new D;class Gc{constructor(e=new pr,t=new pr,n=new pr,i=new pr,r=new pr,a=new pr){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],c=n[3],u=n[4],h=n[5],d=n[6],p=n[7],m=n[8],v=n[9],x=n[10],_=n[11],y=n[12],S=n[13],b=n[14],w=n[15];return t[0].setComponents(c-i,p-u,_-m,w-y).normalize(),t[1].setComponents(c+i,p+u,_+m,w+y).normalize(),t[2].setComponents(c+r,p+h,_+v,w+S).normalize(),t[3].setComponents(c-r,p-h,_-v,w-S).normalize(),t[4].setComponents(c-a,p-d,_-x,w-b).normalize(),t[5].setComponents(c+a,p+d,_+x,w+b).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Us.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Us)}intersectsSprite(e){return Us.center.set(0,0,0),Us.radius=.7071067811865476,Us.applyMatrix4(e.matrixWorld),this.intersectsSphere(Us)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Jl.x=i.normal.x>0?e.max.x:e.min.x,Jl.y=i.normal.y>0?e.max.y:e.min.y,Jl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Jl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function k0(){let l=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=l.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=l.requestAnimationFrame(i),e=!0)},stop:function(){l.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){l=r}}}function vx(l,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,v=l.createBuffer();l.bindBuffer(d,v),l.bufferData(d,p,m),h.onUploadCallback();let x;if(p instanceof Float32Array)x=5126;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)x=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else x=5123;else if(p instanceof Int16Array)x=5122;else if(p instanceof Uint32Array)x=5125;else if(p instanceof Int32Array)x=5124;else if(p instanceof Int8Array)x=5120;else if(p instanceof Uint8Array)x=5121;else if(p instanceof Uint8ClampedArray)x=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:v,type:x,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function r(h,d,p){const m=d.array,v=d.updateRange;l.bindBuffer(p,h),v.count===-1?l.bufferSubData(p,0,m):(t?l.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m,v.offset,v.count):l.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m.subarray(v.offset,v.offset+v.count)),v.count=-1),d.onUploadCallback()}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(l.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(r(p.buffer,h,d),p.version=h.version)}return{get:a,remove:c,update:u}}class so extends at{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,v=[],x=[],_=[],y=[];for(let S=0;S<d;S++){const b=S*m-a;for(let w=0;w<h;w++){const E=w*p-r;x.push(E,-b,0),_.push(0,0,1),y.push(w/c),y.push(1-S/u)}}for(let S=0;S<u;S++)for(let b=0;b<c;b++){const w=b+h*S,E=b+h*(S+1),C=b+1+h*(S+1),L=b+1+h*S;v.push(w,E,L),v.push(E,C,L)}this.setIndex(v),this.setAttribute("position",new Ie(x,3)),this.setAttribute("normal",new Ie(_,3)),this.setAttribute("uv",new Ie(y,2))}static fromJSON(e){return new so(e.width,e.height,e.widthSegments,e.heightSegments)}}var _x=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,yx=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xx=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Mx=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Sx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,wx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,bx="vec3 transformed = vec3( position );",Tx=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ex=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Ax=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Cx=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Px=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Lx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Rx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Ix=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Dx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,zx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Nx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Fx=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ox=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,kx=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ux=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Bx=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Vx=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Gx=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Hx=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Wx="gl_FragColor = linearToOutputTexel( gl_FragColor );",Xx=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,qx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Yx=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Zx=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Jx=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,jx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Qx=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Kx=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,$x=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,e1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,t1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,n1=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,i1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,r1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,s1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,o1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,a1=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,l1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,c1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,u1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,h1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,f1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,d1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,p1=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,m1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,g1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,v1=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_1=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,y1=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,x1=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,M1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,S1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,w1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,b1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,T1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,E1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,A1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,C1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,P1=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,L1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,R1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,I1=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,D1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,z1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,N1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,F1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,O1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,k1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,U1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,B1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,V1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,G1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,H1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,W1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,X1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,q1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Y1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Z1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,J1=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,j1=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Q1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,K1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,$1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,eM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,tM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,iM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,sM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,oM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,aM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,lM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,cM=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,uM=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,hM=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,fM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,dM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,pM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,mM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const gM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,vM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,_M=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,MM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,SM=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,wM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,bM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,TM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,EM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,AM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,CM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,PM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,LM=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,RM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,DM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,NM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,OM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,kM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,VM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,HM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,WM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,XM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qM=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,YM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ZM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,JM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ot={alphamap_fragment:_x,alphamap_pars_fragment:yx,alphatest_fragment:xx,alphatest_pars_fragment:Mx,aomap_fragment:Sx,aomap_pars_fragment:wx,begin_vertex:bx,beginnormal_vertex:Tx,bsdfs:Ex,iridescence_fragment:Ax,bumpmap_pars_fragment:Cx,clipping_planes_fragment:Px,clipping_planes_pars_fragment:Lx,clipping_planes_pars_vertex:Rx,clipping_planes_vertex:Ix,color_fragment:Dx,color_pars_fragment:zx,color_pars_vertex:Nx,color_vertex:Fx,common:Ox,cube_uv_reflection_fragment:kx,defaultnormal_vertex:Ux,displacementmap_pars_vertex:Bx,displacementmap_vertex:Vx,emissivemap_fragment:Gx,emissivemap_pars_fragment:Hx,encodings_fragment:Wx,encodings_pars_fragment:Xx,envmap_fragment:qx,envmap_common_pars_fragment:Yx,envmap_pars_fragment:Zx,envmap_pars_vertex:Jx,envmap_physical_pars_fragment:a1,envmap_vertex:jx,fog_vertex:Qx,fog_pars_vertex:Kx,fog_fragment:$x,fog_pars_fragment:e1,gradientmap_pars_fragment:t1,lightmap_fragment:n1,lightmap_pars_fragment:i1,lights_lambert_fragment:r1,lights_lambert_pars_fragment:s1,lights_pars_begin:o1,lights_toon_fragment:l1,lights_toon_pars_fragment:c1,lights_phong_fragment:u1,lights_phong_pars_fragment:h1,lights_physical_fragment:f1,lights_physical_pars_fragment:d1,lights_fragment_begin:p1,lights_fragment_maps:m1,lights_fragment_end:g1,logdepthbuf_fragment:v1,logdepthbuf_pars_fragment:_1,logdepthbuf_pars_vertex:y1,logdepthbuf_vertex:x1,map_fragment:M1,map_pars_fragment:S1,map_particle_fragment:w1,map_particle_pars_fragment:b1,metalnessmap_fragment:T1,metalnessmap_pars_fragment:E1,morphcolor_vertex:A1,morphnormal_vertex:C1,morphtarget_pars_vertex:P1,morphtarget_vertex:L1,normal_fragment_begin:R1,normal_fragment_maps:I1,normal_pars_fragment:D1,normal_pars_vertex:z1,normal_vertex:N1,normalmap_pars_fragment:F1,clearcoat_normal_fragment_begin:O1,clearcoat_normal_fragment_maps:k1,clearcoat_pars_fragment:U1,iridescence_pars_fragment:B1,output_fragment:V1,packing:G1,premultiplied_alpha_fragment:H1,project_vertex:W1,dithering_fragment:X1,dithering_pars_fragment:q1,roughnessmap_fragment:Y1,roughnessmap_pars_fragment:Z1,shadowmap_pars_fragment:J1,shadowmap_pars_vertex:j1,shadowmap_vertex:Q1,shadowmask_pars_fragment:K1,skinbase_vertex:$1,skinning_pars_vertex:eM,skinning_vertex:tM,skinnormal_vertex:nM,specularmap_fragment:iM,specularmap_pars_fragment:rM,tonemapping_fragment:sM,tonemapping_pars_fragment:oM,transmission_fragment:aM,transmission_pars_fragment:lM,uv_pars_fragment:cM,uv_pars_vertex:uM,uv_vertex:hM,uv2_pars_fragment:fM,uv2_pars_vertex:dM,uv2_vertex:pM,worldpos_vertex:mM,background_vert:gM,background_frag:vM,backgroundCube_vert:_M,backgroundCube_frag:yM,cube_vert:xM,cube_frag:MM,depth_vert:SM,depth_frag:wM,distanceRGBA_vert:bM,distanceRGBA_frag:TM,equirect_vert:EM,equirect_frag:AM,linedashed_vert:CM,linedashed_frag:PM,meshbasic_vert:LM,meshbasic_frag:RM,meshlambert_vert:IM,meshlambert_frag:DM,meshmatcap_vert:zM,meshmatcap_frag:NM,meshnormal_vert:FM,meshnormal_frag:OM,meshphong_vert:kM,meshphong_frag:UM,meshphysical_vert:BM,meshphysical_frag:VM,meshtoon_vert:GM,meshtoon_frag:HM,points_vert:WM,points_frag:XM,shadow_vert:qM,shadow_frag:YM,sprite_vert:ZM,sprite_frag:JM},Se={common:{diffuse:{value:new Pe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new bn},uv2Transform:{value:new bn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Pe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Pe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new bn}},sprite:{diffuse:{value:new Pe(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new bn}}},hi={basic:{uniforms:wn([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.fog]),vertexShader:ot.meshbasic_vert,fragmentShader:ot.meshbasic_frag},lambert:{uniforms:wn([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,Se.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ot.meshlambert_vert,fragmentShader:ot.meshlambert_frag},phong:{uniforms:wn([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,Se.lights,{emissive:{value:new Pe(0)},specular:{value:new Pe(1118481)},shininess:{value:30}}]),vertexShader:ot.meshphong_vert,fragmentShader:ot.meshphong_frag},standard:{uniforms:wn([Se.common,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.roughnessmap,Se.metalnessmap,Se.fog,Se.lights,{emissive:{value:new Pe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag},toon:{uniforms:wn([Se.common,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.gradientmap,Se.fog,Se.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ot.meshtoon_vert,fragmentShader:ot.meshtoon_frag},matcap:{uniforms:wn([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,{matcap:{value:null}}]),vertexShader:ot.meshmatcap_vert,fragmentShader:ot.meshmatcap_frag},points:{uniforms:wn([Se.points,Se.fog]),vertexShader:ot.points_vert,fragmentShader:ot.points_frag},dashed:{uniforms:wn([Se.common,Se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ot.linedashed_vert,fragmentShader:ot.linedashed_frag},depth:{uniforms:wn([Se.common,Se.displacementmap]),vertexShader:ot.depth_vert,fragmentShader:ot.depth_frag},normal:{uniforms:wn([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,{opacity:{value:1}}]),vertexShader:ot.meshnormal_vert,fragmentShader:ot.meshnormal_frag},sprite:{uniforms:wn([Se.sprite,Se.fog]),vertexShader:ot.sprite_vert,fragmentShader:ot.sprite_frag},background:{uniforms:{uvTransform:{value:new bn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ot.background_vert,fragmentShader:ot.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ot.backgroundCube_vert,fragmentShader:ot.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ot.cube_vert,fragmentShader:ot.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ot.equirect_vert,fragmentShader:ot.equirect_frag},distanceRGBA:{uniforms:wn([Se.common,Se.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ot.distanceRGBA_vert,fragmentShader:ot.distanceRGBA_frag},shadow:{uniforms:wn([Se.lights,Se.fog,{color:{value:new Pe(0)},opacity:{value:1}}]),vertexShader:ot.shadow_vert,fragmentShader:ot.shadow_frag}};hi.physical={uniforms:wn([hi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new fe(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Pe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Pe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Pe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag};const jl={r:0,b:0,g:0};function jM(l,e,t,n,i,r,a){const c=new Pe(0);let u=r===!0?0:1,h,d,p=null,m=0,v=null;function x(y,S){let b=!1,w=S.isScene===!0?S.background:null;w&&w.isTexture&&(w=(S.backgroundBlurriness>0?t:e).get(w));const E=l.xr,C=E.getSession&&E.getSession();C&&C.environmentBlendMode==="additive"&&(w=null),w===null?_(c,u):w&&w.isColor&&(_(w,1),b=!0),(l.autoClear||b)&&l.clear(l.autoClearColor,l.autoClearDepth,l.autoClearStencil),w&&(w.isCubeTexture||w.mapping===ro)?(d===void 0&&(d=new un(new br(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:to(hi.backgroundCube.uniforms),vertexShader:hi.backgroundCube.vertexShader,fragmentShader:hi.backgroundCube.fragmentShader,side:In,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(L,N,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=w,d.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=S.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=S.backgroundIntensity,d.material.toneMapped=w.encoding!==Tt,(p!==w||m!==w.version||v!==l.toneMapping)&&(d.material.needsUpdate=!0,p=w,m=w.version,v=l.toneMapping),d.layers.enableAll(),y.unshift(d,d.geometry,d.material,0,0,null)):w&&w.isTexture&&(h===void 0&&(h=new un(new so(2,2),new Ti({name:"BackgroundMaterial",uniforms:to(hi.background.uniforms),vertexShader:hi.background.vertexShader,fragmentShader:hi.background.fragmentShader,side:Ji,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=w,h.material.uniforms.backgroundIntensity.value=S.backgroundIntensity,h.material.toneMapped=w.encoding!==Tt,w.matrixAutoUpdate===!0&&w.updateMatrix(),h.material.uniforms.uvTransform.value.copy(w.matrix),(p!==w||m!==w.version||v!==l.toneMapping)&&(h.material.needsUpdate=!0,p=w,m=w.version,v=l.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function _(y,S){y.getRGB(jl,F0(l)),n.buffers.color.setClear(jl.r,jl.g,jl.b,S,a)}return{getClearColor:function(){return c},setClearColor:function(y,S=1){c.set(y),u=S,_(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(y){u=y,_(c,u)},render:x}}function QM(l,e,t,n){const i=l.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,c={},u=y(null);let h=u,d=!1;function p(V,ee,oe,de,k){let J=!1;if(a){const j=_(de,oe,ee);h!==j&&(h=j,v(h.object)),J=S(V,de,oe,k),J&&b(V,de,oe,k)}else{const j=ee.wireframe===!0;(h.geometry!==de.id||h.program!==oe.id||h.wireframe!==j)&&(h.geometry=de.id,h.program=oe.id,h.wireframe=j,J=!0)}k!==null&&t.update(k,34963),(J||d)&&(d=!1,A(V,ee,oe,de),k!==null&&l.bindBuffer(34963,t.get(k).buffer))}function m(){return n.isWebGL2?l.createVertexArray():r.createVertexArrayOES()}function v(V){return n.isWebGL2?l.bindVertexArray(V):r.bindVertexArrayOES(V)}function x(V){return n.isWebGL2?l.deleteVertexArray(V):r.deleteVertexArrayOES(V)}function _(V,ee,oe){const de=oe.wireframe===!0;let k=c[V.id];k===void 0&&(k={},c[V.id]=k);let J=k[ee.id];J===void 0&&(J={},k[ee.id]=J);let j=J[de];return j===void 0&&(j=y(m()),J[de]=j),j}function y(V){const ee=[],oe=[],de=[];for(let k=0;k<i;k++)ee[k]=0,oe[k]=0,de[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ee,enabledAttributes:oe,attributeDivisors:de,object:V,attributes:{},index:null}}function S(V,ee,oe,de){const k=h.attributes,J=ee.attributes;let j=0;const he=oe.getAttributes();for(const W in he)if(he[W].location>=0){const ge=k[W];let _e=J[W];if(_e===void 0&&(W==="instanceMatrix"&&V.instanceMatrix&&(_e=V.instanceMatrix),W==="instanceColor"&&V.instanceColor&&(_e=V.instanceColor)),ge===void 0||ge.attribute!==_e||_e&&ge.data!==_e.data)return!0;j++}return h.attributesNum!==j||h.index!==de}function b(V,ee,oe,de){const k={},J=ee.attributes;let j=0;const he=oe.getAttributes();for(const W in he)if(he[W].location>=0){let ge=J[W];ge===void 0&&(W==="instanceMatrix"&&V.instanceMatrix&&(ge=V.instanceMatrix),W==="instanceColor"&&V.instanceColor&&(ge=V.instanceColor));const _e={};_e.attribute=ge,ge&&ge.data&&(_e.data=ge.data),k[W]=_e,j++}h.attributes=k,h.attributesNum=j,h.index=de}function w(){const V=h.newAttributes;for(let ee=0,oe=V.length;ee<oe;ee++)V[ee]=0}function E(V){C(V,0)}function C(V,ee){const oe=h.newAttributes,de=h.enabledAttributes,k=h.attributeDivisors;oe[V]=1,de[V]===0&&(l.enableVertexAttribArray(V),de[V]=1),k[V]!==ee&&((n.isWebGL2?l:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,ee),k[V]=ee)}function L(){const V=h.newAttributes,ee=h.enabledAttributes;for(let oe=0,de=ee.length;oe<de;oe++)ee[oe]!==V[oe]&&(l.disableVertexAttribArray(oe),ee[oe]=0)}function N(V,ee,oe,de,k,J){n.isWebGL2===!0&&(oe===5124||oe===5125)?l.vertexAttribIPointer(V,ee,oe,k,J):l.vertexAttribPointer(V,ee,oe,de,k,J)}function A(V,ee,oe,de){if(n.isWebGL2===!1&&(V.isInstancedMesh||de.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;w();const k=de.attributes,J=oe.getAttributes(),j=ee.defaultAttributeValues;for(const he in J){const W=J[he];if(W.location>=0){let ue=k[he];if(ue===void 0&&(he==="instanceMatrix"&&V.instanceMatrix&&(ue=V.instanceMatrix),he==="instanceColor"&&V.instanceColor&&(ue=V.instanceColor)),ue!==void 0){const ge=ue.normalized,_e=ue.itemSize,Q=t.get(ue);if(Q===void 0)continue;const De=Q.buffer,ze=Q.type,Ne=Q.bytesPerElement;if(ue.isInterleavedBufferAttribute){const Me=ue.data,Je=Me.stride,le=ue.offset;if(Me.isInstancedInterleavedBuffer){for(let ie=0;ie<W.locationSize;ie++)C(W.location+ie,Me.meshPerAttribute);V.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=Me.meshPerAttribute*Me.count)}else for(let ie=0;ie<W.locationSize;ie++)E(W.location+ie);l.bindBuffer(34962,De);for(let ie=0;ie<W.locationSize;ie++)N(W.location+ie,_e/W.locationSize,ze,ge,Je*Ne,(le+_e/W.locationSize*ie)*Ne)}else{if(ue.isInstancedBufferAttribute){for(let Me=0;Me<W.locationSize;Me++)C(W.location+Me,ue.meshPerAttribute);V.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let Me=0;Me<W.locationSize;Me++)E(W.location+Me);l.bindBuffer(34962,De);for(let Me=0;Me<W.locationSize;Me++)N(W.location+Me,_e/W.locationSize,ze,ge,_e*Ne,_e/W.locationSize*Me*Ne)}}else if(j!==void 0){const ge=j[he];if(ge!==void 0)switch(ge.length){case 2:l.vertexAttrib2fv(W.location,ge);break;case 3:l.vertexAttrib3fv(W.location,ge);break;case 4:l.vertexAttrib4fv(W.location,ge);break;default:l.vertexAttrib1fv(W.location,ge)}}}}L()}function P(){K();for(const V in c){const ee=c[V];for(const oe in ee){const de=ee[oe];for(const k in de)x(de[k].object),delete de[k];delete ee[oe]}delete c[V]}}function O(V){if(c[V.id]===void 0)return;const ee=c[V.id];for(const oe in ee){const de=ee[oe];for(const k in de)x(de[k].object),delete de[k];delete ee[oe]}delete c[V.id]}function H(V){for(const ee in c){const oe=c[ee];if(oe[V.id]===void 0)continue;const de=oe[V.id];for(const k in de)x(de[k].object),delete de[k];delete oe[V.id]}}function K(){X(),d=!0,h!==u&&(h=u,v(h.object))}function X(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:K,resetDefaultState:X,dispose:P,releaseStatesOfGeometry:O,releaseStatesOfProgram:H,initAttributes:w,enableAttribute:E,disableUnusedAttributes:L}}function KM(l,e,t,n){const i=n.isWebGL2;let r;function a(h){r=h}function c(h,d){l.drawArrays(r,h,d),t.update(d,r,1)}function u(h,d,p){if(p===0)return;let m,v;if(i)m=l,v="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[v](r,h,d,p),t.update(d,r,p)}this.setMode=a,this.render=c,this.renderInstances=u}function $M(l,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=l.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(N){if(N==="highp"){if(l.getShaderPrecisionFormat(35633,36338).precision>0&&l.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";N="mediump"}return N==="mediump"&&l.getShaderPrecisionFormat(35633,36337).precision>0&&l.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&l instanceof WebGL2RenderingContext;let c=t.precision!==void 0?t.precision:"highp";const u=r(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=a||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=l.getParameter(34930),m=l.getParameter(35660),v=l.getParameter(3379),x=l.getParameter(34076),_=l.getParameter(34921),y=l.getParameter(36347),S=l.getParameter(36348),b=l.getParameter(36349),w=m>0,E=a||e.has("OES_texture_float"),C=w&&E,L=a?l.getParameter(36183):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:x,maxAttributes:_,maxVertexUniforms:y,maxVaryings:S,maxFragmentUniforms:b,vertexTextures:w,floatFragmentTextures:E,floatVertexTextures:C,maxSamples:L}}function eS(l){const e=this;let t=null,n=0,i=!1,r=!1;const a=new pr,c=new bn,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,v){const x=p.clippingPlanes,_=p.clipIntersection,y=p.clipShadows,S=l.get(p);if(!i||x===null||x.length===0||r&&!y)r?d(null):h();else{const b=r?0:n,w=b*4;let E=S.clippingState||null;u.value=E,E=d(x,m,w,v);for(let C=0;C!==w;++C)E[C]=t[C];S.clippingState=E,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=b}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,v,x){const _=p!==null?p.length:0;let y=null;if(_!==0){if(y=u.value,x!==!0||y===null){const S=v+_*4,b=m.matrixWorldInverse;c.getNormalMatrix(b),(y===null||y.length<S)&&(y=new Float32Array(S));for(let w=0,E=v;w!==_;++w,E+=4)a.copy(p[w]).applyMatrix4(b,c),a.normal.toArray(y,E),y[E+3]=a.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,y}}function tS(l){let e=new WeakMap;function t(a,c){return c===$o?a.mapping=_r:c===ea&&(a.mapping=yr),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const c=a.mapping;if(c===$o||c===ea)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new jf(u.height/2);return h.fromEquirectangularTexture(l,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class wa extends Ma{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(r,a,c,u,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Js=4,gm=[.125,.215,.35,.446,.526,.582],qr=20,bh=new wa,vm=new Pe;let Th=null;const Wr=(1+Math.sqrt(5))/2,Bs=1/Wr,_m=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,Wr,Bs),new D(0,Wr,-Bs),new D(Bs,0,Wr),new D(-Bs,0,Wr),new D(Wr,Bs,0),new D(-Wr,Bs,0)];class bf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Th=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Mm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=xm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Th),e.scissorTest=!1,Ql(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===_r||e.mapping===yr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Th=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Xt,minFilter:Xt,generateMipmaps:!1,type:$s,format:Rn,encoding:Qi,depthBuffer:!1},i=ym(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ym(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=nS(r)),this._blurMaterial=iS(r,e,t)}return i}_compileMaterial(e){const t=new un(this._lodPlanes[0],e);this._renderer.compile(t,bh)}_sceneToCubeUV(e,t,n,i){const c=new ln(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(vm),d.toneMapping=fi,d.autoClear=!1;const v=new wr({name:"PMREM.Background",side:In,depthWrite:!1,depthTest:!1}),x=new un(new br,v);let _=!1;const y=e.background;y?y.isColor&&(v.color.copy(y),e.background=null,_=!0):(v.color.copy(vm),_=!0);for(let S=0;S<6;S++){const b=S%3;b===0?(c.up.set(0,u[S],0),c.lookAt(h[S],0,0)):b===1?(c.up.set(0,0,u[S]),c.lookAt(0,h[S],0)):(c.up.set(0,u[S],0),c.lookAt(0,0,h[S]));const w=this._cubeSize;Ql(i,b*w,S>2?w:0,w,w),d.setRenderTarget(i),_&&d.render(x,c),d.render(e,c)}x.geometry.dispose(),x.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===_r||e.mapping===yr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Mm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=xm());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new un(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=e;const u=this._cubeSize;Ql(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,bh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=_m[(i-1)%_m.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new un(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,x=isFinite(r)?Math.PI/(2*v):2*Math.PI/(2*qr-1),_=r/x,y=isFinite(r)?1+Math.floor(d*_):qr;y>qr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${qr}`);const S=[];let b=0;for(let N=0;N<qr;++N){const A=N/_,P=Math.exp(-A*A/2);S.push(P),N===0?b+=P:N<y&&(b+=2*P)}for(let N=0;N<S.length;N++)S[N]=S[N]/b;m.envMap.value=e.texture,m.samples.value=y,m.weights.value=S,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=x,m.mipInt.value=w-n;const E=this._sizeLods[i],C=3*E*(i>w-Js?i-w+Js:0),L=4*(this._cubeSize-E);Ql(t,C,L,3*E,2*E),u.setRenderTarget(t),u.render(p,bh)}}function nS(l){const e=[],t=[],n=[];let i=l;const r=l-Js+1+gm.length;for(let a=0;a<r;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>l-Js?u=gm[a-l+Js-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],v=6,x=6,_=3,y=2,S=1,b=new Float32Array(_*x*v),w=new Float32Array(y*x*v),E=new Float32Array(S*x*v);for(let L=0;L<v;L++){const N=L%3*2/3-1,A=L>2?0:-1,P=[N,A,0,N+2/3,A,0,N+2/3,A+1,0,N,A,0,N+2/3,A+1,0,N,A+1,0];b.set(P,_*x*L),w.set(m,y*x*L);const O=[L,L,L,L,L,L];E.set(O,S*x*L)}const C=new at;C.setAttribute("position",new Lt(b,_)),C.setAttribute("uv",new Lt(w,y)),C.setAttribute("faceIndex",new Lt(E,S)),e.push(C),i>Js&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function ym(l,e,t){const n=new di(l,e,t);return n.texture.mapping=ro,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ql(l,e,t,n,i){l.viewport.set(e,t,n,i),l.scissor.set(e,t,n,i)}function iS(l,e,t){const n=new Float32Array(qr),i=new D(0,1,0);return new Ti({name:"SphericalGaussianBlur",defines:{n:qr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${l}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Qf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function xm(){return new Ti({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Qf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function Mm(){return new Ti({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Qf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function Qf(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function rS(l){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===$o||u===ea,d=u===_r||u===yr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new bf(l)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new bf(l));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",r),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function r(c){const u=c.target;u.removeEventListener("dispose",r);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function sS(l){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=l.getExtension("WEBGL_depth_texture")||l.getExtension("MOZ_WEBGL_depth_texture")||l.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=l.getExtension("WEBGL_compressed_texture_pvrtc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=l.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function oS(l,e,t,n){const i={},r=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const x in m.attributes)e.remove(m.attributes[x]);m.removeEventListener("dispose",a),delete i[m.id];const v=r.get(m);v&&(e.remove(v),r.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const x in m)e.update(m[x],34962);const v=p.morphAttributes;for(const x in v){const _=v[x];for(let y=0,S=_.length;y<S;y++)e.update(_[y],34962)}}function h(p){const m=[],v=p.index,x=p.attributes.position;let _=0;if(v!==null){const b=v.array;_=v.version;for(let w=0,E=b.length;w<E;w+=3){const C=b[w+0],L=b[w+1],N=b[w+2];m.push(C,L,L,N,N,C)}}else{const b=x.array;_=x.version;for(let w=0,E=b.length/3-1;w<E;w+=3){const C=w+0,L=w+1,N=w+2;m.push(C,L,L,N,N,C)}}const y=new(z0(m)?Zf:Yf)(m,1);y.version=_;const S=r.get(p);S&&e.remove(S),r.set(p,y)}function d(p){const m=r.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return r.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function aS(l,e,t,n){const i=n.isWebGL2;let r;function a(m){r=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,v){l.drawElements(r,v,c,m*u),t.update(v,r,1)}function p(m,v,x){if(x===0)return;let _,y;if(i)_=l,y="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[y](r,v,c,m*u,x),t.update(v,r,x)}this.setMode=a,this.setIndex=h,this.render=d,this.renderInstances=p}function lS(l){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,c){switch(t.calls++,a){case 4:t.triangles+=c*(r/3);break;case 1:t.lines+=c*(r/2);break;case 3:t.lines+=c*(r-1);break;case 2:t.lines+=c*r;break;case 0:t.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function cS(l,e){return l[0]-e[0]}function uS(l,e){return Math.abs(e[1])-Math.abs(l[1])}function hS(l,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new bt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p,m){const v=h.morphTargetInfluences;if(e.isWebGL2===!0){const x=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,_=x!==void 0?x.length:0;let y=r.get(d);if(y===void 0||y.count!==_){let ee=function(){X.dispose(),r.delete(d),d.removeEventListener("dispose",ee)};y!==void 0&&y.texture.dispose();const w=d.morphAttributes.position!==void 0,E=d.morphAttributes.normal!==void 0,C=d.morphAttributes.color!==void 0,L=d.morphAttributes.position||[],N=d.morphAttributes.normal||[],A=d.morphAttributes.color||[];let P=0;w===!0&&(P=1),E===!0&&(P=2),C===!0&&(P=3);let O=d.attributes.position.count*P,H=1;O>e.maxTextureSize&&(H=Math.ceil(O/e.maxTextureSize),O=e.maxTextureSize);const K=new Float32Array(O*H*4*_),X=new Vc(K,O,H,_);X.type=qi,X.needsUpdate=!0;const V=P*4;for(let oe=0;oe<_;oe++){const de=L[oe],k=N[oe],J=A[oe],j=O*H*4*oe;for(let he=0;he<de.count;he++){const W=he*V;w===!0&&(a.fromBufferAttribute(de,he),K[j+W+0]=a.x,K[j+W+1]=a.y,K[j+W+2]=a.z,K[j+W+3]=0),E===!0&&(a.fromBufferAttribute(k,he),K[j+W+4]=a.x,K[j+W+5]=a.y,K[j+W+6]=a.z,K[j+W+7]=0),C===!0&&(a.fromBufferAttribute(J,he),K[j+W+8]=a.x,K[j+W+9]=a.y,K[j+W+10]=a.z,K[j+W+11]=J.itemSize===4?a.w:1)}}y={count:_,texture:X,size:new fe(O,H)},r.set(d,y),d.addEventListener("dispose",ee)}let S=0;for(let w=0;w<v.length;w++)S+=v[w];const b=d.morphTargetsRelative?1:1-S;m.getUniforms().setValue(l,"morphTargetBaseInfluence",b),m.getUniforms().setValue(l,"morphTargetInfluences",v),m.getUniforms().setValue(l,"morphTargetsTexture",y.texture,t),m.getUniforms().setValue(l,"morphTargetsTextureSize",y.size)}else{const x=v===void 0?0:v.length;let _=n[d.id];if(_===void 0||_.length!==x){_=[];for(let E=0;E<x;E++)_[E]=[E,0];n[d.id]=_}for(let E=0;E<x;E++){const C=_[E];C[0]=E,C[1]=v[E]}_.sort(uS);for(let E=0;E<8;E++)E<x&&_[E][1]?(c[E][0]=_[E][0],c[E][1]=_[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(cS);const y=d.morphAttributes.position,S=d.morphAttributes.normal;let b=0;for(let E=0;E<8;E++){const C=c[E],L=C[0],N=C[1];L!==Number.MAX_SAFE_INTEGER&&N?(y&&d.getAttribute("morphTarget"+E)!==y[L]&&d.setAttribute("morphTarget"+E,y[L]),S&&d.getAttribute("morphNormal"+E)!==S[L]&&d.setAttribute("morphNormal"+E,S[L]),i[E]=N,b+=N):(y&&d.hasAttribute("morphTarget"+E)===!0&&d.deleteAttribute("morphTarget"+E),S&&d.hasAttribute("morphNormal"+E)===!0&&d.deleteAttribute("morphNormal"+E),i[E]=0)}const w=d.morphTargetsRelative?1:1-b;m.getUniforms().setValue(l,"morphTargetBaseInfluence",w),m.getUniforms().setValue(l,"morphTargetInfluences",i)}}return{update:u}}function fS(l,e,t,n){let i=new WeakMap;function r(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);return i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,34962),u.instanceColor!==null&&t.update(u.instanceColor,34962)),p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:a}}const U0=new Bt,B0=new Vc,V0=new qf,G0=new Sa,Sm=[],wm=[],bm=new Float32Array(16),Tm=new Float32Array(9),Em=new Float32Array(4);function oo(l,e,t){const n=l[0];if(n<=0||n>0)return l;const i=e*t;let r=Sm[i];if(r===void 0&&(r=new Float32Array(i),Sm[i]=r),e!==0){n.toArray(r,0);for(let a=1,c=0;a!==e;++a)c+=t,l[a].toArray(r,c)}return r}function $t(l,e){if(l.length!==e.length)return!1;for(let t=0,n=l.length;t<n;t++)if(l[t]!==e[t])return!1;return!0}function en(l,e){for(let t=0,n=e.length;t<n;t++)l[t]=e[t]}function Hc(l,e){let t=wm[e];t===void 0&&(t=new Int32Array(e),wm[e]=t);for(let n=0;n!==e;++n)t[n]=l.allocateTextureUnit();return t}function dS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1f(this.addr,e),t[0]=e)}function pS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;l.uniform2fv(this.addr,e),en(t,e)}}function mS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(l.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if($t(t,e))return;l.uniform3fv(this.addr,e),en(t,e)}}function gS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;l.uniform4fv(this.addr,e),en(t,e)}}function vS(l,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;l.uniformMatrix2fv(this.addr,!1,e),en(t,e)}else{if($t(t,n))return;Em.set(n),l.uniformMatrix2fv(this.addr,!1,Em),en(t,n)}}function _S(l,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;l.uniformMatrix3fv(this.addr,!1,e),en(t,e)}else{if($t(t,n))return;Tm.set(n),l.uniformMatrix3fv(this.addr,!1,Tm),en(t,n)}}function yS(l,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;l.uniformMatrix4fv(this.addr,!1,e),en(t,e)}else{if($t(t,n))return;bm.set(n),l.uniformMatrix4fv(this.addr,!1,bm),en(t,n)}}function xS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1i(this.addr,e),t[0]=e)}function MS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;l.uniform2iv(this.addr,e),en(t,e)}}function SS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($t(t,e))return;l.uniform3iv(this.addr,e),en(t,e)}}function wS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;l.uniform4iv(this.addr,e),en(t,e)}}function bS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1ui(this.addr,e),t[0]=e)}function TS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;l.uniform2uiv(this.addr,e),en(t,e)}}function ES(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($t(t,e))return;l.uniform3uiv(this.addr,e),en(t,e)}}function AS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;l.uniform4uiv(this.addr,e),en(t,e)}}function CS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||U0,i)}function PS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||V0,i)}function LS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||G0,i)}function RS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||B0,i)}function IS(l){switch(l){case 5126:return dS;case 35664:return pS;case 35665:return mS;case 35666:return gS;case 35674:return vS;case 35675:return _S;case 35676:return yS;case 5124:case 35670:return xS;case 35667:case 35671:return MS;case 35668:case 35672:return SS;case 35669:case 35673:return wS;case 5125:return bS;case 36294:return TS;case 36295:return ES;case 36296:return AS;case 35678:case 36198:case 36298:case 36306:case 35682:return CS;case 35679:case 36299:case 36307:return PS;case 35680:case 36300:case 36308:case 36293:return LS;case 36289:case 36303:case 36311:case 36292:return RS}}function DS(l,e){l.uniform1fv(this.addr,e)}function zS(l,e){const t=oo(e,this.size,2);l.uniform2fv(this.addr,t)}function NS(l,e){const t=oo(e,this.size,3);l.uniform3fv(this.addr,t)}function FS(l,e){const t=oo(e,this.size,4);l.uniform4fv(this.addr,t)}function OS(l,e){const t=oo(e,this.size,4);l.uniformMatrix2fv(this.addr,!1,t)}function kS(l,e){const t=oo(e,this.size,9);l.uniformMatrix3fv(this.addr,!1,t)}function US(l,e){const t=oo(e,this.size,16);l.uniformMatrix4fv(this.addr,!1,t)}function BS(l,e){l.uniform1iv(this.addr,e)}function VS(l,e){l.uniform2iv(this.addr,e)}function GS(l,e){l.uniform3iv(this.addr,e)}function HS(l,e){l.uniform4iv(this.addr,e)}function WS(l,e){l.uniform1uiv(this.addr,e)}function XS(l,e){l.uniform2uiv(this.addr,e)}function qS(l,e){l.uniform3uiv(this.addr,e)}function YS(l,e){l.uniform4uiv(this.addr,e)}function ZS(l,e,t){const n=this.cache,i=e.length,r=Hc(t,i);$t(n,r)||(l.uniform1iv(this.addr,r),en(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||U0,r[a])}function JS(l,e,t){const n=this.cache,i=e.length,r=Hc(t,i);$t(n,r)||(l.uniform1iv(this.addr,r),en(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||V0,r[a])}function jS(l,e,t){const n=this.cache,i=e.length,r=Hc(t,i);$t(n,r)||(l.uniform1iv(this.addr,r),en(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||G0,r[a])}function QS(l,e,t){const n=this.cache,i=e.length,r=Hc(t,i);$t(n,r)||(l.uniform1iv(this.addr,r),en(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||B0,r[a])}function KS(l){switch(l){case 5126:return DS;case 35664:return zS;case 35665:return NS;case 35666:return FS;case 35674:return OS;case 35675:return kS;case 35676:return US;case 5124:case 35670:return BS;case 35667:case 35671:return VS;case 35668:case 35672:return GS;case 35669:case 35673:return HS;case 5125:return WS;case 36294:return XS;case 36295:return qS;case 36296:return YS;case 35678:case 36198:case 36298:case 36306:case 35682:return ZS;case 35679:case 36299:case 36307:return JS;case 35680:case 36300:case 36308:case 36293:return jS;case 36289:case 36303:case 36311:case 36292:return QS}}class $S{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=IS(t.type)}}class ew{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=KS(t.type)}}class tw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const c=i[r];c.setValue(e,t[c.id],n)}}}const Eh=/(\w+)(\])?(\[|\.)?/g;function Am(l,e){l.seq.push(e),l.map[e.id]=e}function nw(l,e,t){const n=l.name,i=n.length;for(Eh.lastIndex=0;;){const r=Eh.exec(n),a=Eh.lastIndex;let c=r[1];const u=r[2]==="]",h=r[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){Am(t,h===void 0?new $S(c,l,e):new ew(c,l,e));break}else{let p=t.map[c];p===void 0&&(p=new tw(c),Am(t,p)),t=p}}}class Lc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);nw(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const c=t[r],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Cm(l,e,t){const n=l.createShader(e);return l.shaderSource(n,t),l.compileShader(n),n}let iw=0;function rw(l,e){const t=l.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}function sw(l){switch(l){case Qi:return["Linear","( value )"];case Tt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",l),["Linear","( value )"]}}function Pm(l,e,t){const n=l.getShaderParameter(e,35713),i=l.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+rw(l.getShaderSource(e),a)}else return i}function ow(l,e){const t=sw(e);return"vec4 "+l+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function aw(l,e){let t;switch(e){case a0:t="Linear";break;case l0:t="Reinhard";break;case c0:t="OptimizedCineon";break;case Bf:t="ACESFilmic";break;case u0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+l+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function lw(l){return[l.extensionDerivatives||l.envMapCubeUVHeight||l.bumpMap||l.tangentSpaceNormalMap||l.clearcoatNormalMap||l.flatShading||l.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(l.extensionFragDepth||l.logarithmicDepthBuffer)&&l.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",l.extensionDrawBuffers&&l.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(l.extensionShaderTextureLOD||l.envMap||l.transmission)&&l.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Yo).join(`
`)}function cw(l){const e=[];for(const t in l){const n=l[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function uw(l,e){const t={},n=l.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=l.getActiveAttrib(e,i),a=r.name;let c=1;r.type===35674&&(c=2),r.type===35675&&(c=3),r.type===35676&&(c=4),t[a]={type:r.type,location:l.getAttribLocation(e,a),locationSize:c}}return t}function Yo(l){return l!==""}function Lm(l,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return l.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Rm(l,e){return l.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hw=/^[ \t]*#include +<([\w\d./]+)>/gm;function Tf(l){return l.replace(hw,fw)}function fw(l,e){const t=ot[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Tf(t)}const dw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Im(l){return l.replace(dw,pw)}function pw(l,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Dm(l){let e="precision "+l.precision+` float;
precision `+l.precision+" int;";return l.precision==="highp"?e+=`
#define HIGH_PRECISION`:l.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:l.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function mw(l){let e="SHADOWMAP_TYPE_BASIC";return l.shadowMapType===kc?e="SHADOWMAP_TYPE_PCF":l.shadowMapType===Zo?e="SHADOWMAP_TYPE_PCF_SOFT":l.shadowMapType===Yr&&(e="SHADOWMAP_TYPE_VSM"),e}function gw(l){let e="ENVMAP_TYPE_CUBE";if(l.envMap)switch(l.envMapMode){case _r:case yr:e="ENVMAP_TYPE_CUBE";break;case ro:e="ENVMAP_TYPE_CUBE_UV";break}return e}function vw(l){let e="ENVMAP_MODE_REFLECTION";if(l.envMap)switch(l.envMapMode){case yr:e="ENVMAP_MODE_REFRACTION";break}return e}function _w(l){let e="ENVMAP_BLENDING_NONE";if(l.envMap)switch(l.combine){case _a:e="ENVMAP_BLENDING_MULTIPLY";break;case s0:e="ENVMAP_BLENDING_MIX";break;case o0:e="ENVMAP_BLENDING_ADD";break}return e}function yw(l){const e=l.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function xw(l,e,t,n){const i=l.getContext(),r=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=mw(t),h=gw(t),d=vw(t),p=_w(t),m=yw(t),v=t.isWebGL2?"":lw(t),x=cw(r),_=i.createProgram();let y,S,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=[x].filter(Yo).join(`
`),y.length>0&&(y+=`
`),S=[v,x].filter(Yo).join(`
`),S.length>0&&(S+=`
`)):(y=[Dm(t),"#define SHADER_NAME "+t.shaderName,x,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Yo).join(`
`),S=[v,Dm(t),"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==fi?"#define TONE_MAPPING":"",t.toneMapping!==fi?ot.tonemapping_pars_fragment:"",t.toneMapping!==fi?aw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ot.encodings_pars_fragment,ow("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Yo).join(`
`)),a=Tf(a),a=Lm(a,t),a=Rm(a,t),c=Tf(c),c=Lm(c,t),c=Rm(c,t),a=Im(a),c=Im(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,S=["#define varying in",t.glslVersion===Sf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Sf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+S);const w=b+y+a,E=b+S+c,C=Cm(i,35633,w),L=Cm(i,35632,E);if(i.attachShader(_,C),i.attachShader(_,L),t.index0AttributeName!==void 0?i.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),l.debug.checkShaderErrors){const P=i.getProgramInfoLog(_).trim(),O=i.getShaderInfoLog(C).trim(),H=i.getShaderInfoLog(L).trim();let K=!0,X=!0;if(i.getProgramParameter(_,35714)===!1){K=!1;const V=Pm(i,C,"vertex"),ee=Pm(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,35715)+`

Program Info Log: `+P+`
`+V+`
`+ee)}else P!==""?console.warn("THREE.WebGLProgram: Program Info Log:",P):(O===""||H==="")&&(X=!1);X&&(this.diagnostics={runnable:K,programLog:P,vertexShader:{log:O,prefix:y},fragmentShader:{log:H,prefix:S}})}i.deleteShader(C),i.deleteShader(L);let N;this.getUniforms=function(){return N===void 0&&(N=new Lc(i,_)),N};let A;return this.getAttributes=function(){return A===void 0&&(A=uw(i,_)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.name=t.shaderName,this.id=iw++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=C,this.fragmentShader=L,this}let Mw=0;class Sw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new ww(e),t.set(e,n)),n}}class ww{constructor(e){this.id=Mw++,this.code=e,this.usedTimes=0}}function bw(l,e,t,n,i,r,a){const c=new ns,u=new Sw,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(A,P,O,H,K){const X=H.fog,V=K.geometry,ee=A.isMeshStandardMaterial?H.environment:null,oe=(A.isMeshStandardMaterial?t:e).get(A.envMap||ee),de=oe&&oe.mapping===ro?oe.image.height:null,k=x[A.type];A.precision!==null&&(v=i.getMaxPrecision(A.precision),v!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",v,"instead."));const J=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,j=J!==void 0?J.length:0;let he=0;V.morphAttributes.position!==void 0&&(he=1),V.morphAttributes.normal!==void 0&&(he=2),V.morphAttributes.color!==void 0&&(he=3);let W,ue,ge,_e;if(k){const Je=hi[k];W=Je.vertexShader,ue=Je.fragmentShader}else W=A.vertexShader,ue=A.fragmentShader,u.update(A),ge=u.getVertexShaderID(A),_e=u.getFragmentShaderID(A);const Q=l.getRenderTarget(),De=A.alphaTest>0,ze=A.clearcoat>0,Ne=A.iridescence>0;return{isWebGL2:d,shaderID:k,shaderName:A.type,vertexShader:W,fragmentShader:ue,defines:A.defines,customVertexShaderID:ge,customFragmentShaderID:_e,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:v,instancing:K.isInstancedMesh===!0,instancingColor:K.isInstancedMesh===!0&&K.instanceColor!==null,supportsVertexTextures:m,outputEncoding:Q===null?l.outputEncoding:Q.isXRRenderTarget===!0?Q.texture.encoding:Qi,map:!!A.map,matcap:!!A.matcap,envMap:!!oe,envMapMode:oe&&oe.mapping,envMapCubeUVHeight:de,lightMap:!!A.lightMap,aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:A.normalMapType===R0,tangentSpaceNormalMap:A.normalMapType===Sr,decodeVideoTexture:!!A.map&&A.map.isVideoTexture===!0&&A.map.encoding===Tt,clearcoat:ze,clearcoatMap:ze&&!!A.clearcoatMap,clearcoatRoughnessMap:ze&&!!A.clearcoatRoughnessMap,clearcoatNormalMap:ze&&!!A.clearcoatNormalMap,iridescence:Ne,iridescenceMap:Ne&&!!A.iridescenceMap,iridescenceThicknessMap:Ne&&!!A.iridescenceThicknessMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,specularIntensityMap:!!A.specularIntensityMap,specularColorMap:!!A.specularColorMap,opaque:A.transparent===!1&&A.blending===Kr,alphaMap:!!A.alphaMap,alphaTest:De,gradientMap:!!A.gradientMap,sheen:A.sheen>0,sheenColorMap:!!A.sheenColorMap,sheenRoughnessMap:!!A.sheenRoughnessMap,transmission:A.transmission>0,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:!!A.normalMap&&!!V.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,vertexUvs:!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatMap||!!A.clearcoatRoughnessMap||!!A.clearcoatNormalMap||!!A.iridescenceMap||!!A.iridescenceThicknessMap||!!A.displacementMap||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||!!A.sheenColorMap||!!A.sheenRoughnessMap,uvsVertexOnly:!(A.map||A.bumpMap||A.normalMap||A.specularMap||A.alphaMap||A.emissiveMap||A.roughnessMap||A.metalnessMap||A.clearcoatNormalMap||A.iridescenceMap||A.iridescenceThicknessMap||A.transmission>0||A.transmissionMap||A.thicknessMap||A.specularIntensityMap||A.specularColorMap||A.sheen>0||A.sheenColorMap||A.sheenRoughnessMap)&&!!A.displacementMap,fog:!!X,useFog:A.fog===!0,fogExp2:X&&X.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:p,skinning:K.isSkinnedMesh===!0,morphTargets:V.morphAttributes.position!==void 0,morphNormals:V.morphAttributes.normal!==void 0,morphColors:V.morphAttributes.color!==void 0,morphTargetsCount:j,morphTextureStride:he,numDirLights:P.directional.length,numPointLights:P.point.length,numSpotLights:P.spot.length,numSpotLightMaps:P.spotLightMap.length,numRectAreaLights:P.rectArea.length,numHemiLights:P.hemi.length,numDirLightShadows:P.directionalShadowMap.length,numPointLightShadows:P.pointShadowMap.length,numSpotLightShadows:P.spotShadowMap.length,numSpotLightShadowsWithMaps:P.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:l.shadowMap.enabled&&O.length>0,shadowMapType:l.shadowMap.type,toneMapping:A.toneMapped?l.toneMapping:fi,physicallyCorrectLights:l.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Xi,flipSided:A.side===In,useDepthPacking:!!A.depthPacking,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function y(A){const P=[];if(A.shaderID?P.push(A.shaderID):(P.push(A.customVertexShaderID),P.push(A.customFragmentShaderID)),A.defines!==void 0)for(const O in A.defines)P.push(O),P.push(A.defines[O]);return A.isRawShaderMaterial===!1&&(S(P,A),b(P,A),P.push(l.outputEncoding)),P.push(A.customProgramCacheKey),P.join()}function S(A,P){A.push(P.precision),A.push(P.outputEncoding),A.push(P.envMapMode),A.push(P.envMapCubeUVHeight),A.push(P.combine),A.push(P.vertexUvs),A.push(P.fogExp2),A.push(P.sizeAttenuation),A.push(P.morphTargetsCount),A.push(P.morphAttributeCount),A.push(P.numDirLights),A.push(P.numPointLights),A.push(P.numSpotLights),A.push(P.numSpotLightMaps),A.push(P.numHemiLights),A.push(P.numRectAreaLights),A.push(P.numDirLightShadows),A.push(P.numPointLightShadows),A.push(P.numSpotLightShadows),A.push(P.numSpotLightShadowsWithMaps),A.push(P.shadowMapType),A.push(P.toneMapping),A.push(P.numClippingPlanes),A.push(P.numClipIntersection),A.push(P.depthPacking)}function b(A,P){c.disableAll(),P.isWebGL2&&c.enable(0),P.supportsVertexTextures&&c.enable(1),P.instancing&&c.enable(2),P.instancingColor&&c.enable(3),P.map&&c.enable(4),P.matcap&&c.enable(5),P.envMap&&c.enable(6),P.lightMap&&c.enable(7),P.aoMap&&c.enable(8),P.emissiveMap&&c.enable(9),P.bumpMap&&c.enable(10),P.normalMap&&c.enable(11),P.objectSpaceNormalMap&&c.enable(12),P.tangentSpaceNormalMap&&c.enable(13),P.clearcoat&&c.enable(14),P.clearcoatMap&&c.enable(15),P.clearcoatRoughnessMap&&c.enable(16),P.clearcoatNormalMap&&c.enable(17),P.iridescence&&c.enable(18),P.iridescenceMap&&c.enable(19),P.iridescenceThicknessMap&&c.enable(20),P.displacementMap&&c.enable(21),P.specularMap&&c.enable(22),P.roughnessMap&&c.enable(23),P.metalnessMap&&c.enable(24),P.gradientMap&&c.enable(25),P.alphaMap&&c.enable(26),P.alphaTest&&c.enable(27),P.vertexColors&&c.enable(28),P.vertexAlphas&&c.enable(29),P.vertexUvs&&c.enable(30),P.vertexTangents&&c.enable(31),P.uvsVertexOnly&&c.enable(32),A.push(c.mask),c.disableAll(),P.fog&&c.enable(0),P.useFog&&c.enable(1),P.flatShading&&c.enable(2),P.logarithmicDepthBuffer&&c.enable(3),P.skinning&&c.enable(4),P.morphTargets&&c.enable(5),P.morphNormals&&c.enable(6),P.morphColors&&c.enable(7),P.premultipliedAlpha&&c.enable(8),P.shadowMapEnabled&&c.enable(9),P.physicallyCorrectLights&&c.enable(10),P.doubleSided&&c.enable(11),P.flipSided&&c.enable(12),P.useDepthPacking&&c.enable(13),P.dithering&&c.enable(14),P.specularIntensityMap&&c.enable(15),P.specularColorMap&&c.enable(16),P.transmission&&c.enable(17),P.transmissionMap&&c.enable(18),P.thicknessMap&&c.enable(19),P.sheen&&c.enable(20),P.sheenColorMap&&c.enable(21),P.sheenRoughnessMap&&c.enable(22),P.decodeVideoTexture&&c.enable(23),P.opaque&&c.enable(24),A.push(c.mask)}function w(A){const P=x[A.type];let O;if(P){const H=hi[P];O=O0.clone(H.uniforms)}else O=A.uniforms;return O}function E(A,P){let O;for(let H=0,K=h.length;H<K;H++){const X=h[H];if(X.cacheKey===P){O=X,++O.usedTimes;break}}return O===void 0&&(O=new xw(l,P,A,r),h.push(O)),O}function C(A){if(--A.usedTimes===0){const P=h.indexOf(A);h[P]=h[h.length-1],h.pop(),A.destroy()}}function L(A){u.remove(A)}function N(){u.dispose()}return{getParameters:_,getProgramCacheKey:y,getUniforms:w,acquireProgram:E,releaseProgram:C,releaseShaderCache:L,programs:h,dispose:N}}function Tw(){let l=new WeakMap;function e(r){let a=l.get(r);return a===void 0&&(a={},l.set(r,a)),a}function t(r){l.delete(r)}function n(r,a,c){l.get(r)[a]=c}function i(){l=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Ew(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.material.id!==e.material.id?l.material.id-e.material.id:l.z!==e.z?l.z-e.z:l.id-e.id}function zm(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.z!==e.z?e.z-l.z:l.id-e.id}function Nm(){const l=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,v,x,_,y){let S=l[e];return S===void 0?(S={id:p.id,object:p,geometry:m,material:v,groupOrder:x,renderOrder:p.renderOrder,z:_,group:y},l[e]=S):(S.id=p.id,S.object=p,S.geometry=m,S.material=v,S.groupOrder=x,S.renderOrder=p.renderOrder,S.z=_,S.group=y),e++,S}function c(p,m,v,x,_,y){const S=a(p,m,v,x,_,y);v.transmission>0?n.push(S):v.transparent===!0?i.push(S):t.push(S)}function u(p,m,v,x,_,y){const S=a(p,m,v,x,_,y);v.transmission>0?n.unshift(S):v.transparent===!0?i.unshift(S):t.unshift(S)}function h(p,m){t.length>1&&t.sort(p||Ew),n.length>1&&n.sort(m||zm),i.length>1&&i.sort(m||zm)}function d(){for(let p=e,m=l.length;p<m;p++){const v=l[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:c,unshift:u,finish:d,sort:h}}function Aw(){let l=new WeakMap;function e(n,i){const r=l.get(n);let a;return r===void 0?(a=new Nm,l.set(n,[a])):i>=r.length?(a=new Nm,r.push(a)):a=r[i],a}function t(){l=new WeakMap}return{get:e,dispose:t}}function Cw(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Pe};break;case"SpotLight":t={position:new D,direction:new D,color:new Pe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Pe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Pe,groundColor:new Pe};break;case"RectAreaLight":t={color:new Pe,position:new D,halfWidth:new D,halfHeight:new D};break}return l[e.id]=t,t}}}function Pw(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return l[e.id]=t,t}}}let Lw=0;function Rw(l,e){return(e.castShadow?2:0)-(l.castShadow?2:0)+(e.map?1:0)-(l.map?1:0)}function Iw(l,e){const t=new Cw,n=Pw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new D);const r=new D,a=new tt,c=new tt;function u(d,p){let m=0,v=0,x=0;for(let H=0;H<9;H++)i.probe[H].set(0,0,0);let _=0,y=0,S=0,b=0,w=0,E=0,C=0,L=0,N=0,A=0;d.sort(Rw);const P=p!==!0?Math.PI:1;for(let H=0,K=d.length;H<K;H++){const X=d[H],V=X.color,ee=X.intensity,oe=X.distance,de=X.shadow&&X.shadow.map?X.shadow.map.texture:null;if(X.isAmbientLight)m+=V.r*ee*P,v+=V.g*ee*P,x+=V.b*ee*P;else if(X.isLightProbe)for(let k=0;k<9;k++)i.probe[k].addScaledVector(X.sh.coefficients[k],ee);else if(X.isDirectionalLight){const k=t.get(X);if(k.color.copy(X.color).multiplyScalar(X.intensity*P),X.castShadow){const J=X.shadow,j=n.get(X);j.shadowBias=J.bias,j.shadowNormalBias=J.normalBias,j.shadowRadius=J.radius,j.shadowMapSize=J.mapSize,i.directionalShadow[_]=j,i.directionalShadowMap[_]=de,i.directionalShadowMatrix[_]=X.shadow.matrix,E++}i.directional[_]=k,_++}else if(X.isSpotLight){const k=t.get(X);k.position.setFromMatrixPosition(X.matrixWorld),k.color.copy(V).multiplyScalar(ee*P),k.distance=oe,k.coneCos=Math.cos(X.angle),k.penumbraCos=Math.cos(X.angle*(1-X.penumbra)),k.decay=X.decay,i.spot[S]=k;const J=X.shadow;if(X.map&&(i.spotLightMap[N]=X.map,N++,J.updateMatrices(X),X.castShadow&&A++),i.spotLightMatrix[S]=J.matrix,X.castShadow){const j=n.get(X);j.shadowBias=J.bias,j.shadowNormalBias=J.normalBias,j.shadowRadius=J.radius,j.shadowMapSize=J.mapSize,i.spotShadow[S]=j,i.spotShadowMap[S]=de,L++}S++}else if(X.isRectAreaLight){const k=t.get(X);k.color.copy(V).multiplyScalar(ee),k.halfWidth.set(X.width*.5,0,0),k.halfHeight.set(0,X.height*.5,0),i.rectArea[b]=k,b++}else if(X.isPointLight){const k=t.get(X);if(k.color.copy(X.color).multiplyScalar(X.intensity*P),k.distance=X.distance,k.decay=X.decay,X.castShadow){const J=X.shadow,j=n.get(X);j.shadowBias=J.bias,j.shadowNormalBias=J.normalBias,j.shadowRadius=J.radius,j.shadowMapSize=J.mapSize,j.shadowCameraNear=J.camera.near,j.shadowCameraFar=J.camera.far,i.pointShadow[y]=j,i.pointShadowMap[y]=de,i.pointShadowMatrix[y]=X.shadow.matrix,C++}i.point[y]=k,y++}else if(X.isHemisphereLight){const k=t.get(X);k.skyColor.copy(X.color).multiplyScalar(ee*P),k.groundColor.copy(X.groundColor).multiplyScalar(ee*P),i.hemi[w]=k,w++}}b>0&&(e.isWebGL2||l.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_FLOAT_1,i.rectAreaLTC2=Se.LTC_FLOAT_2):l.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_HALF_1,i.rectAreaLTC2=Se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=v,i.ambient[2]=x;const O=i.hash;(O.directionalLength!==_||O.pointLength!==y||O.spotLength!==S||O.rectAreaLength!==b||O.hemiLength!==w||O.numDirectionalShadows!==E||O.numPointShadows!==C||O.numSpotShadows!==L||O.numSpotMaps!==N)&&(i.directional.length=_,i.spot.length=S,i.rectArea.length=b,i.point.length=y,i.hemi.length=w,i.directionalShadow.length=E,i.directionalShadowMap.length=E,i.pointShadow.length=C,i.pointShadowMap.length=C,i.spotShadow.length=L,i.spotShadowMap.length=L,i.directionalShadowMatrix.length=E,i.pointShadowMatrix.length=C,i.spotLightMatrix.length=L+N-A,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=A,O.directionalLength=_,O.pointLength=y,O.spotLength=S,O.rectAreaLength=b,O.hemiLength=w,O.numDirectionalShadows=E,O.numPointShadows=C,O.numSpotShadows=L,O.numSpotMaps=N,i.version=Lw++)}function h(d,p){let m=0,v=0,x=0,_=0,y=0;const S=p.matrixWorldInverse;for(let b=0,w=d.length;b<w;b++){const E=d[b];if(E.isDirectionalLight){const C=i.directional[m];C.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(S),m++}else if(E.isSpotLight){const C=i.spot[x];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),C.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(S),x++}else if(E.isRectAreaLight){const C=i.rectArea[_];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),c.identity(),a.copy(E.matrixWorld),a.premultiply(S),c.extractRotation(a),C.halfWidth.set(E.width*.5,0,0),C.halfHeight.set(0,E.height*.5,0),C.halfWidth.applyMatrix4(c),C.halfHeight.applyMatrix4(c),_++}else if(E.isPointLight){const C=i.point[v];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),v++}else if(E.isHemisphereLight){const C=i.hemi[y];C.direction.setFromMatrixPosition(E.matrixWorld),C.direction.transformDirection(S),y++}}}return{setup:u,setupView:h,state:i}}function Fm(l,e){const t=new Iw(l,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:a,pushShadow:c}}function Dw(l,e){let t=new WeakMap;function n(r,a=0){const c=t.get(r);let u;return c===void 0?(u=new Fm(l,e),t.set(r,[u])):a>=c.length?(u=new Fm(l,e),c.push(u)):u=c[a],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Kf extends hn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=P0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class $f extends hn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new D,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const zw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Nw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Fw(l,e,t){let n=new Gc;const i=new fe,r=new fe,a=new bt,c=new Kf({depthPacking:L0}),u=new $f,h={},d=t.maxTextureSize,p={[Ji]:In,[In]:Ji,[Xi]:Xi},m=new Ti({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:zw,fragmentShader:Nw}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const x=new at;x.setAttribute("position",new Lt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new un(x,m),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=kc,this.render=function(E,C,L){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||E.length===0)return;const N=l.getRenderTarget(),A=l.getActiveCubeFace(),P=l.getActiveMipmapLevel(),O=l.state;O.setBlending(Zi),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);for(let H=0,K=E.length;H<K;H++){const X=E[H],V=X.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;i.copy(V.mapSize);const ee=V.getFrameExtents();if(i.multiply(ee),r.copy(V.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/ee.x),i.x=r.x*ee.x,V.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/ee.y),i.y=r.y*ee.y,V.mapSize.y=r.y)),V.map===null){const de=this.type!==Yr?{minFilter:Wt,magFilter:Wt}:{};V.map=new di(i.x,i.y,de),V.map.texture.name=X.name+".shadowMap",V.camera.updateProjectionMatrix()}l.setRenderTarget(V.map),l.clear();const oe=V.getViewportCount();for(let de=0;de<oe;de++){const k=V.getViewport(de);a.set(r.x*k.x,r.y*k.y,r.x*k.z,r.y*k.w),O.viewport(a),V.updateMatrices(X,de),n=V.getFrustum(),w(C,L,V.camera,X,this.type)}V.isPointLightShadow!==!0&&this.type===Yr&&S(V,L),V.needsUpdate=!1}y.needsUpdate=!1,l.setRenderTarget(N,A,P)};function S(E,C){const L=e.update(_);m.defines.VSM_SAMPLES!==E.blurSamples&&(m.defines.VSM_SAMPLES=E.blurSamples,v.defines.VSM_SAMPLES=E.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new di(i.x,i.y)),m.uniforms.shadow_pass.value=E.map.texture,m.uniforms.resolution.value=E.mapSize,m.uniforms.radius.value=E.radius,l.setRenderTarget(E.mapPass),l.clear(),l.renderBufferDirect(C,null,L,m,_,null),v.uniforms.shadow_pass.value=E.mapPass.texture,v.uniforms.resolution.value=E.mapSize,v.uniforms.radius.value=E.radius,l.setRenderTarget(E.map),l.clear(),l.renderBufferDirect(C,null,L,v,_,null)}function b(E,C,L,N,A,P){let O=null;const H=L.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(H!==void 0)O=H;else if(O=L.isPointLight===!0?u:c,l.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const K=O.uuid,X=C.uuid;let V=h[K];V===void 0&&(V={},h[K]=V);let ee=V[X];ee===void 0&&(ee=O.clone(),V[X]=ee),O=ee}return O.visible=C.visible,O.wireframe=C.wireframe,P===Yr?O.side=C.shadowSide!==null?C.shadowSide:C.side:O.side=C.shadowSide!==null?C.shadowSide:p[C.side],O.alphaMap=C.alphaMap,O.alphaTest=C.alphaTest,O.map=C.map,O.clipShadows=C.clipShadows,O.clippingPlanes=C.clippingPlanes,O.clipIntersection=C.clipIntersection,O.displacementMap=C.displacementMap,O.displacementScale=C.displacementScale,O.displacementBias=C.displacementBias,O.wireframeLinewidth=C.wireframeLinewidth,O.linewidth=C.linewidth,L.isPointLight===!0&&O.isMeshDistanceMaterial===!0&&(O.referencePosition.setFromMatrixPosition(L.matrixWorld),O.nearDistance=N,O.farDistance=A),O}function w(E,C,L,N,A){if(E.visible===!1)return;if(E.layers.test(C.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&A===Yr)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,E.matrixWorld);const H=e.update(E),K=E.material;if(Array.isArray(K)){const X=H.groups;for(let V=0,ee=X.length;V<ee;V++){const oe=X[V],de=K[oe.materialIndex];if(de&&de.visible){const k=b(E,de,N,L.near,L.far,A);l.renderBufferDirect(L,null,H,k,E,oe)}}}else if(K.visible){const X=b(E,K,N,L.near,L.far,A);l.renderBufferDirect(L,null,H,X,E,null)}}const O=E.children;for(let H=0,K=O.length;H<K;H++)w(O[H],C,L,N,A)}}function Ow(l,e,t){const n=t.isWebGL2;function i(){let B=!1;const re=new bt;let pe=null;const Ce=new bt(0,0,0,0);return{setMask:function(Ue){pe!==Ue&&!B&&(l.colorMask(Ue,Ue,Ue,Ue),pe=Ue)},setLocked:function(Ue){B=Ue},setClear:function(Ue,mt,Vt,tn,gi){gi===!0&&(Ue*=tn,mt*=tn,Vt*=tn),re.set(Ue,mt,Vt,tn),Ce.equals(re)===!1&&(l.clearColor(Ue,mt,Vt,tn),Ce.copy(re))},reset:function(){B=!1,pe=null,Ce.set(-1,0,0,0)}}}function r(){let B=!1,re=null,pe=null,Ce=null;return{setTest:function(Ue){Ue?De(2929):ze(2929)},setMask:function(Ue){re!==Ue&&!B&&(l.depthMask(Ue),re=Ue)},setFunc:function(Ue){if(pe!==Ue){switch(Ue){case Kg:l.depthFunc(512);break;case $g:l.depthFunc(519);break;case e0:l.depthFunc(513);break;case Rc:l.depthFunc(515);break;case t0:l.depthFunc(514);break;case n0:l.depthFunc(518);break;case i0:l.depthFunc(516);break;case r0:l.depthFunc(517);break;default:l.depthFunc(515)}pe=Ue}},setLocked:function(Ue){B=Ue},setClear:function(Ue){Ce!==Ue&&(l.clearDepth(Ue),Ce=Ue)},reset:function(){B=!1,re=null,pe=null,Ce=null}}}function a(){let B=!1,re=null,pe=null,Ce=null,Ue=null,mt=null,Vt=null,tn=null,gi=null;return{setTest:function(At){B||(At?De(2960):ze(2960))},setMask:function(At){re!==At&&!B&&(l.stencilMask(At),re=At)},setFunc:function(At,Gn,En){(pe!==At||Ce!==Gn||Ue!==En)&&(l.stencilFunc(At,Gn,En),pe=At,Ce=Gn,Ue=En)},setOp:function(At,Gn,En){(mt!==At||Vt!==Gn||tn!==En)&&(l.stencilOp(At,Gn,En),mt=At,Vt=Gn,tn=En)},setLocked:function(At){B=At},setClear:function(At){gi!==At&&(l.clearStencil(At),gi=At)},reset:function(){B=!1,re=null,pe=null,Ce=null,Ue=null,mt=null,Vt=null,tn=null,gi=null}}}const c=new i,u=new r,h=new a,d=new WeakMap,p=new WeakMap;let m={},v={},x=new WeakMap,_=[],y=null,S=!1,b=null,w=null,E=null,C=null,L=null,N=null,A=null,P=!1,O=null,H=null,K=null,X=null,V=null;const ee=l.getParameter(35661);let oe=!1,de=0;const k=l.getParameter(7938);k.indexOf("WebGL")!==-1?(de=parseFloat(/^WebGL (\d)/.exec(k)[1]),oe=de>=1):k.indexOf("OpenGL ES")!==-1&&(de=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),oe=de>=2);let J=null,j={};const he=l.getParameter(3088),W=l.getParameter(2978),ue=new bt().fromArray(he),ge=new bt().fromArray(W);function _e(B,re,pe){const Ce=new Uint8Array(4),Ue=l.createTexture();l.bindTexture(B,Ue),l.texParameteri(B,10241,9728),l.texParameteri(B,10240,9728);for(let mt=0;mt<pe;mt++)l.texImage2D(re+mt,0,6408,1,1,0,6408,5121,Ce);return Ue}const Q={};Q[3553]=_e(3553,3553,1),Q[34067]=_e(34067,34069,6),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),De(2929),u.setFunc(Rc),we(!1),Qe(qh),De(2884),xe(Zi);function De(B){m[B]!==!0&&(l.enable(B),m[B]=!0)}function ze(B){m[B]!==!1&&(l.disable(B),m[B]=!1)}function Ne(B,re){return v[B]!==re?(l.bindFramebuffer(B,re),v[B]=re,n&&(B===36009&&(v[36160]=re),B===36160&&(v[36009]=re)),!0):!1}function Me(B,re){let pe=_,Ce=!1;if(B)if(pe=x.get(re),pe===void 0&&(pe=[],x.set(re,pe)),B.isWebGLMultipleRenderTargets){const Ue=B.texture;if(pe.length!==Ue.length||pe[0]!==36064){for(let mt=0,Vt=Ue.length;mt<Vt;mt++)pe[mt]=36064+mt;pe.length=Ue.length,Ce=!0}}else pe[0]!==36064&&(pe[0]=36064,Ce=!0);else pe[0]!==1029&&(pe[0]=1029,Ce=!0);Ce&&(t.isWebGL2?l.drawBuffers(pe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(pe))}function Je(B){return y!==B?(l.useProgram(B),y=B,!0):!1}const le={[Xr]:32774,[Vg]:32778,[Gg]:32779};if(n)le[jh]=32775,le[Qh]=32776;else{const B=e.get("EXT_blend_minmax");B!==null&&(le[jh]=B.MIN_EXT,le[Qh]=B.MAX_EXT)}const ie={[Hg]:0,[Wg]:1,[Xg]:768,[kf]:770,[Qg]:776,[Jg]:774,[Yg]:772,[qg]:769,[Uf]:771,[jg]:775,[Zg]:773};function xe(B,re,pe,Ce,Ue,mt,Vt,tn){if(B===Zi){S===!0&&(ze(3042),S=!1);return}if(S===!1&&(De(3042),S=!0),B!==Bg){if(B!==b||tn!==P){if((w!==Xr||L!==Xr)&&(l.blendEquation(32774),w=Xr,L=Xr),tn)switch(B){case Kr:l.blendFuncSeparate(1,771,1,771);break;case Yh:l.blendFunc(1,1);break;case Zh:l.blendFuncSeparate(0,769,0,1);break;case Jh:l.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case Kr:l.blendFuncSeparate(770,771,1,771);break;case Yh:l.blendFunc(770,1);break;case Zh:l.blendFuncSeparate(0,769,0,1);break;case Jh:l.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}E=null,C=null,N=null,A=null,b=B,P=tn}return}Ue=Ue||re,mt=mt||pe,Vt=Vt||Ce,(re!==w||Ue!==L)&&(l.blendEquationSeparate(le[re],le[Ue]),w=re,L=Ue),(pe!==E||Ce!==C||mt!==N||Vt!==A)&&(l.blendFuncSeparate(ie[pe],ie[Ce],ie[mt],ie[Vt]),E=pe,C=Ce,N=mt,A=Vt),b=B,P=!1}function Fe(B,re){B.side===Xi?ze(2884):De(2884);let pe=B.side===In;re&&(pe=!pe),we(pe),B.blending===Kr&&B.transparent===!1?xe(Zi):xe(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.premultipliedAlpha),u.setFunc(B.depthFunc),u.setTest(B.depthTest),u.setMask(B.depthWrite),c.setMask(B.colorWrite);const Ce=B.stencilWrite;h.setTest(Ce),Ce&&(h.setMask(B.stencilWriteMask),h.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),h.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),Ve(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?De(32926):ze(32926)}function we(B){O!==B&&(B?l.frontFace(2304):l.frontFace(2305),O=B)}function Qe(B){B!==Og?(De(2884),B!==H&&(B===qh?l.cullFace(1029):B===kg?l.cullFace(1028):l.cullFace(1032))):ze(2884),H=B}function qe(B){B!==K&&(oe&&l.lineWidth(B),K=B)}function Ve(B,re,pe){B?(De(32823),(X!==re||V!==pe)&&(l.polygonOffset(re,pe),X=re,V=pe)):ze(32823)}function Mt(B){B?De(3089):ze(3089)}function St(B){B===void 0&&(B=33984+ee-1),J!==B&&(l.activeTexture(B),J=B)}function F(B,re,pe){pe===void 0&&(J===null?pe=33984+ee-1:pe=J);let Ce=j[pe];Ce===void 0&&(Ce={type:void 0,texture:void 0},j[pe]=Ce),(Ce.type!==B||Ce.texture!==re)&&(J!==pe&&(l.activeTexture(pe),J=pe),l.bindTexture(B,re||Q[B]),Ce.type=B,Ce.texture=re)}function R(){const B=j[J];B!==void 0&&B.type!==void 0&&(l.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function te(){try{l.compressedTexImage2D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function me(){try{l.compressedTexImage3D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ye(){try{l.texSubImage2D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Te(){try{l.texSubImage3D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function je(){try{l.compressedTexSubImage2D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ae(){try{l.compressedTexSubImage3D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ce(){try{l.texStorage2D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ge(){try{l.texStorage3D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ze(){try{l.texImage2D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Oe(){try{l.texImage3D.apply(l,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ye(B){ue.equals(B)===!1&&(l.scissor(B.x,B.y,B.z,B.w),ue.copy(B))}function He(B){ge.equals(B)===!1&&(l.viewport(B.x,B.y,B.z,B.w),ge.copy(B))}function dt(B,re){let pe=p.get(re);pe===void 0&&(pe=new WeakMap,p.set(re,pe));let Ce=pe.get(B);Ce===void 0&&(Ce=l.getUniformBlockIndex(re,B.name),pe.set(B,Ce))}function Et(B,re){const Ce=p.get(re).get(B);d.get(re)!==Ce&&(l.uniformBlockBinding(re,Ce,B.__bindingPointIndex),d.set(re,Ce))}function Yt(){l.disable(3042),l.disable(2884),l.disable(2929),l.disable(32823),l.disable(3089),l.disable(2960),l.disable(32926),l.blendEquation(32774),l.blendFunc(1,0),l.blendFuncSeparate(1,0,1,0),l.colorMask(!0,!0,!0,!0),l.clearColor(0,0,0,0),l.depthMask(!0),l.depthFunc(513),l.clearDepth(1),l.stencilMask(4294967295),l.stencilFunc(519,0,4294967295),l.stencilOp(7680,7680,7680),l.clearStencil(0),l.cullFace(1029),l.frontFace(2305),l.polygonOffset(0,0),l.activeTexture(33984),l.bindFramebuffer(36160,null),n===!0&&(l.bindFramebuffer(36009,null),l.bindFramebuffer(36008,null)),l.useProgram(null),l.lineWidth(1),l.scissor(0,0,l.canvas.width,l.canvas.height),l.viewport(0,0,l.canvas.width,l.canvas.height),m={},J=null,j={},v={},x=new WeakMap,_=[],y=null,S=!1,b=null,w=null,E=null,C=null,L=null,N=null,A=null,P=!1,O=null,H=null,K=null,X=null,V=null,ue.set(0,0,l.canvas.width,l.canvas.height),ge.set(0,0,l.canvas.width,l.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:De,disable:ze,bindFramebuffer:Ne,drawBuffers:Me,useProgram:Je,setBlending:xe,setMaterial:Fe,setFlipSided:we,setCullFace:Qe,setLineWidth:qe,setPolygonOffset:Ve,setScissorTest:Mt,activeTexture:St,bindTexture:F,unbindTexture:R,compressedTexImage2D:te,compressedTexImage3D:me,texImage2D:Ze,texImage3D:Oe,updateUBOMapping:dt,uniformBlockBinding:Et,texStorage2D:ce,texStorage3D:Ge,texSubImage2D:ye,texSubImage3D:Te,compressedTexSubImage2D:je,compressedTexSubImage3D:Ae,scissor:Ye,viewport:He,reset:Yt}}function kw(l,e,t,n,i,r,a){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,v=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),x=new WeakMap;let _;const y=new WeakMap;let S=!1;try{S=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(F,R){return S?new OffscreenCanvas(F,R):la("canvas")}function w(F,R,te,me){let ye=1;if((F.width>me||F.height>me)&&(ye=me/Math.max(F.width,F.height)),ye<1||R===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const Te=R?zc:Math.floor,je=Te(ye*F.width),Ae=Te(ye*F.height);_===void 0&&(_=b(je,Ae));const ce=te?b(je,Ae):_;return ce.width=je,ce.height=Ae,ce.getContext("2d").drawImage(F,0,0,je,Ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+je+"x"+Ae+")."),ce}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function E(F){return wf(F.width)&&wf(F.height)}function C(F){return c?!1:F.wrapS!==_n||F.wrapT!==_n||F.minFilter!==Wt&&F.minFilter!==Xt}function L(F,R){return F.generateMipmaps&&R&&F.minFilter!==Wt&&F.minFilter!==Xt}function N(F){l.generateMipmap(F)}function A(F,R,te,me,ye=!1){if(c===!1)return R;if(F!==null){if(l[F]!==void 0)return l[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Te=R;return R===6403&&(te===5126&&(Te=33326),te===5131&&(Te=33325),te===5121&&(Te=33321)),R===33319&&(te===5126&&(Te=33328),te===5131&&(Te=33327),te===5121&&(Te=33323)),R===6408&&(te===5126&&(Te=34836),te===5131&&(Te=34842),te===5121&&(Te=me===Tt&&ye===!1?35907:32856),te===32819&&(Te=32854),te===32820&&(Te=32855)),(Te===33325||Te===33326||Te===33327||Te===33328||Te===34842||Te===34836)&&e.get("EXT_color_buffer_float"),Te}function P(F,R,te){return L(F,te)===!0||F.isFramebufferTexture&&F.minFilter!==Wt&&F.minFilter!==Xt?Math.log2(Math.max(R.width,R.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?R.mipmaps.length:1}function O(F){return F===Wt||F===Ic||F===Jo?9728:9729}function H(F){const R=F.target;R.removeEventListener("dispose",H),X(R),R.isVideoTexture&&x.delete(R)}function K(F){const R=F.target;R.removeEventListener("dispose",K),ee(R)}function X(F){const R=n.get(F);if(R.__webglInit===void 0)return;const te=F.source,me=y.get(te);if(me){const ye=me[R.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&V(F),Object.keys(me).length===0&&y.delete(te)}n.remove(F)}function V(F){const R=n.get(F);l.deleteTexture(R.__webglTexture);const te=F.source,me=y.get(te);delete me[R.__cacheKey],a.memory.textures--}function ee(F){const R=F.texture,te=n.get(F),me=n.get(R);if(me.__webglTexture!==void 0&&(l.deleteTexture(me.__webglTexture),a.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let ye=0;ye<6;ye++)l.deleteFramebuffer(te.__webglFramebuffer[ye]),te.__webglDepthbuffer&&l.deleteRenderbuffer(te.__webglDepthbuffer[ye]);else{if(l.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&l.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&l.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let ye=0;ye<te.__webglColorRenderbuffer.length;ye++)te.__webglColorRenderbuffer[ye]&&l.deleteRenderbuffer(te.__webglColorRenderbuffer[ye]);te.__webglDepthRenderbuffer&&l.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let ye=0,Te=R.length;ye<Te;ye++){const je=n.get(R[ye]);je.__webglTexture&&(l.deleteTexture(je.__webglTexture),a.memory.textures--),n.remove(R[ye])}n.remove(R),n.remove(F)}let oe=0;function de(){oe=0}function k(){const F=oe;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),oe+=1,F}function J(F){const R=[];return R.push(F.wrapS),R.push(F.wrapT),R.push(F.wrapR||0),R.push(F.magFilter),R.push(F.minFilter),R.push(F.anisotropy),R.push(F.internalFormat),R.push(F.format),R.push(F.type),R.push(F.generateMipmaps),R.push(F.premultiplyAlpha),R.push(F.flipY),R.push(F.unpackAlignment),R.push(F.encoding),R.join()}function j(F,R){const te=n.get(F);if(F.isVideoTexture&&Mt(F),F.isRenderTargetTexture===!1&&F.version>0&&te.__version!==F.version){const me=F.image;if(me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ze(te,F,R);return}}t.bindTexture(3553,te.__webglTexture,33984+R)}function he(F,R){const te=n.get(F);if(F.version>0&&te.__version!==F.version){ze(te,F,R);return}t.bindTexture(35866,te.__webglTexture,33984+R)}function W(F,R){const te=n.get(F);if(F.version>0&&te.__version!==F.version){ze(te,F,R);return}t.bindTexture(32879,te.__webglTexture,33984+R)}function ue(F,R){const te=n.get(F);if(F.version>0&&te.__version!==F.version){Ne(te,F,R);return}t.bindTexture(34067,te.__webglTexture,33984+R)}const ge={[ta]:10497,[_n]:33071,[na]:33648},_e={[Wt]:9728,[Ic]:9984,[Jo]:9986,[Xt]:9729,[Vf]:9985,[xr]:9987};function Q(F,R,te){if(te?(l.texParameteri(F,10242,ge[R.wrapS]),l.texParameteri(F,10243,ge[R.wrapT]),(F===32879||F===35866)&&l.texParameteri(F,32882,ge[R.wrapR]),l.texParameteri(F,10240,_e[R.magFilter]),l.texParameteri(F,10241,_e[R.minFilter])):(l.texParameteri(F,10242,33071),l.texParameteri(F,10243,33071),(F===32879||F===35866)&&l.texParameteri(F,32882,33071),(R.wrapS!==_n||R.wrapT!==_n)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),l.texParameteri(F,10240,O(R.magFilter)),l.texParameteri(F,10241,O(R.minFilter)),R.minFilter!==Wt&&R.minFilter!==Xt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const me=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===Wt||R.minFilter!==Jo&&R.minFilter!==xr||R.type===qi&&e.has("OES_texture_float_linear")===!1||c===!1&&R.type===$s&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(l.texParameterf(F,me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function De(F,R){let te=!1;F.__webglInit===void 0&&(F.__webglInit=!0,R.addEventListener("dispose",H));const me=R.source;let ye=y.get(me);ye===void 0&&(ye={},y.set(me,ye));const Te=J(R);if(Te!==F.__cacheKey){ye[Te]===void 0&&(ye[Te]={texture:l.createTexture(),usedTimes:0},a.memory.textures++,te=!0),ye[Te].usedTimes++;const je=ye[F.__cacheKey];je!==void 0&&(ye[F.__cacheKey].usedTimes--,je.usedTimes===0&&V(R)),F.__cacheKey=Te,F.__webglTexture=ye[Te].texture}return te}function ze(F,R,te){let me=3553;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(me=35866),R.isData3DTexture&&(me=32879);const ye=De(F,R),Te=R.source;t.bindTexture(me,F.__webglTexture,33984+te);const je=n.get(Te);if(Te.version!==je.__version||ye===!0){t.activeTexture(33984+te),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const Ae=C(R)&&E(R.image)===!1;let ce=w(R.image,Ae,!1,d);ce=St(R,ce);const Ge=E(ce)||c,Ze=r.convert(R.format,R.encoding);let Oe=r.convert(R.type),Ye=A(R.internalFormat,Ze,Oe,R.encoding,R.isVideoTexture);Q(me,R,Ge);let He;const dt=R.mipmaps,Et=c&&R.isVideoTexture!==!0,Yt=je.__version===void 0||ye===!0,B=P(R,ce,Ge);if(R.isDepthTexture)Ye=6402,c?R.type===qi?Ye=36012:R.type===mr?Ye=33190:R.type===$r?Ye=35056:Ye=33189:R.type===qi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===vr&&Ye===6402&&R.type!==Gf&&R.type!==mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=mr,Oe=r.convert(R.type)),R.format===rs&&Ye===6402&&(Ye=34041,R.type!==$r&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=$r,Oe=r.convert(R.type))),Yt&&(Et?t.texStorage2D(3553,1,Ye,ce.width,ce.height):t.texImage2D(3553,0,Ye,ce.width,ce.height,0,Ze,Oe,null));else if(R.isDataTexture)if(dt.length>0&&Ge){Et&&Yt&&t.texStorage2D(3553,B,Ye,dt[0].width,dt[0].height);for(let re=0,pe=dt.length;re<pe;re++)He=dt[re],Et?t.texSubImage2D(3553,re,0,0,He.width,He.height,Ze,Oe,He.data):t.texImage2D(3553,re,Ye,He.width,He.height,0,Ze,Oe,He.data);R.generateMipmaps=!1}else Et?(Yt&&t.texStorage2D(3553,B,Ye,ce.width,ce.height),t.texSubImage2D(3553,0,0,0,ce.width,ce.height,Ze,Oe,ce.data)):t.texImage2D(3553,0,Ye,ce.width,ce.height,0,Ze,Oe,ce.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){Et&&Yt&&t.texStorage3D(35866,B,Ye,dt[0].width,dt[0].height,ce.depth);for(let re=0,pe=dt.length;re<pe;re++)He=dt[re],R.format!==Rn?Ze!==null?Et?t.compressedTexSubImage3D(35866,re,0,0,0,He.width,He.height,ce.depth,Ze,He.data,0,0):t.compressedTexImage3D(35866,re,Ye,He.width,He.height,ce.depth,0,He.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?t.texSubImage3D(35866,re,0,0,0,He.width,He.height,ce.depth,Ze,Oe,He.data):t.texImage3D(35866,re,Ye,He.width,He.height,ce.depth,0,Ze,Oe,He.data)}else{Et&&Yt&&t.texStorage2D(3553,B,Ye,dt[0].width,dt[0].height);for(let re=0,pe=dt.length;re<pe;re++)He=dt[re],R.format!==Rn?Ze!==null?Et?t.compressedTexSubImage2D(3553,re,0,0,He.width,He.height,Ze,He.data):t.compressedTexImage2D(3553,re,Ye,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?t.texSubImage2D(3553,re,0,0,He.width,He.height,Ze,Oe,He.data):t.texImage2D(3553,re,Ye,He.width,He.height,0,Ze,Oe,He.data)}else if(R.isDataArrayTexture)Et?(Yt&&t.texStorage3D(35866,B,Ye,ce.width,ce.height,ce.depth),t.texSubImage3D(35866,0,0,0,0,ce.width,ce.height,ce.depth,Ze,Oe,ce.data)):t.texImage3D(35866,0,Ye,ce.width,ce.height,ce.depth,0,Ze,Oe,ce.data);else if(R.isData3DTexture)Et?(Yt&&t.texStorage3D(32879,B,Ye,ce.width,ce.height,ce.depth),t.texSubImage3D(32879,0,0,0,0,ce.width,ce.height,ce.depth,Ze,Oe,ce.data)):t.texImage3D(32879,0,Ye,ce.width,ce.height,ce.depth,0,Ze,Oe,ce.data);else if(R.isFramebufferTexture){if(Yt)if(Et)t.texStorage2D(3553,B,Ye,ce.width,ce.height);else{let re=ce.width,pe=ce.height;for(let Ce=0;Ce<B;Ce++)t.texImage2D(3553,Ce,Ye,re,pe,0,Ze,Oe,null),re>>=1,pe>>=1}}else if(dt.length>0&&Ge){Et&&Yt&&t.texStorage2D(3553,B,Ye,dt[0].width,dt[0].height);for(let re=0,pe=dt.length;re<pe;re++)He=dt[re],Et?t.texSubImage2D(3553,re,0,0,Ze,Oe,He):t.texImage2D(3553,re,Ye,Ze,Oe,He);R.generateMipmaps=!1}else Et?(Yt&&t.texStorage2D(3553,B,Ye,ce.width,ce.height),t.texSubImage2D(3553,0,0,0,Ze,Oe,ce)):t.texImage2D(3553,0,Ye,Ze,Oe,ce);L(R,Ge)&&N(me),je.__version=Te.version,R.onUpdate&&R.onUpdate(R)}F.__version=R.version}function Ne(F,R,te){if(R.image.length!==6)return;const me=De(F,R),ye=R.source;t.bindTexture(34067,F.__webglTexture,33984+te);const Te=n.get(ye);if(ye.version!==Te.__version||me===!0){t.activeTexture(33984+te),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const je=R.isCompressedTexture||R.image[0].isCompressedTexture,Ae=R.image[0]&&R.image[0].isDataTexture,ce=[];for(let re=0;re<6;re++)!je&&!Ae?ce[re]=w(R.image[re],!1,!0,h):ce[re]=Ae?R.image[re].image:R.image[re],ce[re]=St(R,ce[re]);const Ge=ce[0],Ze=E(Ge)||c,Oe=r.convert(R.format,R.encoding),Ye=r.convert(R.type),He=A(R.internalFormat,Oe,Ye,R.encoding),dt=c&&R.isVideoTexture!==!0,Et=Te.__version===void 0||me===!0;let Yt=P(R,Ge,Ze);Q(34067,R,Ze);let B;if(je){dt&&Et&&t.texStorage2D(34067,Yt,He,Ge.width,Ge.height);for(let re=0;re<6;re++){B=ce[re].mipmaps;for(let pe=0;pe<B.length;pe++){const Ce=B[pe];R.format!==Rn?Oe!==null?dt?t.compressedTexSubImage2D(34069+re,pe,0,0,Ce.width,Ce.height,Oe,Ce.data):t.compressedTexImage2D(34069+re,pe,He,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):dt?t.texSubImage2D(34069+re,pe,0,0,Ce.width,Ce.height,Oe,Ye,Ce.data):t.texImage2D(34069+re,pe,He,Ce.width,Ce.height,0,Oe,Ye,Ce.data)}}}else{B=R.mipmaps,dt&&Et&&(B.length>0&&Yt++,t.texStorage2D(34067,Yt,He,ce[0].width,ce[0].height));for(let re=0;re<6;re++)if(Ae){dt?t.texSubImage2D(34069+re,0,0,0,ce[re].width,ce[re].height,Oe,Ye,ce[re].data):t.texImage2D(34069+re,0,He,ce[re].width,ce[re].height,0,Oe,Ye,ce[re].data);for(let pe=0;pe<B.length;pe++){const Ue=B[pe].image[re].image;dt?t.texSubImage2D(34069+re,pe+1,0,0,Ue.width,Ue.height,Oe,Ye,Ue.data):t.texImage2D(34069+re,pe+1,He,Ue.width,Ue.height,0,Oe,Ye,Ue.data)}}else{dt?t.texSubImage2D(34069+re,0,0,0,Oe,Ye,ce[re]):t.texImage2D(34069+re,0,He,Oe,Ye,ce[re]);for(let pe=0;pe<B.length;pe++){const Ce=B[pe];dt?t.texSubImage2D(34069+re,pe+1,0,0,Oe,Ye,Ce.image[re]):t.texImage2D(34069+re,pe+1,He,Oe,Ye,Ce.image[re])}}}L(R,Ze)&&N(34067),Te.__version=ye.version,R.onUpdate&&R.onUpdate(R)}F.__version=R.version}function Me(F,R,te,me,ye){const Te=r.convert(te.format,te.encoding),je=r.convert(te.type),Ae=A(te.internalFormat,Te,je,te.encoding);n.get(R).__hasExternalTextures||(ye===32879||ye===35866?t.texImage3D(ye,0,Ae,R.width,R.height,R.depth,0,Te,je,null):t.texImage2D(ye,0,Ae,R.width,R.height,0,Te,je,null)),t.bindFramebuffer(36160,F),Ve(R)?m.framebufferTexture2DMultisampleEXT(36160,me,ye,n.get(te).__webglTexture,0,qe(R)):(ye===3553||ye>=34069&&ye<=34074)&&l.framebufferTexture2D(36160,me,ye,n.get(te).__webglTexture,0),t.bindFramebuffer(36160,null)}function Je(F,R,te){if(l.bindRenderbuffer(36161,F),R.depthBuffer&&!R.stencilBuffer){let me=33189;if(te||Ve(R)){const ye=R.depthTexture;ye&&ye.isDepthTexture&&(ye.type===qi?me=36012:ye.type===mr&&(me=33190));const Te=qe(R);Ve(R)?m.renderbufferStorageMultisampleEXT(36161,Te,me,R.width,R.height):l.renderbufferStorageMultisample(36161,Te,me,R.width,R.height)}else l.renderbufferStorage(36161,me,R.width,R.height);l.framebufferRenderbuffer(36160,36096,36161,F)}else if(R.depthBuffer&&R.stencilBuffer){const me=qe(R);te&&Ve(R)===!1?l.renderbufferStorageMultisample(36161,me,35056,R.width,R.height):Ve(R)?m.renderbufferStorageMultisampleEXT(36161,me,35056,R.width,R.height):l.renderbufferStorage(36161,34041,R.width,R.height),l.framebufferRenderbuffer(36160,33306,36161,F)}else{const me=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let ye=0;ye<me.length;ye++){const Te=me[ye],je=r.convert(Te.format,Te.encoding),Ae=r.convert(Te.type),ce=A(Te.internalFormat,je,Ae,Te.encoding),Ge=qe(R);te&&Ve(R)===!1?l.renderbufferStorageMultisample(36161,Ge,ce,R.width,R.height):Ve(R)?m.renderbufferStorageMultisampleEXT(36161,Ge,ce,R.width,R.height):l.renderbufferStorage(36161,ce,R.width,R.height)}}l.bindRenderbuffer(36161,null)}function le(F,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,F),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),j(R.depthTexture,0);const me=n.get(R.depthTexture).__webglTexture,ye=qe(R);if(R.depthTexture.format===vr)Ve(R)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,me,0,ye):l.framebufferTexture2D(36160,36096,3553,me,0);else if(R.depthTexture.format===rs)Ve(R)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,me,0,ye):l.framebufferTexture2D(36160,33306,3553,me,0);else throw new Error("Unknown depthTexture format")}function ie(F){const R=n.get(F),te=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!R.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");le(R.__webglFramebuffer,F)}else if(te){R.__webglDepthbuffer=[];for(let me=0;me<6;me++)t.bindFramebuffer(36160,R.__webglFramebuffer[me]),R.__webglDepthbuffer[me]=l.createRenderbuffer(),Je(R.__webglDepthbuffer[me],F,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=l.createRenderbuffer(),Je(R.__webglDepthbuffer,F,!1);t.bindFramebuffer(36160,null)}function xe(F,R,te){const me=n.get(F);R!==void 0&&Me(me.__webglFramebuffer,F,F.texture,36064,3553),te!==void 0&&ie(F)}function Fe(F){const R=F.texture,te=n.get(F),me=n.get(R);F.addEventListener("dispose",K),F.isWebGLMultipleRenderTargets!==!0&&(me.__webglTexture===void 0&&(me.__webglTexture=l.createTexture()),me.__version=R.version,a.memory.textures++);const ye=F.isWebGLCubeRenderTarget===!0,Te=F.isWebGLMultipleRenderTargets===!0,je=E(F)||c;if(ye){te.__webglFramebuffer=[];for(let Ae=0;Ae<6;Ae++)te.__webglFramebuffer[Ae]=l.createFramebuffer()}else{if(te.__webglFramebuffer=l.createFramebuffer(),Te)if(i.drawBuffers){const Ae=F.texture;for(let ce=0,Ge=Ae.length;ce<Ge;ce++){const Ze=n.get(Ae[ce]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=l.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&F.samples>0&&Ve(F)===!1){const Ae=Te?R:[R];te.__webglMultisampledFramebuffer=l.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,te.__webglMultisampledFramebuffer);for(let ce=0;ce<Ae.length;ce++){const Ge=Ae[ce];te.__webglColorRenderbuffer[ce]=l.createRenderbuffer(),l.bindRenderbuffer(36161,te.__webglColorRenderbuffer[ce]);const Ze=r.convert(Ge.format,Ge.encoding),Oe=r.convert(Ge.type),Ye=A(Ge.internalFormat,Ze,Oe,Ge.encoding,F.isXRRenderTarget===!0),He=qe(F);l.renderbufferStorageMultisample(36161,He,Ye,F.width,F.height),l.framebufferRenderbuffer(36160,36064+ce,36161,te.__webglColorRenderbuffer[ce])}l.bindRenderbuffer(36161,null),F.depthBuffer&&(te.__webglDepthRenderbuffer=l.createRenderbuffer(),Je(te.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(36160,null)}}if(ye){t.bindTexture(34067,me.__webglTexture),Q(34067,R,je);for(let Ae=0;Ae<6;Ae++)Me(te.__webglFramebuffer[Ae],F,R,36064,34069+Ae);L(R,je)&&N(34067),t.unbindTexture()}else if(Te){const Ae=F.texture;for(let ce=0,Ge=Ae.length;ce<Ge;ce++){const Ze=Ae[ce],Oe=n.get(Ze);t.bindTexture(3553,Oe.__webglTexture),Q(3553,Ze,je),Me(te.__webglFramebuffer,F,Ze,36064+ce,3553),L(Ze,je)&&N(3553)}t.unbindTexture()}else{let Ae=3553;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(c?Ae=F.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ae,me.__webglTexture),Q(Ae,R,je),Me(te.__webglFramebuffer,F,R,36064,Ae),L(R,je)&&N(Ae),t.unbindTexture()}F.depthBuffer&&ie(F)}function we(F){const R=E(F)||c,te=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let me=0,ye=te.length;me<ye;me++){const Te=te[me];if(L(Te,R)){const je=F.isWebGLCubeRenderTarget?34067:3553,Ae=n.get(Te).__webglTexture;t.bindTexture(je,Ae),N(je),t.unbindTexture()}}}function Qe(F){if(c&&F.samples>0&&Ve(F)===!1){const R=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],te=F.width,me=F.height;let ye=16384;const Te=[],je=F.stencilBuffer?33306:36096,Ae=n.get(F),ce=F.isWebGLMultipleRenderTargets===!0;if(ce)for(let Ge=0;Ge<R.length;Ge++)t.bindFramebuffer(36160,Ae.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+Ge,36161,null),t.bindFramebuffer(36160,Ae.__webglFramebuffer),l.framebufferTexture2D(36009,36064+Ge,3553,null,0);t.bindFramebuffer(36008,Ae.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ae.__webglFramebuffer);for(let Ge=0;Ge<R.length;Ge++){Te.push(36064+Ge),F.depthBuffer&&Te.push(je);const Ze=Ae.__ignoreDepthValues!==void 0?Ae.__ignoreDepthValues:!1;if(Ze===!1&&(F.depthBuffer&&(ye|=256),F.stencilBuffer&&(ye|=1024)),ce&&l.framebufferRenderbuffer(36008,36064,36161,Ae.__webglColorRenderbuffer[Ge]),Ze===!0&&(l.invalidateFramebuffer(36008,[je]),l.invalidateFramebuffer(36009,[je])),ce){const Oe=n.get(R[Ge]).__webglTexture;l.framebufferTexture2D(36009,36064,3553,Oe,0)}l.blitFramebuffer(0,0,te,me,0,0,te,me,ye,9728),v&&l.invalidateFramebuffer(36008,Te)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ce)for(let Ge=0;Ge<R.length;Ge++){t.bindFramebuffer(36160,Ae.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+Ge,36161,Ae.__webglColorRenderbuffer[Ge]);const Ze=n.get(R[Ge]).__webglTexture;t.bindFramebuffer(36160,Ae.__webglFramebuffer),l.framebufferTexture2D(36009,36064+Ge,3553,Ze,0)}t.bindFramebuffer(36009,Ae.__webglMultisampledFramebuffer)}}function qe(F){return Math.min(p,F.samples)}function Ve(F){const R=n.get(F);return c&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Mt(F){const R=a.render.frame;x.get(F)!==R&&(x.set(F,R),F.update())}function St(F,R){const te=F.encoding,me=F.format,ye=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===Dc||te!==Qi&&(te===Tt?c===!1?e.has("EXT_sRGB")===!0&&me===Rn?(F.format=Dc,F.minFilter=Xt,F.generateMipmaps=!1):R=Xf.sRGBToLinear(R):(me!==Rn||ye!==ji)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",te)),R}this.allocateTextureUnit=k,this.resetTextureUnits=de,this.setTexture2D=j,this.setTexture2DArray=he,this.setTexture3D=W,this.setTextureCube=ue,this.rebindTextures=xe,this.setupRenderTarget=Fe,this.updateRenderTargetMipmap=we,this.updateMultisampleRenderTarget=Qe,this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=Me,this.useMultisampledRTT=Ve}function H0(l,e,t){const n=t.isWebGL2;function i(r,a=null){let c;if(r===ji)return 5121;if(r===p0)return 32819;if(r===m0)return 32820;if(r===h0)return 5120;if(r===f0)return 5122;if(r===Gf)return 5123;if(r===d0)return 5124;if(r===mr)return 5125;if(r===qi)return 5126;if(r===$s)return n?5131:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(r===g0)return 6406;if(r===Rn)return 6408;if(r===v0)return 6409;if(r===_0)return 6410;if(r===vr)return 6402;if(r===rs)return 34041;if(r===Dc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(r===y0)return 6403;if(r===x0)return 36244;if(r===M0)return 33319;if(r===S0)return 33320;if(r===w0)return 36249;if(r===Sc||r===wc||r===bc||r===Tc)if(a===Tt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(r===Sc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===wc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===bc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Tc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(r===Sc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===wc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===bc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Tc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Kh||r===$h||r===ef||r===tf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(r===Kh)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===$h)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===ef)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===tf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===b0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===nf||r===rf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(r===nf)return a===Tt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(r===rf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===sf||r===of||r===af||r===lf||r===cf||r===uf||r===hf||r===ff||r===df||r===pf||r===mf||r===gf||r===vf||r===_f)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(r===sf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===of)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===af)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===lf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===cf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===uf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===hf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===ff)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===df)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===pf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===mf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===gf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===vf)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===_f)return a===Tt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Ec)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(r===Ec)return a===Tt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===T0||r===yf||r===xf||r===Mf)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(r===Ec)return c.COMPRESSED_RED_RGTC1_EXT;if(r===yf)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===xf)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Mf)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===$r?n?34042:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):l[r]!==void 0?l[r]:null}return{convert:i}}class W0 extends ln{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class js extends xt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Uw={type:"move"};class Ah{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new js,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new js,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new js,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const _ of e.hand.values()){const y=t.getJointPose(_,n),S=this._getHandJoint(h,_);y!==null&&(S.matrix.fromArray(y.transform.matrix),S.matrix.decompose(S.position,S.rotation,S.scale),S.jointRadius=y.radius),S.visible=y!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),v=.02,x=.005;h.inputState.pinching&&m>v+x?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-x&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Uw)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=r!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new js;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class X0 extends Bt{constructor(e,t,n,i,r,a,c,u,h,d){if(d=d!==void 0?d:vr,d!==vr&&d!==rs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===vr&&(n=mr),n===void 0&&d===rs&&(n=$r),super(null,i,r,a,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Wt,this.minFilter=u!==void 0?u:Wt,this.flipY=!1,this.generateMipmaps=!1}}class Bw extends $i{constructor(e,t){super();const n=this;let i=null,r=1,a=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,v=null,x=null;const _=t.getContextAttributes();let y=null,S=null;const b=[],w=[],E=new Set,C=new Map,L=new ln;L.layers.enable(1),L.viewport=new bt;const N=new ln;N.layers.enable(2),N.viewport=new bt;const A=[L,N],P=new W0;P.layers.enable(1),P.layers.enable(2);let O=null,H=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let ue=b[W];return ue===void 0&&(ue=new Ah,b[W]=ue),ue.getTargetRaySpace()},this.getControllerGrip=function(W){let ue=b[W];return ue===void 0&&(ue=new Ah,b[W]=ue),ue.getGripSpace()},this.getHand=function(W){let ue=b[W];return ue===void 0&&(ue=new Ah,b[W]=ue),ue.getHandSpace()};function K(W){const ue=w.indexOf(W.inputSource);if(ue===-1)return;const ge=b[ue];ge!==void 0&&ge.dispatchEvent({type:W.type,data:W.inputSource})}function X(){i.removeEventListener("select",K),i.removeEventListener("selectstart",K),i.removeEventListener("selectend",K),i.removeEventListener("squeeze",K),i.removeEventListener("squeezestart",K),i.removeEventListener("squeezeend",K),i.removeEventListener("end",X),i.removeEventListener("inputsourceschange",V);for(let W=0;W<b.length;W++){const ue=w[W];ue!==null&&(w[W]=null,b[W].disconnect(ue))}O=null,H=null,e.setRenderTarget(y),v=null,m=null,p=null,i=null,S=null,he.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){r=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){c=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(W){h=W},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(W){if(i=W,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",K),i.addEventListener("selectstart",K),i.addEventListener("selectend",K),i.addEventListener("squeeze",K),i.addEventListener("squeezestart",K),i.addEventListener("squeezeend",K),i.addEventListener("end",X),i.addEventListener("inputsourceschange",V),_.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ue={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};v=new XRWebGLLayer(i,t,ue),i.updateRenderState({baseLayer:v}),S=new di(v.framebufferWidth,v.framebufferHeight,{format:Rn,type:ji,encoding:e.outputEncoding,stencilBuffer:_.stencil})}else{let ue=null,ge=null,_e=null;_.depth&&(_e=_.stencil?35056:33190,ue=_.stencil?rs:vr,ge=_.stencil?$r:mr);const Q={colorFormat:32856,depthFormat:_e,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Q),i.updateRenderState({layers:[m]}),S=new di(m.textureWidth,m.textureHeight,{format:Rn,type:ji,depthTexture:new X0(m.textureWidth,m.textureHeight,ge,void 0,void 0,void 0,void 0,void 0,void 0,ue),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0});const De=e.properties.get(S);De.__ignoreDepthValues=m.ignoreDepthValues}S.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await i.requestReferenceSpace(c),he.setContext(i),he.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function V(W){for(let ue=0;ue<W.removed.length;ue++){const ge=W.removed[ue],_e=w.indexOf(ge);_e>=0&&(w[_e]=null,b[_e].disconnect(ge))}for(let ue=0;ue<W.added.length;ue++){const ge=W.added[ue];let _e=w.indexOf(ge);if(_e===-1){for(let De=0;De<b.length;De++)if(De>=w.length){w.push(ge),_e=De;break}else if(w[De]===null){w[De]=ge,_e=De;break}if(_e===-1)break}const Q=b[_e];Q&&Q.connect(ge)}}const ee=new D,oe=new D;function de(W,ue,ge){ee.setFromMatrixPosition(ue.matrixWorld),oe.setFromMatrixPosition(ge.matrixWorld);const _e=ee.distanceTo(oe),Q=ue.projectionMatrix.elements,De=ge.projectionMatrix.elements,ze=Q[14]/(Q[10]-1),Ne=Q[14]/(Q[10]+1),Me=(Q[9]+1)/Q[5],Je=(Q[9]-1)/Q[5],le=(Q[8]-1)/Q[0],ie=(De[8]+1)/De[0],xe=ze*le,Fe=ze*ie,we=_e/(-le+ie),Qe=we*-le;ue.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(Qe),W.translateZ(we),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const qe=ze+we,Ve=Ne+we,Mt=xe-Qe,St=Fe+(_e-Qe),F=Me*Ne/Ve*qe,R=Je*Ne/Ve*qe;W.projectionMatrix.makePerspective(Mt,St,F,R,qe,Ve)}function k(W,ue){ue===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(ue.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(i===null)return;P.near=N.near=L.near=W.near,P.far=N.far=L.far=W.far,(O!==P.near||H!==P.far)&&(i.updateRenderState({depthNear:P.near,depthFar:P.far}),O=P.near,H=P.far);const ue=W.parent,ge=P.cameras;k(P,ue);for(let Q=0;Q<ge.length;Q++)k(ge[Q],ue);P.matrixWorld.decompose(P.position,P.quaternion,P.scale),W.matrix.copy(P.matrix),W.matrix.decompose(W.position,W.quaternion,W.scale);const _e=W.children;for(let Q=0,De=_e.length;Q<De;Q++)_e[Q].updateMatrixWorld(!0);ge.length===2?de(P,L,N):P.projectionMatrix.copy(L.projectionMatrix)},this.getCamera=function(){return P},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(W){u=W,m!==null&&(m.fixedFoveation=W),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=W)},this.getPlanes=function(){return E};let J=null;function j(W,ue){if(d=ue.getViewerPose(h||a),x=ue,d!==null){const ge=d.views;v!==null&&(e.setRenderTargetFramebuffer(S,v.framebuffer),e.setRenderTarget(S));let _e=!1;ge.length!==P.cameras.length&&(P.cameras.length=0,_e=!0);for(let Q=0;Q<ge.length;Q++){const De=ge[Q];let ze=null;if(v!==null)ze=v.getViewport(De);else{const Me=p.getViewSubImage(m,De);ze=Me.viewport,Q===0&&(e.setRenderTargetTextures(S,Me.colorTexture,m.ignoreDepthValues?void 0:Me.depthStencilTexture),e.setRenderTarget(S))}let Ne=A[Q];Ne===void 0&&(Ne=new ln,Ne.layers.enable(Q),Ne.viewport=new bt,A[Q]=Ne),Ne.matrix.fromArray(De.transform.matrix),Ne.projectionMatrix.fromArray(De.projectionMatrix),Ne.viewport.set(ze.x,ze.y,ze.width,ze.height),Q===0&&P.matrix.copy(Ne.matrix),_e===!0&&P.cameras.push(Ne)}}for(let ge=0;ge<b.length;ge++){const _e=w[ge],Q=b[ge];_e!==null&&Q!==void 0&&Q.update(_e,ue,h||a)}if(J&&J(W,ue),ue.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:ue.detectedPlanes});let ge=null;for(const _e of E)ue.detectedPlanes.has(_e)||(ge===null&&(ge=[]),ge.push(_e));if(ge!==null)for(const _e of ge)E.delete(_e),C.delete(_e),n.dispatchEvent({type:"planeremoved",data:_e});for(const _e of ue.detectedPlanes)if(!E.has(_e))E.add(_e),C.set(_e,ue.lastChangedTime),n.dispatchEvent({type:"planeadded",data:_e});else{const Q=C.get(_e);_e.lastChangedTime>Q&&(C.set(_e,_e.lastChangedTime),n.dispatchEvent({type:"planechanged",data:_e}))}}x=null}const he=new k0;he.setAnimationLoop(j),this.setAnimationLoop=function(W){J=W},this.dispose=function(){}}}function Vw(l,e){function t(_,y){y.color.getRGB(_.fogColor.value,F0(l)),y.isFog?(_.fogNear.value=y.near,_.fogFar.value=y.far):y.isFogExp2&&(_.fogDensity.value=y.density)}function n(_,y,S,b,w){y.isMeshBasicMaterial||y.isMeshLambertMaterial?i(_,y):y.isMeshToonMaterial?(i(_,y),d(_,y)):y.isMeshPhongMaterial?(i(_,y),h(_,y)):y.isMeshStandardMaterial?(i(_,y),p(_,y),y.isMeshPhysicalMaterial&&m(_,y,w)):y.isMeshMatcapMaterial?(i(_,y),v(_,y)):y.isMeshDepthMaterial?i(_,y):y.isMeshDistanceMaterial?(i(_,y),x(_,y)):y.isMeshNormalMaterial?i(_,y):y.isLineBasicMaterial?(r(_,y),y.isLineDashedMaterial&&a(_,y)):y.isPointsMaterial?c(_,y,S,b):y.isSpriteMaterial?u(_,y):y.isShadowMaterial?(_.color.value.copy(y.color),_.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function i(_,y){_.opacity.value=y.opacity,y.color&&_.diffuse.value.copy(y.color),y.emissive&&_.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(_.map.value=y.map),y.alphaMap&&(_.alphaMap.value=y.alphaMap),y.bumpMap&&(_.bumpMap.value=y.bumpMap,_.bumpScale.value=y.bumpScale,y.side===In&&(_.bumpScale.value*=-1)),y.displacementMap&&(_.displacementMap.value=y.displacementMap,_.displacementScale.value=y.displacementScale,_.displacementBias.value=y.displacementBias),y.emissiveMap&&(_.emissiveMap.value=y.emissiveMap),y.normalMap&&(_.normalMap.value=y.normalMap,_.normalScale.value.copy(y.normalScale),y.side===In&&_.normalScale.value.negate()),y.specularMap&&(_.specularMap.value=y.specularMap),y.alphaTest>0&&(_.alphaTest.value=y.alphaTest);const S=e.get(y).envMap;if(S&&(_.envMap.value=S,_.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=y.reflectivity,_.ior.value=y.ior,_.refractionRatio.value=y.refractionRatio),y.lightMap){_.lightMap.value=y.lightMap;const E=l.physicallyCorrectLights!==!0?Math.PI:1;_.lightMapIntensity.value=y.lightMapIntensity*E}y.aoMap&&(_.aoMap.value=y.aoMap,_.aoMapIntensity.value=y.aoMapIntensity);let b;y.map?b=y.map:y.specularMap?b=y.specularMap:y.displacementMap?b=y.displacementMap:y.normalMap?b=y.normalMap:y.bumpMap?b=y.bumpMap:y.roughnessMap?b=y.roughnessMap:y.metalnessMap?b=y.metalnessMap:y.alphaMap?b=y.alphaMap:y.emissiveMap?b=y.emissiveMap:y.clearcoatMap?b=y.clearcoatMap:y.clearcoatNormalMap?b=y.clearcoatNormalMap:y.clearcoatRoughnessMap?b=y.clearcoatRoughnessMap:y.iridescenceMap?b=y.iridescenceMap:y.iridescenceThicknessMap?b=y.iridescenceThicknessMap:y.specularIntensityMap?b=y.specularIntensityMap:y.specularColorMap?b=y.specularColorMap:y.transmissionMap?b=y.transmissionMap:y.thicknessMap?b=y.thicknessMap:y.sheenColorMap?b=y.sheenColorMap:y.sheenRoughnessMap&&(b=y.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),_.uvTransform.value.copy(b.matrix));let w;y.aoMap?w=y.aoMap:y.lightMap&&(w=y.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),_.uv2Transform.value.copy(w.matrix))}function r(_,y){_.diffuse.value.copy(y.color),_.opacity.value=y.opacity}function a(_,y){_.dashSize.value=y.dashSize,_.totalSize.value=y.dashSize+y.gapSize,_.scale.value=y.scale}function c(_,y,S,b){_.diffuse.value.copy(y.color),_.opacity.value=y.opacity,_.size.value=y.size*S,_.scale.value=b*.5,y.map&&(_.map.value=y.map),y.alphaMap&&(_.alphaMap.value=y.alphaMap),y.alphaTest>0&&(_.alphaTest.value=y.alphaTest);let w;y.map?w=y.map:y.alphaMap&&(w=y.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),_.uvTransform.value.copy(w.matrix))}function u(_,y){_.diffuse.value.copy(y.color),_.opacity.value=y.opacity,_.rotation.value=y.rotation,y.map&&(_.map.value=y.map),y.alphaMap&&(_.alphaMap.value=y.alphaMap),y.alphaTest>0&&(_.alphaTest.value=y.alphaTest);let S;y.map?S=y.map:y.alphaMap&&(S=y.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),_.uvTransform.value.copy(S.matrix))}function h(_,y){_.specular.value.copy(y.specular),_.shininess.value=Math.max(y.shininess,1e-4)}function d(_,y){y.gradientMap&&(_.gradientMap.value=y.gradientMap)}function p(_,y){_.roughness.value=y.roughness,_.metalness.value=y.metalness,y.roughnessMap&&(_.roughnessMap.value=y.roughnessMap),y.metalnessMap&&(_.metalnessMap.value=y.metalnessMap),e.get(y).envMap&&(_.envMapIntensity.value=y.envMapIntensity)}function m(_,y,S){_.ior.value=y.ior,y.sheen>0&&(_.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),_.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(_.sheenColorMap.value=y.sheenColorMap),y.sheenRoughnessMap&&(_.sheenRoughnessMap.value=y.sheenRoughnessMap)),y.clearcoat>0&&(_.clearcoat.value=y.clearcoat,_.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(_.clearcoatMap.value=y.clearcoatMap),y.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap),y.clearcoatNormalMap&&(_.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),_.clearcoatNormalMap.value=y.clearcoatNormalMap,y.side===In&&_.clearcoatNormalScale.value.negate())),y.iridescence>0&&(_.iridescence.value=y.iridescence,_.iridescenceIOR.value=y.iridescenceIOR,_.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(_.iridescenceMap.value=y.iridescenceMap),y.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=y.iridescenceThicknessMap)),y.transmission>0&&(_.transmission.value=y.transmission,_.transmissionSamplerMap.value=S.texture,_.transmissionSamplerSize.value.set(S.width,S.height),y.transmissionMap&&(_.transmissionMap.value=y.transmissionMap),_.thickness.value=y.thickness,y.thicknessMap&&(_.thicknessMap.value=y.thicknessMap),_.attenuationDistance.value=y.attenuationDistance,_.attenuationColor.value.copy(y.attenuationColor)),_.specularIntensity.value=y.specularIntensity,_.specularColor.value.copy(y.specularColor),y.specularIntensityMap&&(_.specularIntensityMap.value=y.specularIntensityMap),y.specularColorMap&&(_.specularColorMap.value=y.specularColorMap)}function v(_,y){y.matcap&&(_.matcap.value=y.matcap)}function x(_,y){_.referencePosition.value.copy(y.referencePosition),_.nearDistance.value=y.nearDistance,_.farDistance.value=y.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Gw(l,e,t,n){let i={},r={},a=[];const c=t.isWebGL2?l.getParameter(35375):0;function u(b,w){const E=w.program;n.uniformBlockBinding(b,E)}function h(b,w){let E=i[b.id];E===void 0&&(x(b),E=d(b),i[b.id]=E,b.addEventListener("dispose",y));const C=w.program;n.updateUBOMapping(b,C);const L=e.render.frame;r[b.id]!==L&&(m(b),r[b.id]=L)}function d(b){const w=p();b.__bindingPointIndex=w;const E=l.createBuffer(),C=b.__size,L=b.usage;return l.bindBuffer(35345,E),l.bufferData(35345,C,L),l.bindBuffer(35345,null),l.bindBufferBase(35345,w,E),E}function p(){for(let b=0;b<c;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(b){const w=i[b.id],E=b.uniforms,C=b.__cache;l.bindBuffer(35345,w);for(let L=0,N=E.length;L<N;L++){const A=E[L];if(v(A,L,C)===!0){const P=A.__offset,O=Array.isArray(A.value)?A.value:[A.value];let H=0;for(let K=0;K<O.length;K++){const X=O[K],V=_(X);typeof X=="number"?(A.__data[0]=X,l.bufferSubData(35345,P+H,A.__data)):X.isMatrix3?(A.__data[0]=X.elements[0],A.__data[1]=X.elements[1],A.__data[2]=X.elements[2],A.__data[3]=X.elements[0],A.__data[4]=X.elements[3],A.__data[5]=X.elements[4],A.__data[6]=X.elements[5],A.__data[7]=X.elements[0],A.__data[8]=X.elements[6],A.__data[9]=X.elements[7],A.__data[10]=X.elements[8],A.__data[11]=X.elements[0]):(X.toArray(A.__data,H),H+=V.storage/Float32Array.BYTES_PER_ELEMENT)}l.bufferSubData(35345,P,A.__data)}}l.bindBuffer(35345,null)}function v(b,w,E){const C=b.value;if(E[w]===void 0){if(typeof C=="number")E[w]=C;else{const L=Array.isArray(C)?C:[C],N=[];for(let A=0;A<L.length;A++)N.push(L[A].clone());E[w]=N}return!0}else if(typeof C=="number"){if(E[w]!==C)return E[w]=C,!0}else{const L=Array.isArray(E[w])?E[w]:[E[w]],N=Array.isArray(C)?C:[C];for(let A=0;A<L.length;A++){const P=L[A];if(P.equals(N[A])===!1)return P.copy(N[A]),!0}}return!1}function x(b){const w=b.uniforms;let E=0;const C=16;let L=0;for(let N=0,A=w.length;N<A;N++){const P=w[N],O={boundary:0,storage:0},H=Array.isArray(P.value)?P.value:[P.value];for(let K=0,X=H.length;K<X;K++){const V=H[K],ee=_(V);O.boundary+=ee.boundary,O.storage+=ee.storage}if(P.__data=new Float32Array(O.storage/Float32Array.BYTES_PER_ELEMENT),P.__offset=E,N>0){L=E%C;const K=C-L;L!==0&&K-O.boundary<0&&(E+=C-L,P.__offset=E)}E+=O.storage}return L=E%C,L>0&&(E+=C-L),b.__size=E,b.__cache={},this}function _(b){const w={boundary:0,storage:0};return typeof b=="number"?(w.boundary=4,w.storage=4):b.isVector2?(w.boundary=8,w.storage=8):b.isVector3||b.isColor?(w.boundary=16,w.storage=12):b.isVector4?(w.boundary=16,w.storage=16):b.isMatrix3?(w.boundary=48,w.storage=48):b.isMatrix4?(w.boundary=64,w.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),w}function y(b){const w=b.target;w.removeEventListener("dispose",y);const E=a.indexOf(w.__bindingPointIndex);a.splice(E,1),l.deleteBuffer(i[w.id]),delete i[w.id],delete r[w.id]}function S(){for(const b in i)l.deleteBuffer(i[b]);a=[],i={},r={}}return{bind:u,update:h,dispose:S}}function Hw(){const l=la("canvas");return l.style.display="block",l}function ed(l={}){this.isWebGLRenderer=!0;const e=l.canvas!==void 0?l.canvas:Hw(),t=l.context!==void 0?l.context:null,n=l.depth!==void 0?l.depth:!0,i=l.stencil!==void 0?l.stencil:!0,r=l.antialias!==void 0?l.antialias:!1,a=l.premultipliedAlpha!==void 0?l.premultipliedAlpha:!0,c=l.preserveDrawingBuffer!==void 0?l.preserveDrawingBuffer:!1,u=l.powerPreference!==void 0?l.powerPreference:"default",h=l.failIfMajorPerformanceCaveat!==void 0?l.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=l.alpha!==void 0?l.alpha:!1;let p=null,m=null;const v=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Qi,this.physicallyCorrectLights=!1,this.toneMapping=fi,this.toneMappingExposure=1;const _=this;let y=!1,S=0,b=0,w=null,E=-1,C=null;const L=new bt,N=new bt;let A=null,P=e.width,O=e.height,H=1,K=null,X=null;const V=new bt(0,0,P,O),ee=new bt(0,0,P,O);let oe=!1;const de=new Gc;let k=!1,J=!1,j=null;const he=new tt,W=new fe,ue=new D,ge={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function _e(){return w===null?H:1}let Q=t;function De(I,Y){for(let se=0;se<I.length;se++){const q=I[se],ae=e.getContext(q,Y);if(ae!==null)return ae}return null}try{const I={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Oc}`),e.addEventListener("webglcontextlost",Ye,!1),e.addEventListener("webglcontextrestored",He,!1),e.addEventListener("webglcontextcreationerror",dt,!1),Q===null){const Y=["webgl2","webgl","experimental-webgl"];if(_.isWebGL1Renderer===!0&&Y.shift(),Q=De(Y,I),Q===null)throw De(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Q.getShaderPrecisionFormat===void 0&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ze,Ne,Me,Je,le,ie,xe,Fe,we,Qe,qe,Ve,Mt,St,F,R,te,me,ye,Te,je,Ae,ce,Ge;function Ze(){ze=new sS(Q),Ne=new $M(Q,ze,l),ze.init(Ne),Ae=new H0(Q,ze,Ne),Me=new Ow(Q,ze,Ne),Je=new lS,le=new Tw,ie=new kw(Q,ze,Me,le,Ne,Ae,Je),xe=new tS(_),Fe=new rS(_),we=new vx(Q,Ne),ce=new QM(Q,ze,we,Ne),Qe=new oS(Q,we,Je,ce),qe=new fS(Q,Qe,we,Je),ye=new hS(Q,Ne,ie),R=new eS(le),Ve=new bw(_,xe,Fe,ze,Ne,ce,R),Mt=new Vw(_,le),St=new Aw,F=new Dw(ze,Ne),me=new jM(_,xe,Fe,Me,qe,d,a),te=new Fw(_,qe,Ne),Ge=new Gw(Q,Je,Ne,Me),Te=new KM(Q,ze,Je,Ne),je=new aS(Q,ze,Je,Ne),Je.programs=Ve.programs,_.capabilities=Ne,_.extensions=ze,_.properties=le,_.renderLists=St,_.shadowMap=te,_.state=Me,_.info=Je}Ze();const Oe=new Bw(_,Q);this.xr=Oe,this.getContext=function(){return Q},this.getContextAttributes=function(){return Q.getContextAttributes()},this.forceContextLoss=function(){const I=ze.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ze.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(I){I!==void 0&&(H=I,this.setSize(P,O,!1))},this.getSize=function(I){return I.set(P,O)},this.setSize=function(I,Y,se){if(Oe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}P=I,O=Y,e.width=Math.floor(I*H),e.height=Math.floor(Y*H),se!==!1&&(e.style.width=I+"px",e.style.height=Y+"px"),this.setViewport(0,0,I,Y)},this.getDrawingBufferSize=function(I){return I.set(P*H,O*H).floor()},this.setDrawingBufferSize=function(I,Y,se){P=I,O=Y,H=se,e.width=Math.floor(I*se),e.height=Math.floor(Y*se),this.setViewport(0,0,I,Y)},this.getCurrentViewport=function(I){return I.copy(L)},this.getViewport=function(I){return I.copy(V)},this.setViewport=function(I,Y,se,q){I.isVector4?V.set(I.x,I.y,I.z,I.w):V.set(I,Y,se,q),Me.viewport(L.copy(V).multiplyScalar(H).floor())},this.getScissor=function(I){return I.copy(ee)},this.setScissor=function(I,Y,se,q){I.isVector4?ee.set(I.x,I.y,I.z,I.w):ee.set(I,Y,se,q),Me.scissor(N.copy(ee).multiplyScalar(H).floor())},this.getScissorTest=function(){return oe},this.setScissorTest=function(I){Me.setScissorTest(oe=I)},this.setOpaqueSort=function(I){K=I},this.setTransparentSort=function(I){X=I},this.getClearColor=function(I){return I.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(I=!0,Y=!0,se=!0){let q=0;I&&(q|=16384),Y&&(q|=256),se&&(q|=1024),Q.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ye,!1),e.removeEventListener("webglcontextrestored",He,!1),e.removeEventListener("webglcontextcreationerror",dt,!1),St.dispose(),F.dispose(),le.dispose(),xe.dispose(),Fe.dispose(),qe.dispose(),ce.dispose(),Ge.dispose(),Ve.dispose(),Oe.dispose(),Oe.removeEventListener("sessionstart",Ce),Oe.removeEventListener("sessionend",Ue),j&&(j.dispose(),j=null),mt.stop()};function Ye(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function He(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const I=Je.autoReset,Y=te.enabled,se=te.autoUpdate,q=te.needsUpdate,ae=te.type;Ze(),Je.autoReset=I,te.enabled=Y,te.autoUpdate=se,te.needsUpdate=q,te.type=ae}function dt(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Et(I){const Y=I.target;Y.removeEventListener("dispose",Et),Yt(Y)}function Yt(I){B(I),le.remove(I)}function B(I){const Y=le.get(I).programs;Y!==void 0&&(Y.forEach(function(se){Ve.releaseProgram(se)}),I.isShaderMaterial&&Ve.releaseShaderCache(I))}this.renderBufferDirect=function(I,Y,se,q,ae,We){Y===null&&(Y=ge);const Ke=ae.isMesh&&ae.matrixWorld.determinant()<0,it=$c(I,Y,se,q,ae);Me.setMaterial(q,Ke);let lt=se.index,ft=1;q.wireframe===!0&&(lt=Qe.getWireframeAttribute(se),ft=2);const ut=se.drawRange,ht=se.attributes.position;let Ft=ut.start*ft,yn=(ut.start+ut.count)*ft;We!==null&&(Ft=Math.max(Ft,We.start*ft),yn=Math.min(yn,(We.start+We.count)*ft)),lt!==null?(Ft=Math.max(Ft,0),yn=Math.min(yn,lt.count)):ht!=null&&(Ft=Math.max(Ft,0),yn=Math.min(yn,ht.count));const ii=yn-Ft;if(ii<0||ii===1/0)return;ce.setup(ae,q,it,se,lt);let Ai,Rt=Te;if(lt!==null&&(Ai=we.get(lt),Rt=je,Rt.setIndex(Ai)),ae.isMesh)q.wireframe===!0?(Me.setLineWidth(q.wireframeLinewidth*_e()),Rt.setMode(1)):Rt.setMode(4);else if(ae.isLine){let rt=q.linewidth;rt===void 0&&(rt=1),Me.setLineWidth(rt*_e()),ae.isLineSegments?Rt.setMode(1):ae.isLineLoop?Rt.setMode(2):Rt.setMode(3)}else ae.isPoints?Rt.setMode(0):ae.isSprite&&Rt.setMode(4);if(ae.isInstancedMesh)Rt.renderInstances(Ft,ii,ae.count);else if(se.isInstancedBufferGeometry){const rt=se._maxInstanceCount!==void 0?se._maxInstanceCount:1/0,Er=Math.min(se.instanceCount,rt);Rt.renderInstances(Ft,ii,Er)}else Rt.render(Ft,ii)},this.compile=function(I,Y){function se(q,ae,We){q.transparent===!0&&q.side===Xi&&q.forceSinglePass===!1?(q.side=In,q.needsUpdate=!0,En(q,ae,We),q.side=Ji,q.needsUpdate=!0,En(q,ae,We),q.side=Xi):En(q,ae,We)}m=F.get(I),m.init(),x.push(m),I.traverseVisible(function(q){q.isLight&&q.layers.test(Y.layers)&&(m.pushLight(q),q.castShadow&&m.pushShadow(q))}),m.setupLights(_.physicallyCorrectLights),I.traverse(function(q){const ae=q.material;if(ae)if(Array.isArray(ae))for(let We=0;We<ae.length;We++){const Ke=ae[We];se(Ke,I,q)}else se(ae,I,q)}),x.pop(),m=null};let re=null;function pe(I){re&&re(I)}function Ce(){mt.stop()}function Ue(){mt.start()}const mt=new k0;mt.setAnimationLoop(pe),typeof self<"u"&&mt.setContext(self),this.setAnimationLoop=function(I){re=I,Oe.setAnimationLoop(I),I===null?mt.stop():mt.start()},Oe.addEventListener("sessionstart",Ce),Oe.addEventListener("sessionend",Ue),this.render=function(I,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(y===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),Oe.enabled===!0&&Oe.isPresenting===!0&&(Oe.cameraAutoUpdate===!0&&Oe.updateCamera(Y),Y=Oe.getCamera()),I.isScene===!0&&I.onBeforeRender(_,I,Y,w),m=F.get(I,x.length),m.init(),x.push(m),he.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),de.setFromProjectionMatrix(he),J=this.localClippingEnabled,k=R.init(this.clippingPlanes,J),p=St.get(I,v.length),p.init(),v.push(p),Vt(I,Y,0,_.sortObjects),p.finish(),_.sortObjects===!0&&p.sort(K,X),k===!0&&R.beginShadows();const se=m.state.shadowsArray;if(te.render(se,I,Y),k===!0&&R.endShadows(),this.info.autoReset===!0&&this.info.reset(),me.render(p,I),m.setupLights(_.physicallyCorrectLights),Y.isArrayCamera){const q=Y.cameras;for(let ae=0,We=q.length;ae<We;ae++){const Ke=q[ae];tn(p,I,Ke,Ke.viewport)}}else tn(p,I,Y);w!==null&&(ie.updateMultisampleRenderTarget(w),ie.updateRenderTargetMipmap(w)),I.isScene===!0&&I.onAfterRender(_,I,Y),ce.resetDefaultState(),E=-1,C=null,x.pop(),x.length>0?m=x[x.length-1]:m=null,v.pop(),v.length>0?p=v[v.length-1]:p=null};function Vt(I,Y,se,q){if(I.visible===!1)return;if(I.layers.test(Y.layers)){if(I.isGroup)se=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(Y);else if(I.isLight)m.pushLight(I),I.castShadow&&m.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||de.intersectsSprite(I)){q&&ue.setFromMatrixPosition(I.matrixWorld).applyMatrix4(he);const Ke=qe.update(I),it=I.material;it.visible&&p.push(I,Ke,it,se,ue.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(I.isSkinnedMesh&&I.skeleton.frame!==Je.render.frame&&(I.skeleton.update(),I.skeleton.frame=Je.render.frame),!I.frustumCulled||de.intersectsObject(I))){q&&ue.setFromMatrixPosition(I.matrixWorld).applyMatrix4(he);const Ke=qe.update(I),it=I.material;if(Array.isArray(it)){const lt=Ke.groups;for(let ft=0,ut=lt.length;ft<ut;ft++){const ht=lt[ft],Ft=it[ht.materialIndex];Ft&&Ft.visible&&p.push(I,Ke,Ft,se,ue.z,ht)}}else it.visible&&p.push(I,Ke,it,se,ue.z,null)}}const We=I.children;for(let Ke=0,it=We.length;Ke<it;Ke++)Vt(We[Ke],Y,se,q)}function tn(I,Y,se,q){const ae=I.opaque,We=I.transmissive,Ke=I.transparent;m.setupLightsView(se),k===!0&&R.setGlobalState(_.clippingPlanes,se),We.length>0&&gi(ae,Y,se),q&&Me.viewport(L.copy(q)),ae.length>0&&At(ae,Y,se),We.length>0&&At(We,Y,se),Ke.length>0&&At(Ke,Y,se),Me.buffers.depth.setTest(!0),Me.buffers.depth.setMask(!0),Me.buffers.color.setMask(!0),Me.setPolygonOffset(!1)}function gi(I,Y,se){const q=Ne.isWebGL2;j===null&&(j=new di(1,1,{generateMipmaps:!0,type:ze.has("EXT_color_buffer_half_float")?$s:ji,minFilter:xr,samples:q&&r===!0?4:0})),_.getDrawingBufferSize(W),q?j.setSize(W.x,W.y):j.setSize(zc(W.x),zc(W.y));const ae=_.getRenderTarget();_.setRenderTarget(j),_.clear();const We=_.toneMapping;_.toneMapping=fi,At(I,Y,se),_.toneMapping=We,ie.updateMultisampleRenderTarget(j),ie.updateRenderTargetMipmap(j),_.setRenderTarget(ae)}function At(I,Y,se){const q=Y.isScene===!0?Y.overrideMaterial:null;for(let ae=0,We=I.length;ae<We;ae++){const Ke=I[ae],it=Ke.object,lt=Ke.geometry,ft=q===null?Ke.material:q,ut=Ke.group;it.layers.test(se.layers)&&Gn(it,Y,se,lt,ft,ut)}}function Gn(I,Y,se,q,ae,We){I.onBeforeRender(_,Y,se,q,ae,We),I.modelViewMatrix.multiplyMatrices(se.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),ae.onBeforeRender(_,Y,se,q,I,We),ae.transparent===!0&&ae.side===Xi&&ae.forceSinglePass===!1?(ae.side=In,ae.needsUpdate=!0,_.renderBufferDirect(se,Y,q,ae,I,We),ae.side=Ji,ae.needsUpdate=!0,_.renderBufferDirect(se,Y,q,ae,I,We),ae.side=Xi):_.renderBufferDirect(se,Y,q,ae,I,We),I.onAfterRender(_,Y,se,q,ae,We)}function En(I,Y,se){Y.isScene!==!0&&(Y=ge);const q=le.get(I),ae=m.state.lights,We=m.state.shadowsArray,Ke=ae.state.version,it=Ve.getParameters(I,ae.state,We,Y,se),lt=Ve.getProgramCacheKey(it);let ft=q.programs;q.environment=I.isMeshStandardMaterial?Y.environment:null,q.fog=Y.fog,q.envMap=(I.isMeshStandardMaterial?Fe:xe).get(I.envMap||q.environment),ft===void 0&&(I.addEventListener("dispose",Et),ft=new Map,q.programs=ft);let ut=ft.get(lt);if(ut!==void 0){if(q.currentProgram===ut&&q.lightsStateVersion===Ke)return ka(I,it),ut}else it.uniforms=Ve.getUniforms(I),I.onBuild(se,it,_),I.onBeforeCompile(it,_),ut=Ve.acquireProgram(it,lt),ft.set(lt,ut),q.uniforms=it.uniforms;const ht=q.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ht.clippingPlanes=R.uniform),ka(I,it),q.needsLights=ho(I),q.lightsStateVersion=Ke,q.needsLights&&(ht.ambientLightColor.value=ae.state.ambient,ht.lightProbe.value=ae.state.probe,ht.directionalLights.value=ae.state.directional,ht.directionalLightShadows.value=ae.state.directionalShadow,ht.spotLights.value=ae.state.spot,ht.spotLightShadows.value=ae.state.spotShadow,ht.rectAreaLights.value=ae.state.rectArea,ht.ltc_1.value=ae.state.rectAreaLTC1,ht.ltc_2.value=ae.state.rectAreaLTC2,ht.pointLights.value=ae.state.point,ht.pointLightShadows.value=ae.state.pointShadow,ht.hemisphereLights.value=ae.state.hemi,ht.directionalShadowMap.value=ae.state.directionalShadowMap,ht.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,ht.spotShadowMap.value=ae.state.spotShadowMap,ht.spotLightMatrix.value=ae.state.spotLightMatrix,ht.spotLightMap.value=ae.state.spotLightMap,ht.pointShadowMap.value=ae.state.pointShadowMap,ht.pointShadowMatrix.value=ae.state.pointShadowMatrix);const Ft=ut.getUniforms(),yn=Lc.seqWithValue(Ft.seq,ht);return q.currentProgram=ut,q.uniformsList=yn,ut}function ka(I,Y){const se=le.get(I);se.outputEncoding=Y.outputEncoding,se.instancing=Y.instancing,se.skinning=Y.skinning,se.morphTargets=Y.morphTargets,se.morphNormals=Y.morphNormals,se.morphColors=Y.morphColors,se.morphTargetsCount=Y.morphTargetsCount,se.numClippingPlanes=Y.numClippingPlanes,se.numIntersection=Y.numClipIntersection,se.vertexAlphas=Y.vertexAlphas,se.vertexTangents=Y.vertexTangents,se.toneMapping=Y.toneMapping}function $c(I,Y,se,q,ae){Y.isScene!==!0&&(Y=ge),ie.resetTextureUnits();const We=Y.fog,Ke=q.isMeshStandardMaterial?Y.environment:null,it=w===null?_.outputEncoding:w.isXRRenderTarget===!0?w.texture.encoding:Qi,lt=(q.isMeshStandardMaterial?Fe:xe).get(q.envMap||Ke),ft=q.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,ut=!!q.normalMap&&!!se.attributes.tangent,ht=!!se.morphAttributes.position,Ft=!!se.morphAttributes.normal,yn=!!se.morphAttributes.color,ii=q.toneMapped?_.toneMapping:fi,Ai=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,Rt=Ai!==void 0?Ai.length:0,rt=le.get(q),Er=m.state.lights;if(k===!0&&(J===!0||I!==C)){const wt=I===C&&q.id===E;R.setState(q,I,wt)}let Ot=!1;q.version===rt.__version?(rt.needsLights&&rt.lightsStateVersion!==Er.state.version||rt.outputEncoding!==it||ae.isInstancedMesh&&rt.instancing===!1||!ae.isInstancedMesh&&rt.instancing===!0||ae.isSkinnedMesh&&rt.skinning===!1||!ae.isSkinnedMesh&&rt.skinning===!0||rt.envMap!==lt||q.fog===!0&&rt.fog!==We||rt.numClippingPlanes!==void 0&&(rt.numClippingPlanes!==R.numPlanes||rt.numIntersection!==R.numIntersection)||rt.vertexAlphas!==ft||rt.vertexTangents!==ut||rt.morphTargets!==ht||rt.morphNormals!==Ft||rt.morphColors!==yn||rt.toneMapping!==ii||Ne.isWebGL2===!0&&rt.morphTargetsCount!==Rt)&&(Ot=!0):(Ot=!0,rt.__version=q.version);let Ci=rt.currentProgram;Ot===!0&&(Ci=En(q,Y,ae));let ps=!1,Hn=!1,Wn=!1;const nt=Ci.getUniforms(),pt=rt.uniforms;if(Me.useProgram(Ci.program)&&(ps=!0,Hn=!0,Wn=!0),q.id!==E&&(E=q.id,Hn=!0),ps||C!==I){if(nt.setValue(Q,"projectionMatrix",I.projectionMatrix),Ne.logarithmicDepthBuffer&&nt.setValue(Q,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),C!==I&&(C=I,Hn=!0,Wn=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const wt=nt.map.cameraPosition;wt!==void 0&&wt.setValue(Q,ue.setFromMatrixPosition(I.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&nt.setValue(Q,"isOrthographic",I.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||ae.isSkinnedMesh)&&nt.setValue(Q,"viewMatrix",I.matrixWorldInverse)}if(ae.isSkinnedMesh){nt.setOptional(Q,ae,"bindMatrix"),nt.setOptional(Q,ae,"bindMatrixInverse");const wt=ae.skeleton;wt&&(Ne.floatVertexTextures?(wt.boneTexture===null&&wt.computeBoneTexture(),nt.setValue(Q,"boneTexture",wt.boneTexture,ie),nt.setValue(Q,"boneTextureSize",wt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Xn=se.morphAttributes;if((Xn.position!==void 0||Xn.normal!==void 0||Xn.color!==void 0&&Ne.isWebGL2===!0)&&ye.update(ae,se,q,Ci),(Hn||rt.receiveShadow!==ae.receiveShadow)&&(rt.receiveShadow=ae.receiveShadow,nt.setValue(Q,"receiveShadow",ae.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(pt.envMap.value=lt,pt.flipEnvMap.value=lt.isCubeTexture&&lt.isRenderTargetTexture===!1?-1:1),Hn&&(nt.setValue(Q,"toneMappingExposure",_.toneMappingExposure),rt.needsLights&&Ua(pt,Wn),We&&q.fog===!0&&Mt.refreshFogUniforms(pt,We),Mt.refreshMaterialUniforms(pt,q,H,O,j),Lc.upload(Q,rt.uniformsList,pt,ie)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(Lc.upload(Q,rt.uniformsList,pt,ie),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&nt.setValue(Q,"center",ae.center),nt.setValue(Q,"modelViewMatrix",ae.modelViewMatrix),nt.setValue(Q,"normalMatrix",ae.normalMatrix),nt.setValue(Q,"modelMatrix",ae.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const wt=q.uniformsGroups;for(let nn=0,Pi=wt.length;nn<Pi;nn++)if(Ne.isWebGL2){const Li=wt[nn];Ge.update(Li,Ci),Ge.bind(Li,Ci)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ci}function Ua(I,Y){I.ambientLightColor.needsUpdate=Y,I.lightProbe.needsUpdate=Y,I.directionalLights.needsUpdate=Y,I.directionalLightShadows.needsUpdate=Y,I.pointLights.needsUpdate=Y,I.pointLightShadows.needsUpdate=Y,I.spotLights.needsUpdate=Y,I.spotLightShadows.needsUpdate=Y,I.rectAreaLights.needsUpdate=Y,I.hemisphereLights.needsUpdate=Y}function ho(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(I,Y,se){le.get(I.texture).__webglTexture=Y,le.get(I.depthTexture).__webglTexture=se;const q=le.get(I);q.__hasExternalTextures=!0,q.__hasExternalTextures&&(q.__autoAllocateDepthBuffer=se===void 0,q.__autoAllocateDepthBuffer||ze.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,Y){const se=le.get(I);se.__webglFramebuffer=Y,se.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(I,Y=0,se=0){w=I,S=Y,b=se;let q=!0,ae=null,We=!1,Ke=!1;if(I){const lt=le.get(I);lt.__useDefaultFramebuffer!==void 0?(Me.bindFramebuffer(36160,null),q=!1):lt.__webglFramebuffer===void 0?ie.setupRenderTarget(I):lt.__hasExternalTextures&&ie.rebindTextures(I,le.get(I.texture).__webglTexture,le.get(I.depthTexture).__webglTexture);const ft=I.texture;(ft.isData3DTexture||ft.isDataArrayTexture||ft.isCompressedArrayTexture)&&(Ke=!0);const ut=le.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(ae=ut[Y],We=!0):Ne.isWebGL2&&I.samples>0&&ie.useMultisampledRTT(I)===!1?ae=le.get(I).__webglMultisampledFramebuffer:ae=ut,L.copy(I.viewport),N.copy(I.scissor),A=I.scissorTest}else L.copy(V).multiplyScalar(H).floor(),N.copy(ee).multiplyScalar(H).floor(),A=oe;if(Me.bindFramebuffer(36160,ae)&&Ne.drawBuffers&&q&&Me.drawBuffers(I,ae),Me.viewport(L),Me.scissor(N),Me.setScissorTest(A),We){const lt=le.get(I.texture);Q.framebufferTexture2D(36160,36064,34069+Y,lt.__webglTexture,se)}else if(Ke){const lt=le.get(I.texture),ft=Y||0;Q.framebufferTextureLayer(36160,36064,lt.__webglTexture,se||0,ft)}E=-1},this.readRenderTargetPixels=function(I,Y,se,q,ae,We,Ke){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=le.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ke!==void 0&&(it=it[Ke]),it){Me.bindFramebuffer(36160,it);try{const lt=I.texture,ft=lt.format,ut=lt.type;if(ft!==Rn&&Ae.convert(ft)!==Q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ht=ut===$s&&(ze.has("EXT_color_buffer_half_float")||Ne.isWebGL2&&ze.has("EXT_color_buffer_float"));if(ut!==ji&&Ae.convert(ut)!==Q.getParameter(35738)&&!(ut===qi&&(Ne.isWebGL2||ze.has("OES_texture_float")||ze.has("WEBGL_color_buffer_float")))&&!ht){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=I.width-q&&se>=0&&se<=I.height-ae&&Q.readPixels(Y,se,q,ae,Ae.convert(ft),Ae.convert(ut),We)}finally{const lt=w!==null?le.get(w).__webglFramebuffer:null;Me.bindFramebuffer(36160,lt)}}},this.copyFramebufferToTexture=function(I,Y,se=0){const q=Math.pow(2,-se),ae=Math.floor(Y.image.width*q),We=Math.floor(Y.image.height*q);ie.setTexture2D(Y,0),Q.copyTexSubImage2D(3553,se,0,0,I.x,I.y,ae,We),Me.unbindTexture()},this.copyTextureToTexture=function(I,Y,se,q=0){const ae=Y.image.width,We=Y.image.height,Ke=Ae.convert(se.format),it=Ae.convert(se.type);ie.setTexture2D(se,0),Q.pixelStorei(37440,se.flipY),Q.pixelStorei(37441,se.premultiplyAlpha),Q.pixelStorei(3317,se.unpackAlignment),Y.isDataTexture?Q.texSubImage2D(3553,q,I.x,I.y,ae,We,Ke,it,Y.image.data):Y.isCompressedTexture?Q.compressedTexSubImage2D(3553,q,I.x,I.y,Y.mipmaps[0].width,Y.mipmaps[0].height,Ke,Y.mipmaps[0].data):Q.texSubImage2D(3553,q,I.x,I.y,Ke,it,Y.image),q===0&&se.generateMipmaps&&Q.generateMipmap(3553),Me.unbindTexture()},this.copyTextureToTexture3D=function(I,Y,se,q,ae=0){if(_.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const We=I.max.x-I.min.x+1,Ke=I.max.y-I.min.y+1,it=I.max.z-I.min.z+1,lt=Ae.convert(q.format),ft=Ae.convert(q.type);let ut;if(q.isData3DTexture)ie.setTexture3D(q,0),ut=32879;else if(q.isDataArrayTexture)ie.setTexture2DArray(q,0),ut=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Q.pixelStorei(37440,q.flipY),Q.pixelStorei(37441,q.premultiplyAlpha),Q.pixelStorei(3317,q.unpackAlignment);const ht=Q.getParameter(3314),Ft=Q.getParameter(32878),yn=Q.getParameter(3316),ii=Q.getParameter(3315),Ai=Q.getParameter(32877),Rt=se.isCompressedTexture?se.mipmaps[0]:se.image;Q.pixelStorei(3314,Rt.width),Q.pixelStorei(32878,Rt.height),Q.pixelStorei(3316,I.min.x),Q.pixelStorei(3315,I.min.y),Q.pixelStorei(32877,I.min.z),se.isDataTexture||se.isData3DTexture?Q.texSubImage3D(ut,ae,Y.x,Y.y,Y.z,We,Ke,it,lt,ft,Rt.data):se.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Q.compressedTexSubImage3D(ut,ae,Y.x,Y.y,Y.z,We,Ke,it,lt,Rt.data)):Q.texSubImage3D(ut,ae,Y.x,Y.y,Y.z,We,Ke,it,lt,ft,Rt),Q.pixelStorei(3314,ht),Q.pixelStorei(32878,Ft),Q.pixelStorei(3316,yn),Q.pixelStorei(3315,ii),Q.pixelStorei(32877,Ai),ae===0&&q.generateMipmaps&&Q.generateMipmap(ut),Me.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?ie.setTextureCube(I,0):I.isData3DTexture?ie.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?ie.setTexture2DArray(I,0):ie.setTexture2D(I,0),Me.unbindTexture()},this.resetState=function(){S=0,b=0,w=null,Me.reset(),ce.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class q0 extends ed{}q0.prototype.isWebGL1Renderer=!0;class Wc{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Pe(e),this.density=t}clone(){return new Wc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Xc{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Pe(e),this.near=t,this.far=n}clone(){return new Xc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class td extends xt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class qc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=oa,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Bn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Bn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Bn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Sn=new D;class ss{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Sn.fromBufferAttribute(this,t),Sn.applyMatrix4(e),this.setXYZ(t,Sn.x,Sn.y,Sn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Sn.fromBufferAttribute(this,t),Sn.applyNormalMatrix(e),this.setXYZ(t,Sn.x,Sn.y,Sn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Sn.fromBufferAttribute(this,t),Sn.transformDirection(e),this.setXYZ(t,Sn.x,Sn.y,Sn.z);return this}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Yi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Yi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Yi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Yi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Lt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ss(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class nd extends hn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Vs;const Uo=new D,Gs=new D,Hs=new D,Ws=new fe,Bo=new fe,Y0=new tt,Kl=new D,Vo=new D,$l=new D,Om=new fe,Ch=new fe,km=new fe;class Z0 extends xt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Vs===void 0){Vs=new at;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new qc(t,5);Vs.setIndex([0,1,2,0,2,3]),Vs.setAttribute("position",new ss(n,3,0,!1)),Vs.setAttribute("uv",new ss(n,2,3,!1))}this.geometry=Vs,this.material=e!==void 0?e:new nd,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Gs.setFromMatrixScale(this.matrixWorld),Y0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Hs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Gs.multiplyScalar(-Hs.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;ec(Kl.set(-.5,-.5,0),Hs,a,Gs,i,r),ec(Vo.set(.5,-.5,0),Hs,a,Gs,i,r),ec($l.set(.5,.5,0),Hs,a,Gs,i,r),Om.set(0,0),Ch.set(1,0),km.set(1,1);let c=e.ray.intersectTriangle(Kl,Vo,$l,!1,Uo);if(c===null&&(ec(Vo.set(-.5,.5,0),Hs,a,Gs,i,r),Ch.set(0,1),c=e.ray.intersectTriangle(Kl,$l,Vo,!1,Uo),c===null))return;const u=e.ray.origin.distanceTo(Uo);u<e.near||u>e.far||t.push({distance:u,point:Uo.clone(),uv:ni.getUV(Uo,Kl,Vo,$l,Om,Ch,km,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ec(l,e,t,n,i,r){Ws.subVectors(l,t).addScalar(.5).multiply(n),i!==void 0?(Bo.x=r*Ws.x-i*Ws.y,Bo.y=i*Ws.x+r*Ws.y):Bo.copy(Ws),l.copy(e),l.x+=Bo.x,l.y+=Bo.y,l.applyMatrix4(Y0)}const tc=new D,Um=new D;class J0 extends xt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){tc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(tc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){tc.setFromMatrixPosition(e.matrixWorld),Um.setFromMatrixPosition(this.matrixWorld);const n=tc.distanceTo(Um)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Bm=new D,Vm=new bt,Gm=new bt,Ww=new D,Hm=new tt;class j0 extends un{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new tt,this.bindMatrixInverse=new tt}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new bt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Vm.fromBufferAttribute(i.attributes.skinIndex,e),Gm.fromBufferAttribute(i.attributes.skinWeight,e),Bm.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Gm.getComponent(r);if(a!==0){const c=Vm.getComponent(r);Hm.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Ww.copy(Bm).applyMatrix4(Hm),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class id extends xt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ks extends Bt{constructor(e=null,t=1,n=1,i,r,a,c,u,h=Wt,d=Wt,p,m){super(null,a,c,u,h,d,i,r,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Wm=new tt,Xw=new tt;class Yc{constructor(e=[],t=[]){this.uuid=Bn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new tt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new tt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const c=e[r]?e[r].matrixWorld:Xw;Wm.multiplyMatrices(c,t[r]),Wm.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Yc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=D0(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ks(t,e,e,Rn,qi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new id),this.bones.push(a),this.boneInverses.push(new tt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class no extends Lt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Xm=new tt,qm=new tt,nc=[],qw=new tt,Go=new un;class Q0 extends un{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new no(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,qw)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Go.geometry=this.geometry,Go.material=this.material,Go.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Xm),qm.multiplyMatrices(n,Xm),Go.matrixWorld=qm,Go.raycast(e,nc);for(let a=0,c=nc.length;a<c;a++){const u=nc[a];u.instanceId=r,u.object=this,t.push(u)}nc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new no(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Tn extends hn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Pe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ym=new D,Zm=new D,Jm=new tt,Ph=new ya,ic=new cs;class Mr extends xt{constructor(e=new at,t=new Tn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Ym.fromBufferAttribute(t,i-1),Zm.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ym.distanceTo(Zm);e.setAttribute("lineDistance",new Ie(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ic.copy(n.boundingSphere),ic.applyMatrix4(i),ic.radius+=r,e.ray.intersectsSphere(ic)===!1)return;Jm.copy(i).invert(),Ph.copy(e.ray).applyMatrix4(Jm);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,v=this.isLineSegments?2:1,x=n.index,y=n.attributes.position;if(x!==null){const S=Math.max(0,a.start),b=Math.min(x.count,a.start+a.count);for(let w=S,E=b-1;w<E;w+=v){const C=x.getX(w),L=x.getX(w+1);if(h.fromBufferAttribute(y,C),d.fromBufferAttribute(y,L),Ph.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(m);A<e.near||A>e.far||t.push({distance:A,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const S=Math.max(0,a.start),b=Math.min(y.count,a.start+a.count);for(let w=S,E=b-1;w<E;w+=v){if(h.fromBufferAttribute(y,w),d.fromBufferAttribute(y,w+1),Ph.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(m);L<e.near||L>e.far||t.push({distance:L,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}const jm=new D,Qm=new D;class Ei extends Mr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)jm.fromBufferAttribute(t,i),Qm.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+jm.distanceTo(Qm);e.setAttribute("lineDistance",new Ie(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class K0 extends Mr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class rd extends hn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Km=new tt,Ef=new ya,rc=new cs,sc=new D;class $0 extends xt{constructor(e=new at,t=new rd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),rc.copy(n.boundingSphere),rc.applyMatrix4(i),rc.radius+=r,e.ray.intersectsSphere(rc)===!1)return;Km.copy(i).invert(),Ef.copy(e.ray).applyMatrix4(Km);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),v=Math.min(h.count,a.start+a.count);for(let x=m,_=v;x<_;x++){const y=h.getX(x);sc.fromBufferAttribute(p,y),$m(sc,y,u,i,e,t,this)}}else{const m=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let x=m,_=v;x<_;x++)sc.fromBufferAttribute(p,x),$m(sc,x,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function $m(l,e,t,n,i,r,a){const c=Ef.distanceSqToPoint(l);if(c<t){const u=new D;Ef.closestPointToPoint(l,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:a})}}class Yw extends Bt{constructor(e,t,n,i,r,a,c,u,h){super(e,t,n,i,r,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Xt,this.magFilter=r!==void 0?r:Xt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Zw extends Bt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Wt,this.minFilter=Wt,this.generateMipmaps=!1,this.needsUpdate=!0}}class sd extends Bt{constructor(e,t,n,i,r,a,c,u,h,d,p,m){super(null,a,c,u,h,d,i,r,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Jw extends sd{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=_n}}class jw extends Bt{constructor(e,t,n,i,r,a,c,u,h){super(e,t,n,i,r,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class pi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let c=0,u=r-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(r-1);const d=n[i],m=n[i+1]-d,v=(a-d)/m;return(i+v)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),c=this.getPoint(r),u=t||(a.isVector2?new fe:new D);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],r=[],a=[],c=new D,u=new tt;for(let v=0;v<=e;v++){const x=v/e;i[v]=this.getTangentAt(x,new D)}r[0]=new D,a[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),a[0].crossVectors(i[0],r[0]);for(let v=1;v<=e;v++){if(r[v]=r[v-1].clone(),a[v]=a[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(qt(i[v-1].dot(i[v]),-1,1));r[v].applyMatrix4(u.makeRotationAxis(c,x))}a[v].crossVectors(i[v],r[v])}if(t===!0){let v=Math.acos(qt(r[0].dot(r[e]),-1,1));v/=e,i[0].dot(c.crossVectors(r[0],r[e]))>0&&(v=-v);for(let x=1;x<=e;x++)r[x].applyMatrix4(u.makeRotationAxis(i[x],v*x)),a[x].crossVectors(i[x],r[x])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Zc extends pi{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*d-v*p+this.aX,h=m*p+v*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ev extends Zc{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function od(){let l=0,e=0,t=0,n=0;function i(r,a,c,u){l=r,e=c,t=-3*r+3*a-2*c-u,n=2*r-2*a+c+u}return{initCatmullRom:function(r,a,c,u,h){i(a,c,h*(c-r),h*(u-a))},initNonuniformCatmullRom:function(r,a,c,u,h,d,p){let m=(a-r)/h-(c-r)/(h+d)+(c-a)/d,v=(c-a)/d-(u-a)/(d+p)+(u-c)/p;m*=d,v*=d,i(a,c,m,v)},calc:function(r){const a=r*r,c=a*r;return l+e*r+t*a+n*c}}}const oc=new D,Lh=new od,Rh=new od,Ih=new od;class tv extends pi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:u===0&&c===r-1&&(c=r-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%r]:(oc.subVectors(i[0],i[1]).add(i[0]),h=oc);const p=i[c%r],m=i[(c+1)%r];if(this.closed||c+2<r?d=i[(c+2)%r]:(oc.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=oc),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(h.distanceToSquared(p),v),_=Math.pow(p.distanceToSquared(m),v),y=Math.pow(m.distanceToSquared(d),v);_<1e-4&&(_=1),x<1e-4&&(x=_),y<1e-4&&(y=_),Lh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,x,_,y),Rh.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,x,_,y),Ih.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,x,_,y)}else this.curveType==="catmullrom"&&(Lh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),Rh.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),Ih.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(Lh.calc(u),Rh.calc(u),Ih.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function eg(l,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,c=l*l,u=l*c;return(2*t-2*n+r+a)*u+(-3*t+3*n-2*r-a)*c+r*l+t}function Qw(l,e){const t=1-l;return t*t*e}function Kw(l,e){return 2*(1-l)*l*e}function $w(l,e){return l*l*e}function Qo(l,e,t,n){return Qw(l,e)+Kw(l,t)+$w(l,n)}function eb(l,e){const t=1-l;return t*t*t*e}function tb(l,e){const t=1-l;return 3*t*t*l*e}function nb(l,e){return 3*(1-l)*l*l*e}function ib(l,e){return l*l*l*e}function Ko(l,e,t,n,i){return eb(l,e)+tb(l,t)+nb(l,n)+ib(l,i)}class ad extends pi{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(Ko(e,i.x,r.x,a.x,c.x),Ko(e,i.y,r.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class nv extends pi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(Ko(e,i.x,r.x,a.x,c.x),Ko(e,i.y,r.y,a.y,c.y),Ko(e,i.z,r.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Jc extends pi{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new fe;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iv extends pi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ld extends pi{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Qo(e,i.x,r.x,a.x),Qo(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cd extends pi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Qo(e,i.x,r.x,a.x),Qo(e,i.y,r.y,a.y),Qo(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ud extends pi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),c=r-a,u=i[a===0?a:a-1],h=i[a],d=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(eg(c,u.x,h.x,d.x,p.x),eg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var hd=Object.freeze({__proto__:null,ArcCurve:ev,CatmullRomCurve3:tv,CubicBezierCurve:ad,CubicBezierCurve3:nv,EllipseCurve:Zc,LineCurve:Jc,LineCurve3:iv,QuadraticBezierCurve:ld,QuadraticBezierCurve3:cd,SplineCurve:ud});class rv extends pi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Jc(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,c=this.curves[r],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new hd[i.type]().fromJSON(i))}return this}}class ca extends rv{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Jc(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new ld(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const c=new ad(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(r,a));return this.curves.push(c),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ud(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,r,a,c,u),this}absellipse(e,t,n,i,r,a,c,u){const h=new Zc(e,t,n,i,r,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ao extends at{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=qt(i,0,Math.PI*2);const r=[],a=[],c=[],u=[],h=[],d=1/t,p=new D,m=new fe,v=new D,x=new D,_=new D;let y=0,S=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:y=e[b+1].x-e[b].x,S=e[b+1].y-e[b].y,v.x=S*1,v.y=-y,v.z=S*0,_.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(_.x,_.y,_.z);break;default:y=e[b+1].x-e[b].x,S=e[b+1].y-e[b].y,v.x=S*1,v.y=-y,v.z=S*0,x.copy(v),v.x+=_.x,v.y+=_.y,v.z+=_.z,v.normalize(),u.push(v.x,v.y,v.z),_.copy(x)}for(let b=0;b<=t;b++){const w=n+b*d*i,E=Math.sin(w),C=Math.cos(w);for(let L=0;L<=e.length-1;L++){p.x=e[L].x*E,p.y=e[L].y,p.z=e[L].x*C,a.push(p.x,p.y,p.z),m.x=b/t,m.y=L/(e.length-1),c.push(m.x,m.y);const N=u[3*L+0]*E,A=u[3*L+1],P=u[3*L+0]*C;h.push(N,A,P)}}for(let b=0;b<t;b++)for(let w=0;w<e.length-1;w++){const E=w+b*e.length,C=E,L=E+e.length,N=E+e.length+1,A=E+1;r.push(C,L,A),r.push(N,A,L)}this.setIndex(r),this.setAttribute("position",new Ie(a,3)),this.setAttribute("uv",new Ie(c,2)),this.setAttribute("normal",new Ie(h,3))}static fromJSON(e){return new ao(e.points,e.segments,e.phiStart,e.phiLength)}}class ba extends ao{constructor(e=1,t=1,n=4,i=8){const r=new ca;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ba(e.radius,e.length,e.capSegments,e.radialSegments)}}class Ta extends at{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],c=[],u=[],h=new D,d=new fe;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),a.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(a[m]/e+1)/2,d.y=(a[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Ie(a,3)),this.setAttribute("normal",new Ie(c,3)),this.setAttribute("uv",new Ie(u,2))}static fromJSON(e){return new Ta(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class us extends at{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),r=Math.floor(r);const d=[],p=[],m=[],v=[];let x=0;const _=[],y=n/2;let S=0;b(),a===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(d),this.setAttribute("position",new Ie(p,3)),this.setAttribute("normal",new Ie(m,3)),this.setAttribute("uv",new Ie(v,2));function b(){const E=new D,C=new D;let L=0;const N=(t-e)/n;for(let A=0;A<=r;A++){const P=[],O=A/r,H=O*(t-e)+e;for(let K=0;K<=i;K++){const X=K/i,V=X*u+c,ee=Math.sin(V),oe=Math.cos(V);C.x=H*ee,C.y=-O*n+y,C.z=H*oe,p.push(C.x,C.y,C.z),E.set(ee,N,oe).normalize(),m.push(E.x,E.y,E.z),v.push(X,1-O),P.push(x++)}_.push(P)}for(let A=0;A<i;A++)for(let P=0;P<r;P++){const O=_[P][A],H=_[P+1][A],K=_[P+1][A+1],X=_[P][A+1];d.push(O,H,X),d.push(H,K,X),L+=6}h.addGroup(S,L,0),S+=L}function w(E){const C=x,L=new fe,N=new D;let A=0;const P=E===!0?e:t,O=E===!0?1:-1;for(let K=1;K<=i;K++)p.push(0,y*O,0),m.push(0,O,0),v.push(.5,.5),x++;const H=x;for(let K=0;K<=i;K++){const V=K/i*u+c,ee=Math.cos(V),oe=Math.sin(V);N.x=P*oe,N.y=y*O,N.z=P*ee,p.push(N.x,N.y,N.z),m.push(0,O,0),L.x=ee*.5+.5,L.y=oe*.5*O+.5,v.push(L.x,L.y),x++}for(let K=0;K<i;K++){const X=C+K,V=H+K;E===!0?d.push(V,V+1,X):d.push(V+1,V,X),A+=3}h.addGroup(S,A,E===!0?1:2),S+=A}}static fromJSON(e){return new us(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ea extends us{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,r,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Ea(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class er extends at{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];c(i),h(n),d(),this.setAttribute("position",new Ie(r,3)),this.setAttribute("normal",new Ie(r.slice(),3)),this.setAttribute("uv",new Ie(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const w=new D,E=new D,C=new D;for(let L=0;L<t.length;L+=3)v(t[L+0],w),v(t[L+1],E),v(t[L+2],C),u(w,E,C,b)}function u(b,w,E,C){const L=C+1,N=[];for(let A=0;A<=L;A++){N[A]=[];const P=b.clone().lerp(E,A/L),O=w.clone().lerp(E,A/L),H=L-A;for(let K=0;K<=H;K++)K===0&&A===L?N[A][K]=P:N[A][K]=P.clone().lerp(O,K/H)}for(let A=0;A<L;A++)for(let P=0;P<2*(L-A)-1;P++){const O=Math.floor(P/2);P%2===0?(m(N[A][O+1]),m(N[A+1][O]),m(N[A][O])):(m(N[A][O+1]),m(N[A+1][O+1]),m(N[A+1][O]))}}function h(b){const w=new D;for(let E=0;E<r.length;E+=3)w.x=r[E+0],w.y=r[E+1],w.z=r[E+2],w.normalize().multiplyScalar(b),r[E+0]=w.x,r[E+1]=w.y,r[E+2]=w.z}function d(){const b=new D;for(let w=0;w<r.length;w+=3){b.x=r[w+0],b.y=r[w+1],b.z=r[w+2];const E=y(b)/2/Math.PI+.5,C=S(b)/Math.PI+.5;a.push(E,1-C)}x(),p()}function p(){for(let b=0;b<a.length;b+=6){const w=a[b+0],E=a[b+2],C=a[b+4],L=Math.max(w,E,C),N=Math.min(w,E,C);L>.9&&N<.1&&(w<.2&&(a[b+0]+=1),E<.2&&(a[b+2]+=1),C<.2&&(a[b+4]+=1))}}function m(b){r.push(b.x,b.y,b.z)}function v(b,w){const E=b*3;w.x=e[E+0],w.y=e[E+1],w.z=e[E+2]}function x(){const b=new D,w=new D,E=new D,C=new D,L=new fe,N=new fe,A=new fe;for(let P=0,O=0;P<r.length;P+=9,O+=6){b.set(r[P+0],r[P+1],r[P+2]),w.set(r[P+3],r[P+4],r[P+5]),E.set(r[P+6],r[P+7],r[P+8]),L.set(a[O+0],a[O+1]),N.set(a[O+2],a[O+3]),A.set(a[O+4],a[O+5]),C.copy(b).add(w).add(E).divideScalar(3);const H=y(C);_(L,O+0,b,H),_(N,O+2,w,H),_(A,O+4,E,H)}}function _(b,w,E,C){C<0&&b.x===1&&(a[w]=b.x-1),E.x===0&&E.z===0&&(a[w]=C/2/Math.PI+.5)}function y(b){return Math.atan2(b.z,-b.x)}function S(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}static fromJSON(e){return new er(e.vertices,e.indices,e.radius,e.details)}}class Aa extends er{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Aa(e.radius,e.detail)}}const ac=new D,lc=new D,Dh=new D,cc=new ni;class sv extends at{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(es*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},v=[];for(let x=0;x<u;x+=3){a?(h[0]=a.getX(x),h[1]=a.getX(x+1),h[2]=a.getX(x+2)):(h[0]=x,h[1]=x+1,h[2]=x+2);const{a:_,b:y,c:S}=cc;if(_.fromBufferAttribute(c,h[0]),y.fromBufferAttribute(c,h[1]),S.fromBufferAttribute(c,h[2]),cc.getNormal(Dh),p[0]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,p[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,p[2]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let b=0;b<3;b++){const w=(b+1)%3,E=p[b],C=p[w],L=cc[d[b]],N=cc[d[w]],A=`${E}_${C}`,P=`${C}_${E}`;P in m&&m[P]?(Dh.dot(m[P].normal)<=r&&(v.push(L.x,L.y,L.z),v.push(N.x,N.y,N.z)),m[P]=null):A in m||(m[A]={index0:h[b],index1:h[w],normal:Dh.clone()})}}for(const x in m)if(m[x]){const{index0:_,index1:y}=m[x];ac.fromBufferAttribute(c,_),lc.fromBufferAttribute(c,y),v.push(ac.x,ac.y,ac.z),v.push(lc.x,lc.y,lc.z)}this.setAttribute("position",new Ie(v,3))}}}class is extends ca{constructor(e){super(e),this.uuid=Bn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ca().fromJSON(i))}return this}}const rb={triangulate:function(l,e,t=2){const n=e&&e.length,i=n?e[0]*t:l.length;let r=ov(l,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let c,u,h,d,p,m,v;if(n&&(r=cb(l,e,r,t)),l.length>80*t){c=h=l[0],u=d=l[1];for(let x=t;x<i;x+=t)p=l[x],m=l[x+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);v=Math.max(h-c,d-u),v=v!==0?32767/v:0}return ua(r,a,t,c,u,v,0),a}};function ov(l,e,t,n,i){let r,a;if(i===xb(l,e,t,n)>0)for(r=e;r<t;r+=n)a=tg(r,l[r],l[r+1],a);else for(r=t-n;r>=e;r-=n)a=tg(r,l[r],l[r+1],a);return a&&jc(a,a.next)&&(fa(a),a=a.next),a}function os(l,e){if(!l)return l;e||(e=l);let t=l,n;do if(n=!1,!t.steiner&&(jc(t,t.next)||Nt(t.prev,t,t.next)===0)){if(fa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ua(l,e,t,n,i,r,a){if(!l)return;!a&&r&&pb(l,n,i,r);let c=l,u,h;for(;l.prev!==l.next;){if(u=l.prev,h=l.next,r?ob(l,n,i,r):sb(l)){e.push(u.i/t|0),e.push(l.i/t|0),e.push(h.i/t|0),fa(l),l=h.next,c=h.next;continue}if(l=h,l===c){a?a===1?(l=ab(os(l),e,t),ua(l,e,t,n,i,r,2)):a===2&&lb(l,e,t,n,i,r):ua(os(l),e,t,n,i,r,1);break}}}function sb(l){const e=l.prev,t=l,n=l.next;if(Nt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,c=e.y,u=t.y,h=n.y,d=i<r?i<a?i:a:r<a?r:a,p=c<u?c<h?c:h:u<h?u:h,m=i>r?i>a?i:a:r>a?r:a,v=c>u?c>h?c:h:u>h?u:h;let x=n.next;for(;x!==e;){if(x.x>=d&&x.x<=m&&x.y>=p&&x.y<=v&&Qs(i,c,r,u,a,h,x.x,x.y)&&Nt(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function ob(l,e,t,n){const i=l.prev,r=l,a=l.next;if(Nt(i,r,a)>=0)return!1;const c=i.x,u=r.x,h=a.x,d=i.y,p=r.y,m=a.y,v=c<u?c<h?c:h:u<h?u:h,x=d<p?d<m?d:m:p<m?p:m,_=c>u?c>h?c:h:u>h?u:h,y=d>p?d>m?d:m:p>m?p:m,S=Af(v,x,e,t,n),b=Af(_,y,e,t,n);let w=l.prevZ,E=l.nextZ;for(;w&&w.z>=S&&E&&E.z<=b;){if(w.x>=v&&w.x<=_&&w.y>=x&&w.y<=y&&w!==i&&w!==a&&Qs(c,d,u,p,h,m,w.x,w.y)&&Nt(w.prev,w,w.next)>=0||(w=w.prevZ,E.x>=v&&E.x<=_&&E.y>=x&&E.y<=y&&E!==i&&E!==a&&Qs(c,d,u,p,h,m,E.x,E.y)&&Nt(E.prev,E,E.next)>=0))return!1;E=E.nextZ}for(;w&&w.z>=S;){if(w.x>=v&&w.x<=_&&w.y>=x&&w.y<=y&&w!==i&&w!==a&&Qs(c,d,u,p,h,m,w.x,w.y)&&Nt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;E&&E.z<=b;){if(E.x>=v&&E.x<=_&&E.y>=x&&E.y<=y&&E!==i&&E!==a&&Qs(c,d,u,p,h,m,E.x,E.y)&&Nt(E.prev,E,E.next)>=0)return!1;E=E.nextZ}return!0}function ab(l,e,t){let n=l;do{const i=n.prev,r=n.next.next;!jc(i,r)&&av(i,n,n.next,r)&&ha(i,r)&&ha(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),fa(n),fa(n.next),n=l=r),n=n.next}while(n!==l);return os(n)}function lb(l,e,t,n,i,r){let a=l;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&vb(a,c)){let u=lv(a,c);a=os(a,a.next),u=os(u,u.next),ua(a,e,t,n,i,r,0),ua(u,e,t,n,i,r,0);return}c=c.next}a=a.next}while(a!==l)}function cb(l,e,t,n){const i=[];let r,a,c,u,h;for(r=0,a=e.length;r<a;r++)c=e[r]*n,u=r<a-1?e[r+1]*n:l.length,h=ov(l,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(gb(h));for(i.sort(ub),r=0;r<i.length;r++)t=hb(i[r],t);return t}function ub(l,e){return l.x-e.x}function hb(l,e){const t=fb(l,e);if(!t)return e;const n=lv(t,l);return os(n,n.next),os(t,t.next)}function fb(l,e){let t=e,n=-1/0,i;const r=l.x,a=l.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=r&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===r))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do r>=t.x&&t.x>=u&&r!==t.x&&Qs(a<h?r:n,a,u,h,a<h?n:r,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(r-t.x),ha(t,l)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&db(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function db(l,e){return Nt(l.prev,l,e.prev)<0&&Nt(e.next,l,l.next)<0}function pb(l,e,t,n){let i=l;do i.z===0&&(i.z=Af(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==l);i.prevZ.nextZ=null,i.prevZ=null,mb(i)}function mb(l){let e,t,n,i,r,a,c,u,h=1;do{for(t=l,l=null,r=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:l=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(a>1);return l}function Af(l,e,t,n,i){return l=(l-t)*i|0,e=(e-n)*i|0,l=(l|l<<8)&16711935,l=(l|l<<4)&252645135,l=(l|l<<2)&858993459,l=(l|l<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,l|e<<1}function gb(l){let e=l,t=l;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==l);return t}function Qs(l,e,t,n,i,r,a,c){return(i-a)*(e-c)>=(l-a)*(r-c)&&(l-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(r-c)>=(i-a)*(n-c)}function vb(l,e){return l.next.i!==e.i&&l.prev.i!==e.i&&!_b(l,e)&&(ha(l,e)&&ha(e,l)&&yb(l,e)&&(Nt(l.prev,l,e.prev)||Nt(l,e.prev,e))||jc(l,e)&&Nt(l.prev,l,l.next)>0&&Nt(e.prev,e,e.next)>0)}function Nt(l,e,t){return(e.y-l.y)*(t.x-e.x)-(e.x-l.x)*(t.y-e.y)}function jc(l,e){return l.x===e.x&&l.y===e.y}function av(l,e,t,n){const i=hc(Nt(l,e,t)),r=hc(Nt(l,e,n)),a=hc(Nt(t,n,l)),c=hc(Nt(t,n,e));return!!(i!==r&&a!==c||i===0&&uc(l,t,e)||r===0&&uc(l,n,e)||a===0&&uc(t,l,n)||c===0&&uc(t,e,n))}function uc(l,e,t){return e.x<=Math.max(l.x,t.x)&&e.x>=Math.min(l.x,t.x)&&e.y<=Math.max(l.y,t.y)&&e.y>=Math.min(l.y,t.y)}function hc(l){return l>0?1:l<0?-1:0}function _b(l,e){let t=l;do{if(t.i!==l.i&&t.next.i!==l.i&&t.i!==e.i&&t.next.i!==e.i&&av(t,t.next,l,e))return!0;t=t.next}while(t!==l);return!1}function ha(l,e){return Nt(l.prev,l,l.next)<0?Nt(l,e,l.next)>=0&&Nt(l,l.prev,e)>=0:Nt(l,e,l.prev)<0||Nt(l,l.next,e)<0}function yb(l,e){let t=l,n=!1;const i=(l.x+e.x)/2,r=(l.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==l);return n}function lv(l,e){const t=new Cf(l.i,l.x,l.y),n=new Cf(e.i,e.x,e.y),i=l.next,r=e.prev;return l.next=e,e.prev=l,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function tg(l,e,t,n){const i=new Cf(l,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function fa(l){l.next.prev=l.prev,l.prev.next=l.next,l.prevZ&&(l.prevZ.nextZ=l.nextZ),l.nextZ&&(l.nextZ.prevZ=l.prevZ)}function Cf(l,e,t){this.i=l,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function xb(l,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(l[a]-l[r])*(l[r+1]+l[a+1]),a=r;return i}class bi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return bi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];ng(e),ig(n,e);let a=e.length;t.forEach(ng);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,ig(n,t[u]);const c=rb.triangulate(n,i);for(let u=0;u<c.length;u+=3)r.push(c.slice(u,u+3));return r}}function ng(l){const e=l.length;e>2&&l[e-1].equals(l[0])&&l.pop()}function ig(l,e){for(let t=0;t<e.length;t++)l.push(e[t].x),l.push(e[t].y)}class Ca extends at{constructor(e=new is([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new Ie(i,3)),this.setAttribute("uv",new Ie(r,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:v-.1,_=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const S=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:Mb;let w,E=!1,C,L,N,A;S&&(w=S.getSpacedPoints(d),E=!0,m=!1,C=S.computeFrenetFrames(d,!1),L=new D,N=new D,A=new D),m||(y=0,v=0,x=0,_=0);const P=c.extractPoints(h);let O=P.shape;const H=P.holes;if(!bi.isClockWise(O)){O=O.reverse();for(let le=0,ie=H.length;le<ie;le++){const xe=H[le];bi.isClockWise(xe)&&(H[le]=xe.reverse())}}const X=bi.triangulateShape(O,H),V=O;for(let le=0,ie=H.length;le<ie;le++){const xe=H[le];O=O.concat(xe)}function ee(le,ie,xe){return ie||console.error("THREE.ExtrudeGeometry: vec does not exist"),ie.clone().multiplyScalar(xe).add(le)}const oe=O.length,de=X.length;function k(le,ie,xe){let Fe,we,Qe;const qe=le.x-ie.x,Ve=le.y-ie.y,Mt=xe.x-le.x,St=xe.y-le.y,F=qe*qe+Ve*Ve,R=qe*St-Ve*Mt;if(Math.abs(R)>Number.EPSILON){const te=Math.sqrt(F),me=Math.sqrt(Mt*Mt+St*St),ye=ie.x-Ve/te,Te=ie.y+qe/te,je=xe.x-St/me,Ae=xe.y+Mt/me,ce=((je-ye)*St-(Ae-Te)*Mt)/(qe*St-Ve*Mt);Fe=ye+qe*ce-le.x,we=Te+Ve*ce-le.y;const Ge=Fe*Fe+we*we;if(Ge<=2)return new fe(Fe,we);Qe=Math.sqrt(Ge/2)}else{let te=!1;qe>Number.EPSILON?Mt>Number.EPSILON&&(te=!0):qe<-Number.EPSILON?Mt<-Number.EPSILON&&(te=!0):Math.sign(Ve)===Math.sign(St)&&(te=!0),te?(Fe=-Ve,we=qe,Qe=Math.sqrt(F)):(Fe=qe,we=Ve,Qe=Math.sqrt(F/2))}return new fe(Fe/Qe,we/Qe)}const J=[];for(let le=0,ie=V.length,xe=ie-1,Fe=le+1;le<ie;le++,xe++,Fe++)xe===ie&&(xe=0),Fe===ie&&(Fe=0),J[le]=k(V[le],V[xe],V[Fe]);const j=[];let he,W=J.concat();for(let le=0,ie=H.length;le<ie;le++){const xe=H[le];he=[];for(let Fe=0,we=xe.length,Qe=we-1,qe=Fe+1;Fe<we;Fe++,Qe++,qe++)Qe===we&&(Qe=0),qe===we&&(qe=0),he[Fe]=k(xe[Fe],xe[Qe],xe[qe]);j.push(he),W=W.concat(he)}for(let le=0;le<y;le++){const ie=le/y,xe=v*Math.cos(ie*Math.PI/2),Fe=x*Math.sin(ie*Math.PI/2)+_;for(let we=0,Qe=V.length;we<Qe;we++){const qe=ee(V[we],J[we],Fe);De(qe.x,qe.y,-xe)}for(let we=0,Qe=H.length;we<Qe;we++){const qe=H[we];he=j[we];for(let Ve=0,Mt=qe.length;Ve<Mt;Ve++){const St=ee(qe[Ve],he[Ve],Fe);De(St.x,St.y,-xe)}}}const ue=x+_;for(let le=0;le<oe;le++){const ie=m?ee(O[le],W[le],ue):O[le];E?(N.copy(C.normals[0]).multiplyScalar(ie.x),L.copy(C.binormals[0]).multiplyScalar(ie.y),A.copy(w[0]).add(N).add(L),De(A.x,A.y,A.z)):De(ie.x,ie.y,0)}for(let le=1;le<=d;le++)for(let ie=0;ie<oe;ie++){const xe=m?ee(O[ie],W[ie],ue):O[ie];E?(N.copy(C.normals[le]).multiplyScalar(xe.x),L.copy(C.binormals[le]).multiplyScalar(xe.y),A.copy(w[le]).add(N).add(L),De(A.x,A.y,A.z)):De(xe.x,xe.y,p/d*le)}for(let le=y-1;le>=0;le--){const ie=le/y,xe=v*Math.cos(ie*Math.PI/2),Fe=x*Math.sin(ie*Math.PI/2)+_;for(let we=0,Qe=V.length;we<Qe;we++){const qe=ee(V[we],J[we],Fe);De(qe.x,qe.y,p+xe)}for(let we=0,Qe=H.length;we<Qe;we++){const qe=H[we];he=j[we];for(let Ve=0,Mt=qe.length;Ve<Mt;Ve++){const St=ee(qe[Ve],he[Ve],Fe);E?De(St.x,St.y+w[d-1].y,w[d-1].x+xe):De(St.x,St.y,p+xe)}}}ge(),_e();function ge(){const le=i.length/3;if(m){let ie=0,xe=oe*ie;for(let Fe=0;Fe<de;Fe++){const we=X[Fe];ze(we[2]+xe,we[1]+xe,we[0]+xe)}ie=d+y*2,xe=oe*ie;for(let Fe=0;Fe<de;Fe++){const we=X[Fe];ze(we[0]+xe,we[1]+xe,we[2]+xe)}}else{for(let ie=0;ie<de;ie++){const xe=X[ie];ze(xe[2],xe[1],xe[0])}for(let ie=0;ie<de;ie++){const xe=X[ie];ze(xe[0]+oe*d,xe[1]+oe*d,xe[2]+oe*d)}}n.addGroup(le,i.length/3-le,0)}function _e(){const le=i.length/3;let ie=0;Q(V,ie),ie+=V.length;for(let xe=0,Fe=H.length;xe<Fe;xe++){const we=H[xe];Q(we,ie),ie+=we.length}n.addGroup(le,i.length/3-le,1)}function Q(le,ie){let xe=le.length;for(;--xe>=0;){const Fe=xe;let we=xe-1;we<0&&(we=le.length-1);for(let Qe=0,qe=d+y*2;Qe<qe;Qe++){const Ve=oe*Qe,Mt=oe*(Qe+1),St=ie+Fe+Ve,F=ie+we+Ve,R=ie+we+Mt,te=ie+Fe+Mt;Ne(St,F,R,te)}}}function De(le,ie,xe){u.push(le),u.push(ie),u.push(xe)}function ze(le,ie,xe){Me(le),Me(ie),Me(xe);const Fe=i.length/3,we=b.generateTopUV(n,i,Fe-3,Fe-2,Fe-1);Je(we[0]),Je(we[1]),Je(we[2])}function Ne(le,ie,xe,Fe){Me(le),Me(ie),Me(Fe),Me(ie),Me(xe),Me(Fe);const we=i.length/3,Qe=b.generateSideWallUV(n,i,we-6,we-3,we-2,we-1);Je(Qe[0]),Je(Qe[1]),Je(Qe[3]),Je(Qe[1]),Je(Qe[2]),Je(Qe[3])}function Me(le){i.push(u[le*3+0]),i.push(u[le*3+1]),i.push(u[le*3+2])}function Je(le){r.push(le.x),r.push(le.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Sb(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const c=t[e.shapes[r]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new hd[i.type]().fromJSON(i)),new Ca(n,e.options)}}const Mb={generateTopUV:function(l,e,t,n,i){const r=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new fe(r,a),new fe(c,u),new fe(h,d)]},generateSideWallUV:function(l,e,t,n,i,r){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],x=e[i*3+2],_=e[r*3],y=e[r*3+1],S=e[r*3+2];return Math.abs(c-d)<Math.abs(a-h)?[new fe(a,1-u),new fe(h,1-p),new fe(m,1-x),new fe(_,1-S)]:[new fe(c,1-u),new fe(d,1-p),new fe(v,1-x),new fe(y,1-S)]}};function Sb(l,e,t){if(t.shapes=[],Array.isArray(l))for(let n=0,i=l.length;n<i;n++){const r=l[n];t.shapes.push(r.uuid)}else t.shapes.push(l.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Pa extends er{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Pa(e.radius,e.detail)}}class lo extends er{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lo(e.radius,e.detail)}}class La extends at{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,v=new D,x=new fe;for(let _=0;_<=i;_++){for(let y=0;y<=n;y++){const S=r+y/n*a;v.x=p*Math.cos(S),v.y=p*Math.sin(S),u.push(v.x,v.y,v.z),h.push(0,0,1),x.x=(v.x/t+1)/2,x.y=(v.y/t+1)/2,d.push(x.x,x.y)}p+=m}for(let _=0;_<i;_++){const y=_*(n+1);for(let S=0;S<n;S++){const b=S+y,w=b,E=b+n+1,C=b+n+2,L=b+1;c.push(w,E,L),c.push(E,C,L)}}this.setIndex(c),this.setAttribute("position",new Ie(u,3)),this.setAttribute("normal",new Ie(h,3)),this.setAttribute("uv",new Ie(d,2))}static fromJSON(e){return new La(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ra extends at{constructor(e=new is([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ie(i,3)),this.setAttribute("normal",new Ie(r,3)),this.setAttribute("uv",new Ie(a,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let v=m.shape;const x=m.holes;bi.isClockWise(v)===!1&&(v=v.reverse());for(let y=0,S=x.length;y<S;y++){const b=x[y];bi.isClockWise(b)===!0&&(x[y]=b.reverse())}const _=bi.triangulateShape(v,x);for(let y=0,S=x.length;y<S;y++){const b=x[y];v=v.concat(b)}for(let y=0,S=v.length;y<S;y++){const b=v[y];i.push(b.x,b.y,0),r.push(0,0,1),a.push(b.x,b.y)}for(let y=0,S=_.length;y<S;y++){const b=_[y],w=b[0]+p,E=b[1]+p,C=b[2]+p;n.push(w,E,C),u+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return wb(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new Ra(n,e.curveSegments)}}function wb(l,e){if(e.shapes=[],Array.isArray(l))for(let t=0,n=l.length;t<n;t++){const i=l[t];e.shapes.push(i.uuid)}else e.shapes.push(l.uuid);return e}class co extends at{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const d=[],p=new D,m=new D,v=[],x=[],_=[],y=[];for(let S=0;S<=n;S++){const b=[],w=S/n;let E=0;S==0&&a==0?E=.5/t:S==n&&u==Math.PI&&(E=-.5/t);for(let C=0;C<=t;C++){const L=C/t;p.x=-e*Math.cos(i+L*r)*Math.sin(a+w*c),p.y=e*Math.cos(a+w*c),p.z=e*Math.sin(i+L*r)*Math.sin(a+w*c),x.push(p.x,p.y,p.z),m.copy(p).normalize(),_.push(m.x,m.y,m.z),y.push(L+E,1-w),b.push(h++)}d.push(b)}for(let S=0;S<n;S++)for(let b=0;b<t;b++){const w=d[S][b+1],E=d[S][b],C=d[S+1][b],L=d[S+1][b+1];(S!==0||a>0)&&v.push(w,E,L),(S!==n-1||u<Math.PI)&&v.push(E,C,L)}this.setIndex(v),this.setAttribute("position",new Ie(x,3)),this.setAttribute("normal",new Ie(_,3)),this.setAttribute("uv",new Ie(y,2))}static fromJSON(e){return new co(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ia extends er{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ia(e.radius,e.detail)}}class Da extends at{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const _=x/i*r,y=v/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(_),p.y=(e+t*Math.cos(y))*Math.sin(_),p.z=t*Math.sin(y),c.push(p.x,p.y,p.z),d.x=e*Math.cos(_),d.y=e*Math.sin(_),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(x/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const _=(i+1)*v+x-1,y=(i+1)*(v-1)+x-1,S=(i+1)*(v-1)+x,b=(i+1)*v+x;a.push(_,y,b),a.push(y,S,b)}this.setIndex(a),this.setAttribute("position",new Ie(c,3)),this.setAttribute("normal",new Ie(u,3)),this.setAttribute("uv",new Ie(h,2))}static fromJSON(e){return new Da(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class za extends at{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,v=new D,x=new D,_=new D,y=new D,S=new D;for(let w=0;w<=n;++w){const E=w/n*r*Math.PI*2;b(E,r,a,e,v),b(E+.01,r,a,e,x),y.subVectors(x,v),S.addVectors(x,v),_.crossVectors(y,S),S.crossVectors(_,y),_.normalize(),S.normalize();for(let C=0;C<=i;++C){const L=C/i*Math.PI*2,N=-t*Math.cos(L),A=t*Math.sin(L);p.x=v.x+(N*S.x+A*_.x),p.y=v.y+(N*S.y+A*_.y),p.z=v.z+(N*S.z+A*_.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),d.push(w/n),d.push(C/i)}}for(let w=1;w<=n;w++)for(let E=1;E<=i;E++){const C=(i+1)*(w-1)+(E-1),L=(i+1)*w+(E-1),N=(i+1)*w+E,A=(i+1)*(w-1)+E;c.push(C,L,A),c.push(L,N,A)}this.setIndex(c),this.setAttribute("position",new Ie(u,3)),this.setAttribute("normal",new Ie(h,3)),this.setAttribute("uv",new Ie(d,2));function b(w,E,C,L,N){const A=Math.cos(w),P=Math.sin(w),O=C/E*w,H=Math.cos(O);N.x=L*(2+H)*.5*A,N.y=L*(2+H)*P*.5,N.z=L*Math.sin(O)*.5}}static fromJSON(e){return new za(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Na extends at{constructor(e=new cd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new D,u=new D,h=new fe;let d=new D;const p=[],m=[],v=[],x=[];_(),this.setIndex(x),this.setAttribute("position",new Ie(p,3)),this.setAttribute("normal",new Ie(m,3)),this.setAttribute("uv",new Ie(v,2));function _(){for(let w=0;w<t;w++)y(w);y(r===!1?t:0),b(),S()}function y(w){d=e.getPointAt(w/t,d);const E=a.normals[w],C=a.binormals[w];for(let L=0;L<=i;L++){const N=L/i*Math.PI*2,A=Math.sin(N),P=-Math.cos(N);u.x=P*E.x+A*C.x,u.y=P*E.y+A*C.y,u.z=P*E.z+A*C.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function S(){for(let w=1;w<=t;w++)for(let E=1;E<=i;E++){const C=(i+1)*(w-1)+(E-1),L=(i+1)*w+(E-1),N=(i+1)*w+E,A=(i+1)*(w-1)+E;x.push(C,L,A),x.push(L,N,A)}}function b(){for(let w=0;w<=t;w++)for(let E=0;E<=i;E++)h.x=w/t,h.y=E/i,v.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Na(new hd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class cv extends at{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,r=new D;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,v=p.count;for(let x=m,_=m+v;x<_;x+=3)for(let y=0;y<3;y++){const S=c.getX(x+y),b=c.getX(x+(y+1)%3);i.fromBufferAttribute(a,S),r.fromBufferAttribute(a,b),rg(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,d),r.fromBufferAttribute(a,p),rg(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ie(t,3))}}}function rg(l,e,t){const n=`${l.x},${l.y},${l.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${l.x},${l.y},${l.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var sg=Object.freeze({__proto__:null,BoxGeometry:br,CapsuleGeometry:ba,CircleGeometry:Ta,ConeGeometry:Ea,CylinderGeometry:us,DodecahedronGeometry:Aa,EdgesGeometry:sv,ExtrudeGeometry:Ca,IcosahedronGeometry:Pa,LatheGeometry:ao,OctahedronGeometry:lo,PlaneGeometry:so,PolyhedronGeometry:er,RingGeometry:La,ShapeGeometry:Ra,SphereGeometry:co,TetrahedronGeometry:Ia,TorusGeometry:Da,TorusKnotGeometry:za,TubeGeometry:Na,WireframeGeometry:cv});class uv extends hn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Pe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class hv extends Ti{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class fd extends hn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Pe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class fv extends fd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Pe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Pe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Pe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class dv extends hn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Pe(16777215),this.specular=new Pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_a,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class pv extends hn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Pe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class mv extends hn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class gv extends hn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_a,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vv extends hn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Pe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _v extends Tn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ti(l,e,t){return dd(l)?new l.constructor(l.subarray(e,t!==void 0?t:l.length)):l.slice(e,t)}function Qr(l,e,t){return!l||!t&&l.constructor===e?l:typeof e.BYTES_PER_ELEMENT=="number"?new e(l):Array.prototype.slice.call(l)}function dd(l){return ArrayBuffer.isView(l)&&!(l instanceof DataView)}function yv(l){function e(i,r){return l[i]-l[r]}const t=l.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Pf(l,e,t){const n=l.length,i=new l.constructor(n);for(let r=0,a=0;a!==n;++r){const c=t[r]*e;for(let u=0;u!==e;++u)i[a++]=l[c+u]}return i}function pd(l,e,t,n){let i=1,r=l[0];for(;r!==void 0&&r[n]===void 0;)r=l[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=l[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=l[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=l[i++];while(r!==void 0)}function bb(l,e,t,n,i=30){const r=l.clone();r.name=e;const a=[];for(let u=0;u<r.tracks.length;++u){const h=r.tracks[u],d=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const x=h.times[v]*i;if(!(x<t||x>=n)){p.push(h.times[v]);for(let _=0;_<d;++_)m.push(h.values[v*d+_])}}p.length!==0&&(h.times=Qr(p,h.times.constructor),h.values=Qr(m,h.values.constructor),a.push(h))}r.tracks=a;let c=1/0;for(let u=0;u<r.tracks.length;++u)c>r.tracks[u].times[0]&&(c=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*c);return r.resetDuration(),r}function Tb(l,e=0,t=l,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=l.tracks.find(function(S){return S.name===c.name&&S.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const x=c.times.length-1;let _;if(r<=c.times[0]){const S=d,b=p-d;_=ti(c.values,S,b)}else if(r>=c.times[x]){const S=x*p+d,b=S+p-d;_=ti(c.values,S,b)}else{const S=c.createInterpolant(),b=d,w=p-d;S.evaluate(r),_=ti(S.resultBuffer,b,w)}u==="quaternion"&&new Dn().fromArray(_).normalize().conjugate().toArray(_);const y=h.times.length;for(let S=0;S<y;++S){const b=S*v+m;if(u==="quaternion")Dn.multiplyQuaternionsFlat(h.values,b,_,0,h.values,b);else{const w=v-m*2;for(let E=0;E<w;++E)h.values[b+E]-=_[E]}}}return l.blendMode=Hf,l}var Eb=Object.freeze({__proto__:null,arraySlice:ti,convertArray:Qr,flattenJSON:pd,getKeyframeOrder:yv,isTypedArray:dd,makeClipAdditive:Tb,sortedArray:Pf,subclip:bb});class Fa{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const c=t[1];e<c&&(n=2,r=c);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class xv extends Fa{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Zr,endingEnd:Zr}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,c=i[r],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case Jr:r=e,c=2*t-n;break;case sa:r=i.length-2,c=t+i[r]-i[r+1];break;default:r=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Jr:a=e,u=2*n-t;break;case sa:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=r*d,this._offsetNext=a*d}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,x=(n-t)/(i-t),_=x*x,y=_*x,S=-m*y+2*m*_-m*x,b=(1+m)*y+(-1.5-2*m)*_+(-.5+m)*x+1,w=(-1-v)*y+(1.5+v)*_+.5*x,E=v*y-v*_;for(let C=0;C!==c;++C)r[C]=S*a[d+C]+b*a[h+C]+w*a[u+C]+E*a[p+C];return r}}class md extends Fa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)r[m]=a[h+m]*p+a[u+m]*d;return r}}class Mv extends Fa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class mi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Qr(t,this.TimeBufferType),this.values=Qr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Qr(e.times,Array),values:Qr(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Mv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new md(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new xv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ia:t=this.InterpolantFactoryMethodDiscrete;break;case ra:t=this.InterpolantFactoryMethodLinear;break;case Ac:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ia;case this.InterpolantFactoryMethodLinear:return ra;case this.InterpolantFactoryMethodSmooth:return Ac}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const c=this.getValueSize();this.times=ti(n,r,a),this.values=ti(this.values,r*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==r;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&dd(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=ti(this.times),t=ti(this.values),n=this.getValueSize(),i=this.getInterpolation()===Ac,r=e.length-1;let a=1;for(let c=1;c<r;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let x=0;x!==n;++x){const _=t[p+x];if(_!==t[m+x]||_!==t[v+x]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++a}}if(r>0){e[a]=e[r];for(let c=r*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=ti(e,0,a),this.values=ti(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=ti(this.times,0),t=ti(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}mi.prototype.TimeBufferType=Float32Array;mi.prototype.ValueBufferType=Float32Array;mi.prototype.DefaultInterpolation=ra;class hs extends mi{}hs.prototype.ValueTypeName="bool";hs.prototype.ValueBufferType=Array;hs.prototype.DefaultInterpolation=ia;hs.prototype.InterpolantFactoryMethodLinear=void 0;hs.prototype.InterpolantFactoryMethodSmooth=void 0;class gd extends mi{}gd.prototype.ValueTypeName="color";class da extends mi{}da.prototype.ValueTypeName="number";class Sv extends Fa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Dn.slerpFlat(r,0,a,h-c,a,h,u);return r}}class uo extends mi{InterpolantFactoryMethodLinear(e){return new Sv(this.times,this.values,this.getValueSize(),e)}}uo.prototype.ValueTypeName="quaternion";uo.prototype.DefaultInterpolation=ra;uo.prototype.InterpolantFactoryMethodSmooth=void 0;class fs extends mi{}fs.prototype.ValueTypeName="string";fs.prototype.ValueBufferType=Array;fs.prototype.DefaultInterpolation=ia;fs.prototype.InterpolantFactoryMethodLinear=void 0;fs.prototype.InterpolantFactoryMethodSmooth=void 0;class pa extends mi{}pa.prototype.ValueTypeName="vector";class ma{constructor(e,t=-1,n,i=Bc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Bn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(Cb(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(mi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let c=0;c<r;c++){let u=[],h=[];u.push((c+r-1)%r,c,(c+1)%r),h.push(0,1,0);const d=yv(u);u=Pf(u,1,d),h=Pf(h,1,d),!i&&u[0]===0&&(u.push(r),h.push(h[0])),a.push(new da(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(r);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,x,_){if(v.length!==0){const y=[],S=[];pd(v,y,S,x),y.length!==0&&_.push(new p(m,y,S))}},i=[],r=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let x;for(x=0;x<m.length;x++)if(m[x].morphTargets)for(let _=0;_<m[x].morphTargets.length;_++)v[m[x].morphTargets[_]]=-1;for(const _ in v){const y=[],S=[];for(let b=0;b!==m[x].morphTargets.length;++b){const w=m[x];y.push(w.time),S.push(w.morphTarget===_?1:0)}i.push(new da(".morphTargetInfluence["+_+"]",y,S))}u=v.length*a}else{const v=".bones["+t[p].name+"]";n(pa,v+".position",m,"pos",i),n(uo,v+".quaternion",m,"rot",i),n(pa,v+".scale",m,"scl",i)}}return i.length===0?null:new this(r,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ab(l){switch(l.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return da;case"vector":case"vector2":case"vector3":case"vector4":return pa;case"color":return gd;case"quaternion":return uo;case"bool":case"boolean":return hs;case"string":return fs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+l)}function Cb(l){if(l.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Ab(l.type);if(l.times===void 0){const t=[],n=[];pd(l.keys,t,n,"value"),l.times=t,l.values=n}return e.parse!==void 0?e.parse(l):new e(l.name,l.times,l.values,l.interpolation)}const as={enabled:!1,files:{},add:function(l,e){this.enabled!==!1&&(this.files[l]=e)},get:function(l){if(this.enabled!==!1)return this.files[l]},remove:function(l){delete this.files[l]},clear:function(){this.files={}}};class vd{constructor(e,t,n){const i=this;let r=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,r===!1&&i.onStart!==void 0&&i.onStart(d,a,c),r=!0},this.itemEnd=function(d){a++,i.onProgress!==void 0&&i.onProgress(d,a,c),a===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],x=h[p+1];if(v.global&&(v.lastIndex=0),v.test(d))return x}return null}}}const wv=new vd;class Vn{constructor(e){this.manager=e!==void 0?e:wv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Gi={};class Pb extends Error{constructor(e,t){super(e),this.response=t}}class Ki extends Vn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=as.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Gi[e]!==void 0){Gi[e].push({onLoad:t,onProgress:n,onError:i});return}Gi[e]=[],Gi[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Gi[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,x=v!==0;let _=0;const y=new ReadableStream({start(S){b();function b(){p.read().then(({done:w,value:E})=>{if(w)S.close();else{_+=E.byteLength;const C=new ProgressEvent("progress",{lengthComputable:x,loaded:_,total:v});for(let L=0,N=d.length;L<N;L++){const A=d[L];A.onProgress&&A.onProgress(C)}S.enqueue(E),b()}})}}});return new Response(y)}else throw new Pb(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(x=>v.decode(x))}}}).then(h=>{as.add(e,h);const d=Gi[e];delete Gi[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const d=Gi[e];if(d===void 0)throw this.manager.itemError(e),h;delete Gi[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Lb extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ki(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ma.parse(e[n]);t.push(i)}return t}}class Rb extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],c=new sd,u=new Ki(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const v=r.parse(m,!0);a[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=Xt),c.image=a,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=r.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let x=0;x<v;x++){a[x]={mipmaps:[]};for(let _=0;_<m.mipmapCount;_++)a[x].mipmaps.push(m.mipmaps[x*m.mipmapCount+_]),a[x].format=m.format,a[x].width=m.width,a[x].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Xt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class ga extends Vn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=as.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c=la("img");function u(){d(),as.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(p){d(),i&&i(p),r.manager.itemError(e),r.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),r.manager.itemStart(e),c.src=e,c}}class Ib extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=new Sa,a=new ga(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(d){r.images[h]=d,c++,c===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return r}}class Db extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ks,c=new Ki(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(e,function(u){const h=r.parse(u);h&&(h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:_n,a.wrapT=h.wrapT!==void 0?h.wrapT:_n,a.magFilter=h.magFilter!==void 0?h.magFilter:Xt,a.minFilter=h.minFilter!==void 0?h.minFilter:Xt,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(a.encoding=h.encoding),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=xr),h.mipmapCount===1&&(a.minFilter=Xt),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h))},n,i),a}}class zb extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=new Bt,a=new ga(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){r.image=c,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Tr extends xt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Pe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class bv extends Tr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(xt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Pe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const zh=new tt,og=new D,ag=new D;class _d{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Gc,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;og.setFromMatrixPosition(e.matrixWorld),t.position.copy(og),ag.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ag),t.updateMatrixWorld(),zh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(zh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Nb extends _d{constructor(){super(new ln(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=aa*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Tv extends Tr{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(xt.DEFAULT_UP),this.updateMatrix(),this.target=new xt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new Nb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const lg=new tt,Ho=new D,Nh=new D;class Fb extends _d{constructor(){super(new ln(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new bt(2,1,1,1),new bt(0,1,1,1),new bt(3,1,1,1),new bt(1,1,1,1),new bt(3,0,1,1),new bt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ho.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ho),Nh.copy(n.position),Nh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Nh),n.updateMatrixWorld(),i.makeTranslation(-Ho.x,-Ho.y,-Ho.z),lg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lg)}}class Ev extends Tr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Fb}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ob extends _d{constructor(){super(new wa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Av extends Tr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(xt.DEFAULT_UP),this.updateMatrix(),this.target=new xt,this.shadow=new Ob}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Cv extends Tr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Pv extends Tr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Lv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class Qc extends Tr{constructor(e=new Lv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Kc extends Vn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Ki(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=Kc.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Pe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Pe().setHex(a.value);break;case"v2":i.uniforms[r].value=new fe().fromArray(a.value);break;case"v3":i.uniforms[r].value=new D().fromArray(a.value);break;case"v4":i.uniforms[r].value=new bt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new bn().fromArray(a.value);break;case"m4":i.uniforms[r].value=new tt().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new fe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:uv,SpriteMaterial:nd,RawShaderMaterial:hv,ShaderMaterial:Ti,PointsMaterial:rd,MeshPhysicalMaterial:fv,MeshStandardMaterial:fd,MeshPhongMaterial:dv,MeshToonMaterial:pv,MeshNormalMaterial:mv,MeshLambertMaterial:gv,MeshDepthMaterial:Kf,MeshDistanceMaterial:$f,MeshBasicMaterial:wr,MeshMatcapMaterial:vv,LineDashedMaterial:_v,LineBasicMaterial:Tn,Material:hn};return new t[e]}}class Lf{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Rv extends at{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Iv extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ki(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,x){if(t[x]!==void 0)return t[x];const y=v.interleavedBuffers[x],S=r(v,y.buffer),b=Zs(y.type,S),w=new qc(b,y.stride);return w.uuid=y.uuid,t[x]=w,w}function r(v,x){if(n[x]!==void 0)return n[x];const y=v.arrayBuffers[x],S=new Uint32Array(y).buffer;return n[x]=S,S}const a=e.isInstancedBufferGeometry?new Rv:new at,c=e.data.index;if(c!==void 0){const v=Zs(c.type,c.array);a.setIndex(new Lt(v,1))}const u=e.data.attributes;for(const v in u){const x=u[v];let _;if(x.isInterleavedBufferAttribute){const y=i(e.data,x.data);_=new ss(y,x.itemSize,x.offset,x.normalized)}else{const y=Zs(x.type,x.array),S=x.isInstancedBufferAttribute?no:Lt;_=new S(y,x.itemSize,x.normalized)}x.name!==void 0&&(_.name=x.name),x.usage!==void 0&&_.setUsage(x.usage),x.updateRange!==void 0&&(_.updateRange.offset=x.updateRange.offset,_.updateRange.count=x.updateRange.count),a.setAttribute(v,_)}const h=e.data.morphAttributes;if(h)for(const v in h){const x=h[v],_=[];for(let y=0,S=x.length;y<S;y++){const b=x[y];let w;if(b.isInterleavedBufferAttribute){const E=i(e.data,b.data);w=new ss(E,b.itemSize,b.offset,b.normalized)}else{const E=Zs(b.type,b.array);w=new Lt(E,b.itemSize,b.normalized)}b.name!==void 0&&(w.name=b.name),_.push(w)}a.morphAttributes[v]=_}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,x=p.length;v!==x;++v){const _=p[v];a.addGroup(_.start,_.count,_.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new D;m.center!==void 0&&v.fromArray(m.center),a.boundingSphere=new cs(v,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class kb extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?Lf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Ki(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Lf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Ki(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,r,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new is().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=new Yc().fromJSON(e[r],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Iv;for(let r=0,a=e.length;r<a;r++){let c;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in sg?c=sg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),c.isBufferGeometry===!0&&u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Kc;r.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=ma.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(d)}else return u.data?{data:Zs(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new vd(t);r=new ga(u),r.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let x=0,_=m.length;x<_;x++){const y=m[x],S=c(y);S!==null&&(S instanceof HTMLImageElement?v.push(S):v.push(new Ks(S.data,S.width,S.height)))}i[p.uuid]=new jr(v)}else{const v=c(p.url);i[p.uuid]=new jr(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:Zs(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new ga(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],x=await r(v);x!==null&&(x instanceof HTMLImageElement?d.push(x):d.push(new Ks(x.data,x.width,x.height)))}n[u.uuid]=new jr(d)}else{const d=await r(u.url);n[u.uuid]=new jr(d)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=e[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Sa,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Ks:d=new Bt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,Ub)),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],cg),d.wrapT=n(c.wrap[1],cg)),c.format!==void 0&&(d.format=c.format),c.type!==void 0&&(d.type=c.type),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,ug)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,ug)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,r){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let x=0,_=m.length;x<_;x++){const y=m[x];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),v.push(n[y])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":a=new td,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Pe(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Xc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Wc(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new ln(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new wa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Cv(e.color,e.intensity);break;case"DirectionalLight":a=new Av(e.color,e.intensity);break;case"PointLight":a=new Ev(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Pv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Tv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new bv(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Qc().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),a=new j0(d,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),a=new un(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,x=e.instanceColor;a=new Q0(d,p,m),a.instanceMatrix=new no(new Float32Array(v.array),16),x!==void 0&&(a.instanceColor=new no(new Float32Array(x.array),x.itemSize));break;case"LOD":a=new J0;break;case"Line":a=new Mr(c(e.geometry),u(e.material));break;case"LineLoop":a=new K0(c(e.geometry),u(e.material));break;case"LineSegments":a=new Ei(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new $0(c(e.geometry),u(e.material));break;case"Sprite":a=new Z0(u(e.material));break;case"Group":a=new js;break;case"Bone":a=new id;break;default:a=new xt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)a.add(this.parseObject(m[v],t,n,i,r))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const x=m[v];a.animations.push(r[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const x=m[v],_=a.getObjectByProperty("uuid",x.object);_!==void 0&&a.addLevel(_,x.distance,x.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const Ub={UVMapping:Uc,CubeReflectionMapping:_r,CubeRefractionMapping:yr,EquirectangularReflectionMapping:$o,EquirectangularRefractionMapping:ea,CubeUVReflectionMapping:ro},cg={RepeatWrapping:ta,ClampToEdgeWrapping:_n,MirroredRepeatWrapping:na},ug={NearestFilter:Wt,NearestMipmapNearestFilter:Ic,NearestMipmapLinearFilter:Jo,LinearFilter:Xt,LinearMipmapNearestFilter:Vf,LinearMipmapLinearFilter:xr};class Bb extends Vn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=as.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){as.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let fc;class yd{static getContext(){return fc===void 0&&(fc=new(window.AudioContext||window.webkitAudioContext)),fc}static setContext(e){fc=e}}class Vb extends Vn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ki(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const u=c.slice(0);yd.getContext().decodeAudioData(u,function(d){t(d)})}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}}class Gb extends Qc{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Pe().set(e),r=new Pe().set(t),a=new D(i.r,i.g,i.b),c=new D(r.r,r.g,r.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(a).sub(c).multiplyScalar(h)}}class Hb extends Qc{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Pe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const hg=new tt,fg=new tt,Ur=new tt;class Wb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ln,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ln,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ur.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(es*t.fov*.5)/t.zoom;let c,u;fg.elements[12]=-i,hg.elements[12]=i,c=-a*t.aspect+r,u=a*t.aspect+r,Ur.elements[0]=2*t.near/(u-c),Ur.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Ur),c=-a*t.aspect-r,u=a*t.aspect-r,Ur.elements[0]=2*t.near/(u-c),Ur.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Ur)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(fg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(hg)}}class xd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=dg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=dg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function dg(){return(typeof performance>"u"?Date:performance).now()}const Br=new D,pg=new Dn,Xb=new D,Vr=new D;class qb extends xt{constructor(){super(),this.type="AudioListener",this.context=yd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new xd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Br,pg,Xb),Vr.set(0,0,-1).applyQuaternion(pg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Br.x,i),t.positionY.linearRampToValueAtTime(Br.y,i),t.positionZ.linearRampToValueAtTime(Br.z,i),t.forwardX.linearRampToValueAtTime(Vr.x,i),t.forwardY.linearRampToValueAtTime(Vr.y,i),t.forwardZ.linearRampToValueAtTime(Vr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Br.x,Br.y,Br.z),t.setOrientation(Vr.x,Vr.y,Vr.z,n.x,n.y,n.z)}}class Dv extends xt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Gr=new D,mg=new Dn,Yb=new D,Hr=new D;class Zb extends Dv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Gr,mg,Yb),Hr.set(0,0,1).applyQuaternion(mg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Gr.x,n),t.positionY.linearRampToValueAtTime(Gr.y,n),t.positionZ.linearRampToValueAtTime(Gr.z,n),t.orientationX.linearRampToValueAtTime(Hr.x,n),t.orientationY.linearRampToValueAtTime(Hr.y,n),t.orientationZ.linearRampToValueAtTime(Hr.z,n)}else t.setPosition(Gr.x,Gr.y,Gr.z),t.setOrientation(Hr.x,Hr.y,Hr.z)}}class Jb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class zv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[r+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Dn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;Dn.multiplyQuaternionsFlat(e,a,e,t,e,n),Dn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let c=0;c!==r;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const Md="\\[\\]\\.:\\/",jb=new RegExp("["+Md+"]","g"),Sd="[^"+Md+"]",Qb="[^"+Md.replace("\\.","")+"]",Kb=/((?:WC+[\/:])*)/.source.replace("WC",Sd),$b=/(WCOD+)?/.source.replace("WCOD",Qb),eT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Sd),tT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Sd),nT=new RegExp("^"+Kb+$b+eT+tT+"$"),iT=["material","materials","bones","map"];class rT{constructor(e,t,n){const i=n||gt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class gt{constructor(e,t,n){this.path=t,this.parsedPath=n||gt.parseTrackName(t),this.node=gt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new gt.Composite(e,t,n):new gt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(jb,"")}static parseTrackName(e){const t=nT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);iT.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const c=r[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=gt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}gt.Composite=rT;gt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};gt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};gt.prototype.GetterByBindingType=[gt.prototype._getValue_direct,gt.prototype._getValue_array,gt.prototype._getValue_arrayElement,gt.prototype._getValue_toArray];gt.prototype.SetterByBindingTypeAndVersioning=[[gt.prototype._setValue_direct,gt.prototype._setValue_direct_setNeedsUpdate,gt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[gt.prototype._setValue_array,gt.prototype._setValue_array_setNeedsUpdate,gt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[gt.prototype._setValue_arrayElement,gt.prototype._setValue_arrayElement_setNeedsUpdate,gt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[gt.prototype._setValue_fromArray,gt.prototype._setValue_fromArray_setNeedsUpdate,gt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class sT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Bn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],v=m.uuid;let x=t[v];if(x===void 0){x=u++,t[v]=x,e.push(m);for(let _=0,y=a;_!==y;++_)r[_].push(new gt(m,n[_],i[_]))}else if(x<h){c=e[x];const _=--h,y=e[_];t[y.uuid]=x,e[x]=y,t[v]=_,e[_]=m;for(let S=0,b=a;S!==b;++S){const w=r[S],E=w[_];let C=w[x];w[x]=E,C===void 0&&(C=new gt(m,n[S],i[S])),w[_]=C}}else e[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,d=t[h];if(d!==void 0&&d>=r){const p=r++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let v=0,x=i;v!==x;++v){const _=n[v],y=_[p],S=_[d];_[d]=y,_[p]=S}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<r){const m=--r,v=e[m],x=--a,_=e[x];t[v.uuid]=p,e[p]=v,t[_.uuid]=m,e[m]=_,e.pop();for(let y=0,S=i;y!==S;++y){const b=n[y],w=b[m],E=b[x];b[p]=w,b[m]=E,b.pop()}}else{const m=--a,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let x=0,_=i;x!==_;++x){const y=n[x];y[p]=y[m],y.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=r.length,n[e]=i,a.push(e),c.push(t),r.push(p);for(let m=d,v=u.length;m!==v;++m){const x=u[m];p[m]=new gt(x,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}class oT{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,c=new Array(a),u={endingStart:Zr,endingEnd:Zr};for(let h=0;h!==a;++h){const d=r[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=A0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,c=i/r;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=r,u[1]=r+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Hf:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulateAdditive(c);break;case Bc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===C0;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===E0){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,r+=Math.abs(c);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Jr,i.endingEnd=Jr):(e?i.endingStart=this.zeroSlopeAtStart?Jr:Zr:i.endingStart=sa,t?i.endingEnd=this.zeroSlopeAtEnd?Jr:Zr:i.endingEnd=sa)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=r,u[0]=t,c[1]=r+e,u[1]=n,this}}const aT=new Float32Array(1);class lT extends $i{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==r;++p){const m=i[p],v=m.name;let x=d[v];if(x!==void 0)++x.referenceCount,a[p]=x;else{if(x=a[p],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,u,v));continue}const _=t&&t._propertyBindings[p].binding.parsedPath;x=new zv(gt.create(n,v,_),m.ValueTypeName,m.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,u,v),a[p]=x}c[p].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,c=a[r],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[r],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new md(new Float32Array(2),new Float32Array(2),1,aT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?ma.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Bc),u!==void 0){const p=u.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const d=new oT(this,a,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,r),d}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?ma.findByName(n,e):e,a=r?r.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const c=r[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class wd{constructor(e){this.value=e}clone(){return new wd(this.value.clone===void 0?this.value:this.value.clone())}}let cT=0;class uT extends $i{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:cT++}),this.name="",this.usage=oa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class hT extends qc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class fT{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Nv{constructor(e,t,n=0,i=1/0){this.ray=new ya(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ns,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Rf(e,this,n,t),n.sort(gg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Rf(e[i],this,n,t);return n.sort(gg),n}}function gg(l,e){return l.distance-e.distance}function Rf(l,e,t,n){if(l.layers.test(e.layers)&&l.raycast(e,t),n===!0){const i=l.children;for(let r=0,a=i.length;r<a;r++)Rf(i[r],e,t,!0)}}class dT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(qt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class pT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const vg=new fe;class mT{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=vg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return vg.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _g=new D,dc=new D;class gT{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_g.subVectors(e,this.start),dc.subVectors(this.end,this.start);const n=dc.dot(dc);let r=dc.dot(_g)/n;return t&&(r=qt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const yg=new D;class vT extends xt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new at,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ie(i,3));const r=new Tn({fog:!1,toneMapped:!1});this.cone=new Ei(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),yg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(yg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const dr=new D,pc=new tt,Fh=new tt;class _T extends Ei{constructor(e){const t=Fv(e),n=new at,i=[],r=[],a=new Pe(0,0,1),c=new Pe(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(c.r,c.g,c.b))}n.setAttribute("position",new Ie(i,3)),n.setAttribute("color",new Ie(r,3));const u=new Tn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Fh.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const c=t[r];c.parent&&c.parent.isBone&&(pc.multiplyMatrices(Fh,c.matrixWorld),dr.setFromMatrixPosition(pc),i.setXYZ(a,dr.x,dr.y,dr.z),pc.multiplyMatrices(Fh,c.parent.matrixWorld),dr.setFromMatrixPosition(pc),i.setXYZ(a+1,dr.x,dr.y,dr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Fv(l){const e=[];l.isBone===!0&&e.push(l);for(let t=0;t<l.children.length;t++)e.push.apply(e,Fv(l.children[t]));return e}class yT extends un{constructor(e,t,n){const i=new co(t,4,2),r=new wr({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const xT=new D,xg=new Pe,Mg=new Pe;class MT extends xt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new lo(t);i.rotateY(Math.PI*.5),this.material=new wr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Lt(a,3)),this.add(new un(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");xg.copy(this.light.color),Mg.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?xg:Mg;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(xT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ST extends Ei{constructor(e=10,t=10,n=4473924,i=8947848){n=new Pe(n),i=new Pe(i);const r=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,x=-c;m<=t;m++,x+=a){u.push(-c,0,x,c,0,x),u.push(x,0,-c,x,0,c);const _=m===r?n:i;_.toArray(h,v),v+=3,_.toArray(h,v),v+=3,_.toArray(h,v),v+=3,_.toArray(h,v),v+=3}const d=new at;d.setAttribute("position",new Ie(u,3)),d.setAttribute("color",new Ie(h,3));const p=new Tn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class wT extends Ei{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new Pe(r),a=new Pe(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,x=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,x);const _=p&1?r:a;u.push(_.r,_.g,_.b),u.push(_.r,_.g,_.b)}for(let p=0;p<n;p++){const m=p&1?r:a,v=e-e/n*p;for(let x=0;x<i;x++){let _=x/i*(Math.PI*2),y=Math.sin(_)*v,S=Math.cos(_)*v;c.push(y,0,S),u.push(m.r,m.g,m.b),_=(x+1)/i*(Math.PI*2),y=Math.sin(_)*v,S=Math.cos(_)*v,c.push(y,0,S),u.push(m.r,m.g,m.b)}}const h=new at;h.setAttribute("position",new Ie(c,3)),h.setAttribute("color",new Ie(u,3));const d=new Tn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Sg=new D,mc=new D,wg=new D;class bT extends xt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new at;i.setAttribute("position",new Ie([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Tn({fog:!1,toneMapped:!1});this.lightPlane=new Mr(i,r),this.add(this.lightPlane),i=new at,i.setAttribute("position",new Ie([0,0,0,0,0,1],3)),this.targetLine=new Mr(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Sg.setFromMatrixPosition(this.light.matrixWorld),mc.setFromMatrixPosition(this.light.target.matrixWorld),wg.subVectors(mc,Sg),this.lightPlane.lookAt(mc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(mc),this.targetLine.scale.z=wg.length()}}const gc=new D,Ut=new Ma;class TT extends Ei{constructor(e){const t=new at,n=new Tn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,_){u(x),u(_)}function u(x){i.push(0,0,0),r.push(0,0,0),a[x]===void 0&&(a[x]=[]),a[x].push(i.length/3-1)}t.setAttribute("position",new Ie(i,3)),t.setAttribute("color",new Ie(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new Pe(16755200),d=new Pe(16711680),p=new Pe(43775),m=new Pe(16777215),v=new Pe(3355443);this.setColors(h,d,p,m,v)}setColors(e,t,n,i,r){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Ut.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ht("c",t,e,Ut,0,0,-1),Ht("t",t,e,Ut,0,0,1),Ht("n1",t,e,Ut,-n,-i,-1),Ht("n2",t,e,Ut,n,-i,-1),Ht("n3",t,e,Ut,-n,i,-1),Ht("n4",t,e,Ut,n,i,-1),Ht("f1",t,e,Ut,-n,-i,1),Ht("f2",t,e,Ut,n,-i,1),Ht("f3",t,e,Ut,-n,i,1),Ht("f4",t,e,Ut,n,i,1),Ht("u1",t,e,Ut,n*.7,i*1.1,-1),Ht("u2",t,e,Ut,-n*.7,i*1.1,-1),Ht("u3",t,e,Ut,0,i*2,-1),Ht("cf1",t,e,Ut,-n,0,1),Ht("cf2",t,e,Ut,n,0,1),Ht("cf3",t,e,Ut,0,-i,1),Ht("cf4",t,e,Ut,0,i,1),Ht("cn1",t,e,Ut,-n,0,-1),Ht("cn2",t,e,Ut,n,0,-1),Ht("cn3",t,e,Ut,0,-i,-1),Ht("cn4",t,e,Ut,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ht(l,e,t,n,i,r,a){gc.set(i,r,a).unproject(n);const c=e[l];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],gc.x,gc.y,gc.z)}}const vc=new ls;class ET extends Ei{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new at;r.setIndex(new Lt(n,1)),r.setAttribute("position",new Lt(i,3)),super(r,new Tn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&vc.setFromObject(this.object),vc.isEmpty())return;const t=vc.min,n=vc.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class AT extends Ei{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new at;r.setIndex(new Lt(n,1)),r.setAttribute("position",new Ie(i,3)),super(r,new Tn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class CT extends Mr{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new at;a.setAttribute("position",new Ie(r,3)),a.computeBoundingSphere(),super(a,new Tn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new at;u.setAttribute("position",new Ie(c,3)),u.computeBoundingSphere(),this.add(new un(u,new wr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const bg=new D;let _c,Oh;class PT extends xt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",_c===void 0&&(_c=new at,_c.setAttribute("position",new Ie([0,0,0,0,1,0],3)),Oh=new us(0,.5,1,5,1),Oh.translate(0,-.5,0)),this.position.copy(t),this.line=new Mr(_c,new Tn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new un(Oh,new wr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{bg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(bg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class LT extends Ei{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new at;i.setAttribute("position",new Ie(t,3)),i.setAttribute("color",new Ie(n,3));const r=new Tn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Pe,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class RT{constructor(){this.type="ShapePath",this.color=new Pe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ca,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(S){const b=[];for(let w=0,E=S.length;w<E;w++){const C=S[w],L=new is;L.curves=C.curves,b.push(L)}return b}function n(S,b){const w=b.length;let E=!1;for(let C=w-1,L=0;L<w;C=L++){let N=b[C],A=b[L],P=A.x-N.x,O=A.y-N.y;if(Math.abs(O)>Number.EPSILON){if(O<0&&(N=b[L],P=-P,A=b[C],O=-O),S.y<N.y||S.y>A.y)continue;if(S.y===N.y){if(S.x===N.x)return!0}else{const H=O*(S.x-N.x)-P*(S.y-N.y);if(H===0)return!0;if(H<0)continue;E=!E}}else{if(S.y!==N.y)continue;if(A.x<=S.x&&S.x<=N.x||N.x<=S.x&&S.x<=A.x)return!0}}return E}const i=bi.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,c,u;const h=[];if(r.length===1)return c=r[0],u=new is,u.curves=c.curves,h.push(u),h;let d=!i(r[0].getPoints());d=e?!d:d;const p=[],m=[];let v=[],x=0,_;m[x]=void 0,v[x]=[];for(let S=0,b=r.length;S<b;S++)c=r[S],_=c.getPoints(),a=i(_),a=e?!a:a,a?(!d&&m[x]&&x++,m[x]={s:new is,p:_},m[x].s.curves=c.curves,d&&x++,v[x]=[]):v[x].push({h:c,p:_[0]});if(!m[0])return t(r);if(m.length>1){let S=!1,b=0;for(let w=0,E=m.length;w<E;w++)p[w]=[];for(let w=0,E=m.length;w<E;w++){const C=v[w];for(let L=0;L<C.length;L++){const N=C[L];let A=!0;for(let P=0;P<m.length;P++)n(N.p,m[P].p)&&(w!==P&&b++,A?(A=!1,p[P].push(N)):S=!0);A&&p[w].push(N)}}b>0&&S===!1&&(v=p)}let y;for(let S=0,b=m.length;S<b;S++){u=m[S].s,h.push(u),y=v[S];for(let w=0,E=y.length;w<E;w++)u.holes.push(y[w].h)}return h}}const Hi=IT();function IT(){const l=new ArrayBuffer(4),e=new Float32Array(l),t=new Uint32Array(l),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,r[u]=h|d}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:c}}function DT(l){Math.abs(l)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),l=qt(l,-65504,65504),Hi.floatView[0]=l;const e=Hi.uint32View[0],t=e>>23&511;return Hi.baseTable[t]+((e&8388607)>>Hi.shiftTable[t])}function zT(l){const e=l>>10;return Hi.uint32View[0]=Hi.mantissaTable[Hi.offsetTable[e]+(l&1023)]+Hi.exponentTable[e],Hi.floatView[0]}var NT=Object.freeze({__proto__:null,fromHalfFloat:zT,toHalfFloat:DT});class FT extends br{constructor(e,t,n,i,r,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,a)}}class OT extends ba{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class kT extends Ta{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class UT extends Ea{constructor(e,t,n,i,r,a,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,a,c)}}class BT extends us{constructor(e,t,n,i,r,a,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,a,c,u)}}class VT extends Aa{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class GT extends Ca{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class HT extends Pa{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class WT extends ao{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class XT extends lo{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class qT extends so{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class YT extends er{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class ZT extends La{constructor(e,t,n,i,r,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,a)}}class JT extends Ra{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class jT extends co{constructor(e,t,n,i,r,a,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,a,c)}}class QT extends Ia{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class KT extends Da{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}}class $T extends za{constructor(e,t,n,i,r,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,a)}}class eE extends Na{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Oc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Oc);const If=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Bf,AddEquation:Xr,AddOperation:o0,AdditiveAnimationBlendMode:Hf,AdditiveBlending:Yh,AlphaFormat:g0,AlwaysDepth:$g,AlwaysStencilFunc:I0,AmbientLight:Cv,AmbientLightProbe:Hb,AnimationClip:ma,AnimationLoader:Lb,AnimationMixer:lT,AnimationObjectGroup:sT,AnimationUtils:Eb,ArcCurve:ev,ArrayCamera:W0,ArrowHelper:PT,Audio:Dv,AudioAnalyser:Jb,AudioContext:yd,AudioListener:qb,AudioLoader:Vb,AxesHelper:LT,BackSide:In,BasicDepthPacking:P0,BasicShadowMap:Ug,Bone:id,BooleanKeyframeTrack:hs,Box2:mT,Box3:ls,Box3Helper:AT,BoxBufferGeometry:FT,BoxGeometry:br,BoxHelper:ET,BufferAttribute:Lt,BufferGeometry:at,BufferGeometryLoader:Iv,ByteType:h0,Cache:as,Camera:Ma,CameraHelper:TT,CanvasTexture:jw,CapsuleBufferGeometry:OT,CapsuleGeometry:ba,CatmullRomCurve3:tv,CineonToneMapping:c0,CircleBufferGeometry:kT,CircleGeometry:Ta,ClampToEdgeWrapping:_n,Clock:xd,Color:Pe,ColorKeyframeTrack:gd,ColorManagement:vn,CompressedArrayTexture:Jw,CompressedTexture:sd,CompressedTextureLoader:Rb,ConeBufferGeometry:UT,ConeGeometry:Ea,CubeCamera:Jf,CubeReflectionMapping:_r,CubeRefractionMapping:yr,CubeTexture:Sa,CubeTextureLoader:Ib,CubeUVReflectionMapping:ro,CubicBezierCurve:ad,CubicBezierCurve3:nv,CubicInterpolant:xv,CullFaceBack:qh,CullFaceFront:kg,CullFaceFrontBack:Q_,CullFaceNone:Og,Curve:pi,CurvePath:rv,CustomBlending:Bg,CustomToneMapping:u0,CylinderBufferGeometry:BT,CylinderGeometry:us,Cylindrical:pT,Data3DTexture:qf,DataArrayTexture:Vc,DataTexture:Ks,DataTextureLoader:Db,DataUtils:NT,DecrementStencilOp:uy,DecrementWrapStencilOp:fy,DefaultLoadingManager:wv,DepthFormat:vr,DepthStencilFormat:rs,DepthTexture:X0,DirectionalLight:Av,DirectionalLightHelper:bT,DiscreteInterpolant:Mv,DodecahedronBufferGeometry:VT,DodecahedronGeometry:Aa,DoubleSide:Xi,DstAlphaFactor:Yg,DstColorFactor:Jg,DynamicCopyUsage:Ay,DynamicDrawUsage:My,DynamicReadUsage:by,EdgesGeometry:sv,EllipseCurve:Zc,EqualDepth:t0,EqualStencilFunc:gy,EquirectangularReflectionMapping:$o,EquirectangularRefractionMapping:ea,Euler:xa,EventDispatcher:$i,ExtrudeBufferGeometry:GT,ExtrudeGeometry:Ca,FileLoader:Ki,Float16BufferAttribute:lx,Float32BufferAttribute:Ie,Float64BufferAttribute:cx,FloatType:qi,Fog:Xc,FogExp2:Wc,FramebufferTexture:Zw,FrontSide:Ji,Frustum:Gc,GLBufferAttribute:fT,GLSL1:Py,GLSL3:Sf,GreaterDepth:i0,GreaterEqualDepth:n0,GreaterEqualStencilFunc:xy,GreaterStencilFunc:_y,GridHelper:ST,Group:js,HalfFloatType:$s,HemisphereLight:bv,HemisphereLightHelper:MT,HemisphereLightProbe:Gb,IcosahedronBufferGeometry:HT,IcosahedronGeometry:Pa,ImageBitmapLoader:Bb,ImageLoader:ga,ImageUtils:Xf,IncrementStencilOp:cy,IncrementWrapStencilOp:hy,InstancedBufferAttribute:no,InstancedBufferGeometry:Rv,InstancedInterleavedBuffer:hT,InstancedMesh:Q0,Int16BufferAttribute:ox,Int32BufferAttribute:ax,Int8BufferAttribute:ix,IntType:d0,InterleavedBuffer:qc,InterleavedBufferAttribute:ss,Interpolant:Fa,InterpolateDiscrete:ia,InterpolateLinear:ra,InterpolateSmooth:Ac,InvertStencilOp:dy,KeepStencilOp:Cc,KeyframeTrack:mi,LOD:J0,LatheBufferGeometry:WT,LatheGeometry:ao,Layers:ns,LessDepth:e0,LessEqualDepth:Rc,LessEqualStencilFunc:vy,LessStencilFunc:my,Light:Tr,LightProbe:Qc,Line:Mr,Line3:gT,LineBasicMaterial:Tn,LineCurve:Jc,LineCurve3:iv,LineDashedMaterial:_v,LineLoop:K0,LineSegments:Ei,LinearEncoding:Qi,LinearFilter:Xt,LinearInterpolant:md,LinearMipMapLinearFilter:ny,LinearMipMapNearestFilter:ty,LinearMipmapLinearFilter:xr,LinearMipmapNearestFilter:Vf,LinearSRGBColorSpace:eo,LinearToneMapping:a0,Loader:Vn,LoaderUtils:Lf,LoadingManager:vd,LoopOnce:E0,LoopPingPong:C0,LoopRepeat:A0,LuminanceAlphaFormat:_0,LuminanceFormat:v0,MOUSE:J_,Material:hn,MaterialLoader:Kc,MathUtils:Hy,Matrix3:bn,Matrix4:tt,MaxEquation:Qh,Mesh:un,MeshBasicMaterial:wr,MeshDepthMaterial:Kf,MeshDistanceMaterial:$f,MeshLambertMaterial:gv,MeshMatcapMaterial:vv,MeshNormalMaterial:mv,MeshPhongMaterial:dv,MeshPhysicalMaterial:fv,MeshStandardMaterial:fd,MeshToonMaterial:pv,MinEquation:jh,MirroredRepeatWrapping:na,MixOperation:s0,MultiplyBlending:Jh,MultiplyOperation:_a,NearestFilter:Wt,NearestMipMapLinearFilter:ey,NearestMipMapNearestFilter:$_,NearestMipmapLinearFilter:Jo,NearestMipmapNearestFilter:Ic,NeverDepth:Kg,NeverStencilFunc:py,NoBlending:Zi,NoColorSpace:oy,NoToneMapping:fi,NormalAnimationBlendMode:Bc,NormalBlending:Kr,NotEqualDepth:r0,NotEqualStencilFunc:yy,NumberKeyframeTrack:da,Object3D:xt,ObjectLoader:kb,ObjectSpaceNormalMap:R0,OctahedronBufferGeometry:XT,OctahedronGeometry:lo,OneFactor:Wg,OneMinusDstAlphaFactor:Zg,OneMinusDstColorFactor:jg,OneMinusSrcAlphaFactor:Uf,OneMinusSrcColorFactor:qg,OrthographicCamera:wa,PCFShadowMap:kc,PCFSoftShadowMap:Zo,PMREMGenerator:bf,Path:ca,PerspectiveCamera:ln,Plane:pr,PlaneBufferGeometry:qT,PlaneGeometry:so,PlaneHelper:CT,PointLight:Ev,PointLightHelper:yT,Points:$0,PointsMaterial:rd,PolarGridHelper:wT,PolyhedronBufferGeometry:YT,PolyhedronGeometry:er,PositionalAudio:Zb,PropertyBinding:gt,PropertyMixer:zv,QuadraticBezierCurve:ld,QuadraticBezierCurve3:cd,Quaternion:Dn,QuaternionKeyframeTrack:uo,QuaternionLinearInterpolant:Sv,RED_GREEN_RGTC2_Format:xf,RED_RGTC1_Format:T0,REVISION:Oc,RGBADepthPacking:L0,RGBAFormat:Rn,RGBAIntegerFormat:w0,RGBA_ASTC_10x10_Format:gf,RGBA_ASTC_10x5_Format:df,RGBA_ASTC_10x6_Format:pf,RGBA_ASTC_10x8_Format:mf,RGBA_ASTC_12x10_Format:vf,RGBA_ASTC_12x12_Format:_f,RGBA_ASTC_4x4_Format:sf,RGBA_ASTC_5x4_Format:of,RGBA_ASTC_5x5_Format:af,RGBA_ASTC_6x5_Format:lf,RGBA_ASTC_6x6_Format:cf,RGBA_ASTC_8x5_Format:uf,RGBA_ASTC_8x6_Format:hf,RGBA_ASTC_8x8_Format:ff,RGBA_BPTC_Format:Ec,RGBA_ETC2_EAC_Format:rf,RGBA_PVRTC_2BPPV1_Format:tf,RGBA_PVRTC_4BPPV1_Format:ef,RGBA_S3TC_DXT1_Format:wc,RGBA_S3TC_DXT3_Format:bc,RGBA_S3TC_DXT5_Format:Tc,RGB_ETC1_Format:b0,RGB_ETC2_Format:nf,RGB_PVRTC_2BPPV1_Format:$h,RGB_PVRTC_4BPPV1_Format:Kh,RGB_S3TC_DXT1_Format:Sc,RGFormat:M0,RGIntegerFormat:S0,RawShaderMaterial:hv,Ray:ya,Raycaster:Nv,RectAreaLight:Pv,RedFormat:y0,RedIntegerFormat:x0,ReinhardToneMapping:l0,RepeatWrapping:ta,ReplaceStencilOp:ly,ReverseSubtractEquation:Gg,RingBufferGeometry:ZT,RingGeometry:La,SIGNED_RED_GREEN_RGTC2_Format:Mf,SIGNED_RED_RGTC1_Format:yf,SRGBColorSpace:ui,Scene:td,ShaderChunk:ot,ShaderLib:hi,ShaderMaterial:Ti,ShadowMaterial:uv,Shape:is,ShapeBufferGeometry:JT,ShapeGeometry:Ra,ShapePath:RT,ShapeUtils:bi,ShortType:f0,Skeleton:Yc,SkeletonHelper:_T,SkinnedMesh:j0,Source:jr,Sphere:cs,SphereBufferGeometry:jT,SphereGeometry:co,Spherical:dT,SphericalHarmonics3:Lv,SplineCurve:ud,SpotLight:Tv,SpotLightHelper:vT,Sprite:Z0,SpriteMaterial:nd,SrcAlphaFactor:kf,SrcAlphaSaturateFactor:Qg,SrcColorFactor:Xg,StaticCopyUsage:Ey,StaticDrawUsage:oa,StaticReadUsage:wy,StereoCamera:Wb,StreamCopyUsage:Cy,StreamDrawUsage:Sy,StreamReadUsage:Ty,StringKeyframeTrack:fs,SubtractEquation:Vg,SubtractiveBlending:Zh,TOUCH:j_,TangentSpaceNormalMap:Sr,TetrahedronBufferGeometry:QT,TetrahedronGeometry:Ia,Texture:Bt,TextureLoader:zb,TorusBufferGeometry:KT,TorusGeometry:Da,TorusKnotBufferGeometry:$T,TorusKnotGeometry:za,Triangle:ni,TriangleFanDrawMode:sy,TriangleStripDrawMode:ry,TrianglesDrawMode:iy,TubeBufferGeometry:eE,TubeGeometry:Na,TwoPassDoubleSide:K_,UVMapping:Uc,Uint16BufferAttribute:Yf,Uint32BufferAttribute:Zf,Uint8BufferAttribute:rx,Uint8ClampedBufferAttribute:sx,Uniform:wd,UniformsGroup:uT,UniformsLib:Se,UniformsUtils:O0,UnsignedByteType:ji,UnsignedInt248Type:$r,UnsignedIntType:mr,UnsignedShort4444Type:p0,UnsignedShort5551Type:m0,UnsignedShortType:Gf,VSMShadowMap:Yr,Vector2:fe,Vector3:D,Vector4:bt,VectorKeyframeTrack:pa,VideoTexture:Yw,WebGL1Renderer:q0,WebGL3DRenderTarget:Yy,WebGLArrayRenderTarget:qy,WebGLCubeRenderTarget:jf,WebGLMultipleRenderTargets:Zy,WebGLRenderTarget:di,WebGLRenderer:ed,WebGLUtils:H0,WireframeGeometry:cv,WrapAroundEnding:sa,ZeroCurvatureEnding:Zr,ZeroFactor:Hg,ZeroSlopeEnding:Jr,ZeroStencilOp:ay,_SRGBAFormat:Dc,sRGBEncoding:Tt},Symbol.toStringTag,{value:"Module"}));var gr={},tE={get exports(){return gr},set exports(l){gr=l}},ds={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ds.ConcurrentRoot=1;ds.ContinuousEventPriority=4;ds.DefaultEventPriority=16;ds.DiscreteEventPriority=1;ds.IdleEventPriority=536870912;ds.LegacyRoot=0;(function(l){l.exports=ds})(tE);function nE(l){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,r=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function v(){const x=d(e);if(!p(m,x)){const _=m;h(m=x,_)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?r(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=l(n,i,u),u}const iE=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Tg=iE?Re.useEffect:Re.useLayoutEffect;function rE(l){const e=typeof l=="function"?nE(l):l,t=(n=e.getState,i=Object.is)=>{const[,r]=Re.useReducer(y=>y+1,0),a=e.getState(),c=Re.useRef(a),u=Re.useRef(n),h=Re.useRef(i),d=Re.useRef(!1),p=Re.useRef();p.current===void 0&&(p.current=n(a));let m,v=!1;(c.current!==a||u.current!==n||h.current!==i||d.current)&&(m=n(a),v=!i(p.current,m)),Tg(()=>{v&&(p.current=m),c.current=a,u.current=n,h.current=i,d.current=!1});const x=Re.useRef(a);Tg(()=>{const y=()=>{try{const b=e.getState(),w=u.current(b);h.current(p.current,w)||(c.current=b,p.current=w,r())}catch{d.current=!0,r()}},S=e.subscribe(y);return e.getState()!==x.current&&y(),S},[]);const _=v?m:p.current;return Re.useDebugValue(_),_};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var Df={},sE={get exports(){return Df},set exports(l){Df=l}},va={},oE={get exports(){return va},set exports(l){va=l}},Ov={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(l){function e(k,J){var j=k.length;k.push(J);e:for(;0<j;){var he=j-1>>>1,W=k[he];if(0<i(W,J))k[he]=J,k[j]=W,j=he;else break e}}function t(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var J=k[0],j=k.pop();if(j!==J){k[0]=j;e:for(var he=0,W=k.length,ue=W>>>1;he<ue;){var ge=2*(he+1)-1,_e=k[ge],Q=ge+1,De=k[Q];if(0>i(_e,j))Q<W&&0>i(De,_e)?(k[he]=De,k[Q]=j,he=Q):(k[he]=_e,k[ge]=j,he=ge);else if(Q<W&&0>i(De,j))k[he]=De,k[Q]=j,he=Q;else break e}}return J}function i(k,J){var j=k.sortIndex-J.sortIndex;return j!==0?j:k.id-J.id}if(typeof performance=="object"&&typeof performance.now=="function"){var r=performance;l.unstable_now=function(){return r.now()}}else{var a=Date,c=a.now();l.unstable_now=function(){return a.now()-c}}var u=[],h=[],d=1,p=null,m=3,v=!1,x=!1,_=!1,y=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(k){for(var J=t(h);J!==null;){if(J.callback===null)n(h);else if(J.startTime<=k)n(h),J.sortIndex=J.expirationTime,e(u,J);else break;J=t(h)}}function E(k){if(_=!1,w(k),!x)if(t(u)!==null)x=!0,oe(C);else{var J=t(h);J!==null&&de(E,J.startTime-k)}}function C(k,J){x=!1,_&&(_=!1,S(A),A=-1),v=!0;var j=m;try{for(w(J),p=t(u);p!==null&&(!(p.expirationTime>J)||k&&!H());){var he=p.callback;if(typeof he=="function"){p.callback=null,m=p.priorityLevel;var W=he(p.expirationTime<=J);J=l.unstable_now(),typeof W=="function"?p.callback=W:p===t(u)&&n(u),w(J)}else n(u);p=t(u)}if(p!==null)var ue=!0;else{var ge=t(h);ge!==null&&de(E,ge.startTime-J),ue=!1}return ue}finally{p=null,m=j,v=!1}}var L=!1,N=null,A=-1,P=5,O=-1;function H(){return!(l.unstable_now()-O<P)}function K(){if(N!==null){var k=l.unstable_now();O=k;var J=!0;try{J=N(!0,k)}finally{J?X():(L=!1,N=null)}}else L=!1}var X;if(typeof b=="function")X=function(){b(K)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,ee=V.port2;V.port1.onmessage=K,X=function(){ee.postMessage(null)}}else X=function(){y(K,0)};function oe(k){N=k,L||(L=!0,X())}function de(k,J){A=y(function(){k(l.unstable_now())},J)}l.unstable_IdlePriority=5,l.unstable_ImmediatePriority=1,l.unstable_LowPriority=4,l.unstable_NormalPriority=3,l.unstable_Profiling=null,l.unstable_UserBlockingPriority=2,l.unstable_cancelCallback=function(k){k.callback=null},l.unstable_continueExecution=function(){x||v||(x=!0,oe(C))},l.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<k?Math.floor(1e3/k):5},l.unstable_getCurrentPriorityLevel=function(){return m},l.unstable_getFirstCallbackNode=function(){return t(u)},l.unstable_next=function(k){switch(m){case 1:case 2:case 3:var J=3;break;default:J=m}var j=m;m=J;try{return k()}finally{m=j}},l.unstable_pauseExecution=function(){},l.unstable_requestPaint=function(){},l.unstable_runWithPriority=function(k,J){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var j=m;m=k;try{return J()}finally{m=j}},l.unstable_scheduleCallback=function(k,J,j){var he=l.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?he+j:he):j=he,k){case 1:var W=-1;break;case 2:W=250;break;case 5:W=1073741823;break;case 4:W=1e4;break;default:W=5e3}return W=j+W,k={id:d++,callback:J,priorityLevel:k,startTime:j,expirationTime:W,sortIndex:-1},j>he?(k.sortIndex=j,e(h,k),t(u)===null&&k===t(h)&&(_?(S(A),A=-1):_=!0,de(E,j-he))):(k.sortIndex=W,e(u,k),x||v||(x=!0,oe(C))),k},l.unstable_shouldYield=H,l.unstable_wrapCallback=function(k){var J=m;return function(){var j=m;m=J;try{return k.apply(this,arguments)}finally{m=j}}}})(Ov);(function(l){l.exports=Ov})(oE);/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aE=function(e){var t={},n=Re,i=va,r=Object.assign;function a(s){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+s,f=1;f<arguments.length;f++)o+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+s+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),x=Symbol.for("react.context"),_=Symbol.for("react.forward_ref"),y=Symbol.for("react.suspense"),S=Symbol.for("react.suspense_list"),b=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),E=Symbol.for("react.offscreen"),C=Symbol.iterator;function L(s){return s===null||typeof s!="object"?null:(s=C&&s[C]||s["@@iterator"],typeof s=="function"?s:null)}function N(s){if(s==null)return null;if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s;switch(s){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case y:return"Suspense";case S:return"SuspenseList"}if(typeof s=="object")switch(s.$$typeof){case x:return(s.displayName||"Context")+".Consumer";case v:return(s._context.displayName||"Context")+".Provider";case _:var o=s.render;return s=s.displayName,s||(s=o.displayName||o.name||"",s=s!==""?"ForwardRef("+s+")":"ForwardRef"),s;case b:return o=s.displayName||null,o!==null?o:N(s.type)||"Memo";case w:o=s._payload,s=s._init;try{return N(s(o))}catch{}}return null}function A(s){var o=s.type;switch(s.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return s=o.render,s=s.displayName||s.name||"",o.displayName||(s!==""?"ForwardRef("+s+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(o);case 8:return o===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function P(s){var o=s,f=s;if(s.alternate)for(;o.return;)o=o.return;else{s=o;do o=s,o.flags&4098&&(f=o.return),s=o.return;while(s)}return o.tag===3?f:null}function O(s){if(P(s)!==s)throw Error(a(188))}function H(s){var o=s.alternate;if(!o){if(o=P(s),o===null)throw Error(a(188));return o!==s?null:s}for(var f=s,g=o;;){var M=f.return;if(M===null)break;var T=M.alternate;if(T===null){if(g=M.return,g!==null){f=g;continue}break}if(M.child===T.child){for(T=M.child;T;){if(T===f)return O(M),s;if(T===g)return O(M),o;T=T.sibling}throw Error(a(188))}if(f.return!==g.return)f=M,g=T;else{for(var z=!1,U=M.child;U;){if(U===f){z=!0,f=M,g=T;break}if(U===g){z=!0,g=M,f=T;break}U=U.sibling}if(!z){for(U=T.child;U;){if(U===f){z=!0,f=T,g=M;break}if(U===g){z=!0,g=T,f=M;break}U=U.sibling}if(!z)throw Error(a(189))}}if(f.alternate!==g)throw Error(a(190))}if(f.tag!==3)throw Error(a(188));return f.stateNode.current===f?s:o}function K(s){return s=H(s),s!==null?X(s):null}function X(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){var o=X(s);if(o!==null)return o;s=s.sibling}return null}function V(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){if(s.tag!==4){var o=V(s);if(o!==null)return o}s=s.sibling}return null}var ee=Array.isArray,oe=e.getPublicInstance,de=e.getRootHostContext,k=e.getChildHostContext,J=e.prepareForCommit,j=e.resetAfterCommit,he=e.createInstance,W=e.appendInitialChild,ue=e.finalizeInitialChildren,ge=e.prepareUpdate,_e=e.shouldSetTextContent,Q=e.createTextInstance,De=e.scheduleTimeout,ze=e.cancelTimeout,Ne=e.noTimeout,Me=e.isPrimaryRenderer,Je=e.supportsMutation,le=e.supportsPersistence,ie=e.supportsHydration,xe=e.getInstanceFromNode,Fe=e.preparePortalMount,we=e.getCurrentEventPriority,Qe=e.detachDeletedInstance,qe=e.supportsMicrotasks,Ve=e.scheduleMicrotask,Mt=e.supportsTestSelectors,St=e.findFiberRoot,F=e.getBoundingRect,R=e.getTextContent,te=e.isHiddenSubtree,me=e.matchAccessibilityRole,ye=e.setFocusIfFocusable,Te=e.setupIntersectionObserver,je=e.appendChild,Ae=e.appendChildToContainer,ce=e.commitTextUpdate,Ge=e.commitMount,Ze=e.commitUpdate,Oe=e.insertBefore,Ye=e.insertInContainerBefore,He=e.removeChild,dt=e.removeChildFromContainer,Et=e.resetTextContent,Yt=e.hideInstance,B=e.hideTextInstance,re=e.unhideInstance,pe=e.unhideTextInstance,Ce=e.clearContainer,Ue=e.cloneInstance,mt=e.createContainerChildSet,Vt=e.appendChildToContainerChildSet,tn=e.finalizeContainerChildren,gi=e.replaceContainerChildren,At=e.cloneHiddenInstance,Gn=e.cloneHiddenTextInstance,En=e.canHydrateInstance,ka=e.canHydrateTextInstance,$c=e.canHydrateSuspenseInstance,Ua=e.isSuspenseInstancePending,ho=e.isSuspenseInstanceFallback,I=e.registerSuspenseInstanceRetry,Y=e.getNextHydratableSibling,se=e.getFirstHydratableChild,q=e.getFirstHydratableChildWithinContainer,ae=e.getFirstHydratableChildWithinSuspenseInstance,We=e.hydrateInstance,Ke=e.hydrateTextInstance,it=e.hydrateSuspenseInstance,lt=e.getNextHydratableInstanceAfterSuspenseInstance,ft=e.commitHydratedContainer,ut=e.commitHydratedSuspenseInstance,ht=e.clearSuspenseBoundary,Ft=e.clearSuspenseBoundaryFromContainer,yn=e.shouldDeleteUnhydratedTailInstances,ii=e.didNotMatchHydratedContainerTextInstance,Ai=e.didNotMatchHydratedTextInstance,Rt;function rt(s){if(Rt===void 0)try{throw Error()}catch(f){var o=f.stack.trim().match(/\n( *(at )?)/);Rt=o&&o[1]||""}return`
`+Rt+s}var Er=!1;function Ot(s,o){if(!s||Er)return"";Er=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(ve){var g=ve}Reflect.construct(s,[],o)}else{try{o.call()}catch(ve){g=ve}s.call(o.prototype)}else{try{throw Error()}catch(ve){g=ve}s()}}catch(ve){if(ve&&g&&typeof ve.stack=="string"){for(var M=ve.stack.split(`
`),T=g.stack.split(`
`),z=M.length-1,U=T.length-1;1<=z&&0<=U&&M[z]!==T[U];)U--;for(;1<=z&&0<=U;z--,U--)if(M[z]!==T[U]){if(z!==1||U!==1)do if(z--,U--,0>U||M[z]!==T[U]){var ne=`
`+M[z].replace(" at new "," at ");return s.displayName&&ne.includes("<anonymous>")&&(ne=ne.replace("<anonymous>",s.displayName)),ne}while(1<=z&&0<=U);break}}}finally{Er=!1,Error.prepareStackTrace=f}return(s=s?s.displayName||s.name:"")?rt(s):""}var Ci=Object.prototype.hasOwnProperty,ps=[],Hn=-1;function Wn(s){return{current:s}}function nt(s){0>Hn||(s.current=ps[Hn],ps[Hn]=null,Hn--)}function pt(s,o){Hn++,ps[Hn]=s.current,s.current=o}var Xn={},wt=Wn(Xn),nn=Wn(!1),Pi=Xn;function Li(s,o){var f=s.type.contextTypes;if(!f)return Xn;var g=s.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===o)return g.__reactInternalMemoizedMaskedChildContext;var M={},T;for(T in f)M[T]=o[T];return g&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=o,s.__reactInternalMemoizedMaskedChildContext=M),M}function An(s){return s=s.childContextTypes,s!=null}function Ba(){nt(nn),nt(wt)}function Td(s,o,f){if(wt.current!==Xn)throw Error(a(168));pt(wt,o),pt(nn,f)}function Ed(s,o,f){var g=s.stateNode;if(o=o.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var M in g)if(!(M in o))throw Error(a(108,A(s)||"Unknown",M));return r({},f,g)}function Va(s){return s=(s=s.stateNode)&&s.__reactInternalMemoizedMergedChildContext||Xn,Pi=wt.current,pt(wt,s),pt(nn,nn.current),!0}function Ad(s,o,f){var g=s.stateNode;if(!g)throw Error(a(169));f?(s=Ed(s,o,Pi),g.__reactInternalMemoizedMergedChildContext=s,nt(nn),nt(wt),pt(wt,s)):nt(nn),pt(nn,f)}var ri=Math.clz32?Math.clz32:s_,i_=Math.log,r_=Math.LN2;function s_(s){return s>>>=0,s===0?32:31-(i_(s)/r_|0)|0}var Ga=64,Ha=4194304;function fo(s){switch(s&-s){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return s&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return s}}function Wa(s,o){var f=s.pendingLanes;if(f===0)return 0;var g=0,M=s.suspendedLanes,T=s.pingedLanes,z=f&268435455;if(z!==0){var U=z&~M;U!==0?g=fo(U):(T&=z,T!==0&&(g=fo(T)))}else z=f&~M,z!==0?g=fo(z):T!==0&&(g=fo(T));if(g===0)return 0;if(o!==0&&o!==g&&!(o&M)&&(M=g&-g,T=o&-o,M>=T||M===16&&(T&4194240)!==0))return o;if(g&4&&(g|=f&16),o=s.entangledLanes,o!==0)for(s=s.entanglements,o&=g;0<o;)f=31-ri(o),M=1<<f,g|=s[f],o&=~M;return g}function o_(s,o){switch(s){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function a_(s,o){for(var f=s.suspendedLanes,g=s.pingedLanes,M=s.expirationTimes,T=s.pendingLanes;0<T;){var z=31-ri(T),U=1<<z,ne=M[z];ne===-1?(!(U&f)||U&g)&&(M[z]=o_(U,o)):ne<=o&&(s.expiredLanes|=U),T&=~U}}function eu(s){return s=s.pendingLanes&-1073741825,s!==0?s:s&1073741824?1073741824:0}function tu(s){for(var o=[],f=0;31>f;f++)o.push(s);return o}function po(s,o,f){s.pendingLanes|=o,o!==536870912&&(s.suspendedLanes=0,s.pingedLanes=0),s=s.eventTimes,o=31-ri(o),s[o]=f}function l_(s,o){var f=s.pendingLanes&~o;s.pendingLanes=o,s.suspendedLanes=0,s.pingedLanes=0,s.expiredLanes&=o,s.mutableReadLanes&=o,s.entangledLanes&=o,o=s.entanglements;var g=s.eventTimes;for(s=s.expirationTimes;0<f;){var M=31-ri(f),T=1<<M;o[M]=0,g[M]=-1,s[M]=-1,f&=~T}}function nu(s,o){var f=s.entangledLanes|=o;for(s=s.entanglements;f;){var g=31-ri(f),M=1<<g;M&o|s[g]&o&&(s[g]|=o),f&=~M}}var vt=0;function Cd(s){return s&=-s,1<s?4<s?s&268435455?16:536870912:4:1}var iu=i.unstable_scheduleCallback,Pd=i.unstable_cancelCallback,c_=i.unstable_shouldYield,u_=i.unstable_requestPaint,rn=i.unstable_now,ru=i.unstable_ImmediatePriority,h_=i.unstable_UserBlockingPriority,su=i.unstable_NormalPriority,f_=i.unstable_IdlePriority,Xa=null,vi=null;function d_(s){if(vi&&typeof vi.onCommitFiberRoot=="function")try{vi.onCommitFiberRoot(Xa,s,void 0,(s.current.flags&128)===128)}catch{}}function p_(s,o){return s===o&&(s!==0||1/s===1/o)||s!==s&&o!==o}var _i=typeof Object.is=="function"?Object.is:p_,Ri=null,qa=!1,ou=!1;function Ld(s){Ri===null?Ri=[s]:Ri.push(s)}function m_(s){qa=!0,Ld(s)}function yi(){if(!ou&&Ri!==null){ou=!0;var s=0,o=vt;try{var f=Ri;for(vt=1;s<f.length;s++){var g=f[s];do g=g(!0);while(g!==null)}Ri=null,qa=!1}catch(M){throw Ri!==null&&(Ri=Ri.slice(s+1)),iu(ru,yi),M}finally{vt=o,ou=!1}}return null}var g_=c.ReactCurrentBatchConfig;function Ya(s,o){if(_i(s,o))return!0;if(typeof s!="object"||s===null||typeof o!="object"||o===null)return!1;var f=Object.keys(s),g=Object.keys(o);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var M=f[g];if(!Ci.call(o,M)||!_i(s[M],o[M]))return!1}return!0}function v_(s){switch(s.tag){case 5:return rt(s.type);case 16:return rt("Lazy");case 13:return rt("Suspense");case 19:return rt("SuspenseList");case 0:case 2:case 15:return s=Ot(s.type,!1),s;case 11:return s=Ot(s.type.render,!1),s;case 1:return s=Ot(s.type,!0),s;default:return""}}function si(s,o){if(s&&s.defaultProps){o=r({},o),s=s.defaultProps;for(var f in s)o[f]===void 0&&(o[f]=s[f]);return o}return o}var Za=Wn(null),Ja=null,ms=null,au=null;function lu(){au=ms=Ja=null}function Rd(s,o,f){Me?(pt(Za,o._currentValue),o._currentValue=f):(pt(Za,o._currentValue2),o._currentValue2=f)}function cu(s){var o=Za.current;nt(Za),Me?s._currentValue=o:s._currentValue2=o}function uu(s,o,f){for(;s!==null;){var g=s.alternate;if((s.childLanes&o)!==o?(s.childLanes|=o,g!==null&&(g.childLanes|=o)):g!==null&&(g.childLanes&o)!==o&&(g.childLanes|=o),s===f)break;s=s.return}}function gs(s,o){Ja=s,au=ms=null,s=s.dependencies,s!==null&&s.firstContext!==null&&(s.lanes&o&&(Fn=!0),s.firstContext=null)}function qn(s){var o=Me?s._currentValue:s._currentValue2;if(au!==s)if(s={context:s,memoizedValue:o,next:null},ms===null){if(Ja===null)throw Error(a(308));ms=s,Ja.dependencies={lanes:0,firstContext:s}}else ms=ms.next=s;return o}var xi=null,tr=!1;function hu(s){s.updateQueue={baseState:s.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Id(s,o){s=s.updateQueue,o.updateQueue===s&&(o.updateQueue={baseState:s.baseState,firstBaseUpdate:s.firstBaseUpdate,lastBaseUpdate:s.lastBaseUpdate,shared:s.shared,effects:s.effects})}function Ii(s,o){return{eventTime:s,lane:o,tag:0,payload:null,callback:null,next:null}}function nr(s,o){var f=s.updateQueue;f!==null&&(f=f.shared,Zt!==null&&s.mode&1&&!(ct&2)?(s=f.interleaved,s===null?(o.next=o,xi===null?xi=[f]:xi.push(f)):(o.next=s.next,s.next=o),f.interleaved=o):(s=f.pending,s===null?o.next=o:(o.next=s.next,s.next=o),f.pending=o))}function ja(s,o,f){if(o=o.updateQueue,o!==null&&(o=o.shared,(f&4194240)!==0)){var g=o.lanes;g&=s.pendingLanes,f|=g,o.lanes=f,nu(s,f)}}function Dd(s,o){var f=s.updateQueue,g=s.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var M=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var z={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?M=T=z:T=T.next=z,f=f.next}while(f!==null);T===null?M=T=o:T=T.next=o}else M=T=o;f={baseState:g.baseState,firstBaseUpdate:M,lastBaseUpdate:T,shared:g.shared,effects:g.effects},s.updateQueue=f;return}s=f.lastBaseUpdate,s===null?f.firstBaseUpdate=o:s.next=o,f.lastBaseUpdate=o}function Qa(s,o,f,g){var M=s.updateQueue;tr=!1;var T=M.firstBaseUpdate,z=M.lastBaseUpdate,U=M.shared.pending;if(U!==null){M.shared.pending=null;var ne=U,ve=ne.next;ne.next=null,z===null?T=ve:z.next=ve,z=ne;var Le=s.alternate;Le!==null&&(Le=Le.updateQueue,U=Le.lastBaseUpdate,U!==z&&(U===null?Le.firstBaseUpdate=ve:U.next=ve,Le.lastBaseUpdate=ne))}if(T!==null){var $e=M.baseState;z=0,Le=ve=ne=null,U=T;do{var Xe=U.lane,Ct=U.eventTime;if((g&Xe)===Xe){Le!==null&&(Le=Le.next={eventTime:Ct,lane:0,tag:U.tag,payload:U.payload,callback:U.callback,next:null});e:{var Be=s,mn=U;switch(Xe=o,Ct=f,mn.tag){case 1:if(Be=mn.payload,typeof Be=="function"){$e=Be.call(Ct,$e,Xe);break e}$e=Be;break e;case 3:Be.flags=Be.flags&-65537|128;case 0:if(Be=mn.payload,Xe=typeof Be=="function"?Be.call(Ct,$e,Xe):Be,Xe==null)break e;$e=r({},$e,Xe);break e;case 2:tr=!0}}U.callback!==null&&U.lane!==0&&(s.flags|=64,Xe=M.effects,Xe===null?M.effects=[U]:Xe.push(U))}else Ct={eventTime:Ct,lane:Xe,tag:U.tag,payload:U.payload,callback:U.callback,next:null},Le===null?(ve=Le=Ct,ne=$e):Le=Le.next=Ct,z|=Xe;if(U=U.next,U===null){if(U=M.shared.pending,U===null)break;Xe=U,U=Xe.next,Xe.next=null,M.lastBaseUpdate=Xe,M.shared.pending=null}}while(1);if(Le===null&&(ne=$e),M.baseState=ne,M.firstBaseUpdate=ve,M.lastBaseUpdate=Le,o=M.shared.interleaved,o!==null){M=o;do z|=M.lane,M=M.next;while(M!==o)}else T===null&&(M.shared.lanes=0);Ts|=z,s.lanes=z,s.memoizedState=$e}}function zd(s,o,f){if(s=o.effects,o.effects=null,s!==null)for(o=0;o<s.length;o++){var g=s[o],M=g.callback;if(M!==null){if(g.callback=null,g=f,typeof M!="function")throw Error(a(191,M));M.call(g)}}}var Nd=new n.Component().refs;function fu(s,o,f,g){o=s.memoizedState,f=f(g,o),f=f==null?o:r({},o,f),s.memoizedState=f,s.lanes===0&&(s.updateQueue.baseState=f)}var Ka={isMounted:function(s){return(s=s._reactInternals)?P(s)===s:!1},enqueueSetState:function(s,o,f){s=s._reactInternals;var g=Mn(),M=sr(s),T=Ii(g,M);T.payload=o,f!=null&&(T.callback=f),nr(s,T),o=Qn(s,M,g),o!==null&&ja(o,s,M)},enqueueReplaceState:function(s,o,f){s=s._reactInternals;var g=Mn(),M=sr(s),T=Ii(g,M);T.tag=1,T.payload=o,f!=null&&(T.callback=f),nr(s,T),o=Qn(s,M,g),o!==null&&ja(o,s,M)},enqueueForceUpdate:function(s,o){s=s._reactInternals;var f=Mn(),g=sr(s),M=Ii(f,g);M.tag=2,o!=null&&(M.callback=o),nr(s,M),o=Qn(s,g,f),o!==null&&ja(o,s,g)}};function Fd(s,o,f,g,M,T,z){return s=s.stateNode,typeof s.shouldComponentUpdate=="function"?s.shouldComponentUpdate(g,T,z):o.prototype&&o.prototype.isPureReactComponent?!Ya(f,g)||!Ya(M,T):!0}function Od(s,o,f){var g=!1,M=Xn,T=o.contextType;return typeof T=="object"&&T!==null?T=qn(T):(M=An(o)?Pi:wt.current,g=o.contextTypes,T=(g=g!=null)?Li(s,M):Xn),o=new o(f,T),s.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=Ka,s.stateNode=o,o._reactInternals=s,g&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=M,s.__reactInternalMemoizedMaskedChildContext=T),o}function kd(s,o,f,g){s=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(f,g),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(f,g),o.state!==s&&Ka.enqueueReplaceState(o,o.state,null)}function du(s,o,f,g){var M=s.stateNode;M.props=f,M.state=s.memoizedState,M.refs=Nd,hu(s);var T=o.contextType;typeof T=="object"&&T!==null?M.context=qn(T):(T=An(o)?Pi:wt.current,M.context=Li(s,T)),M.state=s.memoizedState,T=o.getDerivedStateFromProps,typeof T=="function"&&(fu(s,o,T,f),M.state=s.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(o=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),o!==M.state&&Ka.enqueueReplaceState(M,M.state,null),Qa(s,f,M,g),M.state=s.memoizedState),typeof M.componentDidMount=="function"&&(s.flags|=4194308)}var vs=[],_s=0,$a=null,el=0,Yn=[],Zn=0,Ar=null,Di=1,zi="";function Cr(s,o){vs[_s++]=el,vs[_s++]=$a,$a=s,el=o}function Ud(s,o,f){Yn[Zn++]=Di,Yn[Zn++]=zi,Yn[Zn++]=Ar,Ar=s;var g=Di;s=zi;var M=32-ri(g)-1;g&=~(1<<M),f+=1;var T=32-ri(o)+M;if(30<T){var z=M-M%5;T=(g&(1<<z)-1).toString(32),g>>=z,M-=z,Di=1<<32-ri(o)+M|f<<M|g,zi=T+s}else Di=1<<T|f<<M|g,zi=s}function pu(s){s.return!==null&&(Cr(s,1),Ud(s,1,0))}function mu(s){for(;s===$a;)$a=vs[--_s],vs[_s]=null,el=vs[--_s],vs[_s]=null;for(;s===Ar;)Ar=Yn[--Zn],Yn[Zn]=null,zi=Yn[--Zn],Yn[Zn]=null,Di=Yn[--Zn],Yn[Zn]=null}var zn=null,Nn=null,It=!1,mo=!1,oi=null;function Bd(s,o){var f=Kn(5,null,null,0);f.elementType="DELETED",f.stateNode=o,f.return=s,o=s.deletions,o===null?(s.deletions=[f],s.flags|=16):o.push(f)}function Vd(s,o){switch(s.tag){case 5:return o=En(o,s.type,s.pendingProps),o!==null?(s.stateNode=o,zn=s,Nn=se(o),!0):!1;case 6:return o=ka(o,s.pendingProps),o!==null?(s.stateNode=o,zn=s,Nn=null,!0):!1;case 13:if(o=$c(o),o!==null){var f=Ar!==null?{id:Di,overflow:zi}:null;return s.memoizedState={dehydrated:o,treeContext:f,retryLane:1073741824},f=Kn(18,null,null,0),f.stateNode=o,f.return=s,s.child=f,zn=s,Nn=null,!0}return!1;default:return!1}}function gu(s){return(s.mode&1)!==0&&(s.flags&128)===0}function vu(s){if(It){var o=Nn;if(o){var f=o;if(!Vd(s,o)){if(gu(s))throw Error(a(418));o=Y(f);var g=zn;o&&Vd(s,o)?Bd(g,f):(s.flags=s.flags&-4097|2,It=!1,zn=s)}}else{if(gu(s))throw Error(a(418));s.flags=s.flags&-4097|2,It=!1,zn=s}}}function Gd(s){for(s=s.return;s!==null&&s.tag!==5&&s.tag!==3&&s.tag!==13;)s=s.return;zn=s}function go(s){if(!ie||s!==zn)return!1;if(!It)return Gd(s),It=!0,!1;if(s.tag!==3&&(s.tag!==5||yn(s.type)&&!_e(s.type,s.memoizedProps))){var o=Nn;if(o){if(gu(s)){for(s=Nn;s;)s=Y(s);throw Error(a(418))}for(;o;)Bd(s,o),o=Y(o)}}if(Gd(s),s.tag===13){if(!ie)throw Error(a(316));if(s=s.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));Nn=lt(s)}else Nn=zn?Y(s.stateNode):null;return!0}function ys(){ie&&(Nn=zn=null,mo=It=!1)}function _u(s){oi===null?oi=[s]:oi.push(s)}function vo(s,o,f){if(s=f.ref,s!==null&&typeof s!="function"&&typeof s!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(a(309));var g=f.stateNode}if(!g)throw Error(a(147,s));var M=g,T=""+s;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===T?o.ref:(o=function(z){var U=M.refs;U===Nd&&(U=M.refs={}),z===null?delete U[T]:U[T]=z},o._stringRef=T,o)}if(typeof s!="string")throw Error(a(284));if(!f._owner)throw Error(a(290,s))}return s}function tl(s,o){throw s=Object.prototype.toString.call(o),Error(a(31,s==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":s))}function Hd(s){var o=s._init;return o(s._payload)}function Wd(s){function o(Z,G){if(s){var $=Z.deletions;$===null?(Z.deletions=[G],Z.flags|=16):$.push(G)}}function f(Z,G){if(!s)return null;for(;G!==null;)o(Z,G),G=G.sibling;return null}function g(Z,G){for(Z=new Map;G!==null;)G.key!==null?Z.set(G.key,G):Z.set(G.index,G),G=G.sibling;return Z}function M(Z,G){return Z=ar(Z,G),Z.index=0,Z.sibling=null,Z}function T(Z,G,$){return Z.index=$,s?($=Z.alternate,$!==null?($=$.index,$<G?(Z.flags|=2,G):$):(Z.flags|=2,G)):(Z.flags|=1048576,G)}function z(Z){return s&&Z.alternate===null&&(Z.flags|=2),Z}function U(Z,G,$,Ee){return G===null||G.tag!==6?(G=th($,Z.mode,Ee),G.return=Z,G):(G=M(G,$),G.return=Z,G)}function ne(Z,G,$,Ee){var ke=$.type;return ke===d?Le(Z,G,$.props.children,Ee,$.key):G!==null&&(G.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Hd(ke)===G.type)?(Ee=M(G,$.props),Ee.ref=vo(Z,G,$),Ee.return=Z,Ee):(Ee=Il($.type,$.key,$.props,null,Z.mode,Ee),Ee.ref=vo(Z,G,$),Ee.return=Z,Ee)}function ve(Z,G,$,Ee){return G===null||G.tag!==4||G.stateNode.containerInfo!==$.containerInfo||G.stateNode.implementation!==$.implementation?(G=nh($,Z.mode,Ee),G.return=Z,G):(G=M(G,$.children||[]),G.return=Z,G)}function Le(Z,G,$,Ee,ke){return G===null||G.tag!==7?(G=Nr($,Z.mode,Ee,ke),G.return=Z,G):(G=M(G,$),G.return=Z,G)}function $e(Z,G,$){if(typeof G=="string"&&G!==""||typeof G=="number")return G=th(""+G,Z.mode,$),G.return=Z,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return $=Il(G.type,G.key,G.props,null,Z.mode,$),$.ref=vo(Z,null,G),$.return=Z,$;case h:return G=nh(G,Z.mode,$),G.return=Z,G;case w:var Ee=G._init;return $e(Z,Ee(G._payload),$)}if(ee(G)||L(G))return G=Nr(G,Z.mode,$,null),G.return=Z,G;tl(Z,G)}return null}function Xe(Z,G,$,Ee){var ke=G!==null?G.key:null;if(typeof $=="string"&&$!==""||typeof $=="number")return ke!==null?null:U(Z,G,""+$,Ee);if(typeof $=="object"&&$!==null){switch($.$$typeof){case u:return $.key===ke?ne(Z,G,$,Ee):null;case h:return $.key===ke?ve(Z,G,$,Ee):null;case w:return ke=$._init,Xe(Z,G,ke($._payload),Ee)}if(ee($)||L($))return ke!==null?null:Le(Z,G,$,Ee,null);tl(Z,$)}return null}function Ct(Z,G,$,Ee,ke){if(typeof Ee=="string"&&Ee!==""||typeof Ee=="number")return Z=Z.get($)||null,U(G,Z,""+Ee,ke);if(typeof Ee=="object"&&Ee!==null){switch(Ee.$$typeof){case u:return Z=Z.get(Ee.key===null?$:Ee.key)||null,ne(G,Z,Ee,ke);case h:return Z=Z.get(Ee.key===null?$:Ee.key)||null,ve(G,Z,Ee,ke);case w:var st=Ee._init;return Ct(Z,G,$,st(Ee._payload),ke)}if(ee(Ee)||L(Ee))return Z=Z.get($)||null,Le(G,Z,Ee,ke,null);tl(G,Ee)}return null}function Be(Z,G,$,Ee){for(var ke=null,st=null,et=G,_t=G=0,on=null;et!==null&&_t<$.length;_t++){et.index>_t?(on=et,et=null):on=et.sibling;var yt=Xe(Z,et,$[_t],Ee);if(yt===null){et===null&&(et=on);break}s&&et&&yt.alternate===null&&o(Z,et),G=T(yt,G,_t),st===null?ke=yt:st.sibling=yt,st=yt,et=on}if(_t===$.length)return f(Z,et),It&&Cr(Z,_t),ke;if(et===null){for(;_t<$.length;_t++)et=$e(Z,$[_t],Ee),et!==null&&(G=T(et,G,_t),st===null?ke=et:st.sibling=et,st=et);return It&&Cr(Z,_t),ke}for(et=g(Z,et);_t<$.length;_t++)on=Ct(et,Z,_t,$[_t],Ee),on!==null&&(s&&on.alternate!==null&&et.delete(on.key===null?_t:on.key),G=T(on,G,_t),st===null?ke=on:st.sibling=on,st=on);return s&&et.forEach(function(lr){return o(Z,lr)}),It&&Cr(Z,_t),ke}function mn(Z,G,$,Ee){var ke=L($);if(typeof ke!="function")throw Error(a(150));if($=ke.call($),$==null)throw Error(a(151));for(var st=ke=null,et=G,_t=G=0,on=null,yt=$.next();et!==null&&!yt.done;_t++,yt=$.next()){et.index>_t?(on=et,et=null):on=et.sibling;var lr=Xe(Z,et,yt.value,Ee);if(lr===null){et===null&&(et=on);break}s&&et&&lr.alternate===null&&o(Z,et),G=T(lr,G,_t),st===null?ke=lr:st.sibling=lr,st=lr,et=on}if(yt.done)return f(Z,et),It&&Cr(Z,_t),ke;if(et===null){for(;!yt.done;_t++,yt=$.next())yt=$e(Z,yt.value,Ee),yt!==null&&(G=T(yt,G,_t),st===null?ke=yt:st.sibling=yt,st=yt);return It&&Cr(Z,_t),ke}for(et=g(Z,et);!yt.done;_t++,yt=$.next())yt=Ct(et,Z,_t,yt.value,Ee),yt!==null&&(s&&yt.alternate!==null&&et.delete(yt.key===null?_t:yt.key),G=T(yt,G,_t),st===null?ke=yt:st.sibling=yt,st=yt);return s&&et.forEach(function(Y_){return o(Z,Y_)}),It&&Cr(Z,_t),ke}function $n(Z,G,$,Ee){if(typeof $=="object"&&$!==null&&$.type===d&&$.key===null&&($=$.props.children),typeof $=="object"&&$!==null){switch($.$$typeof){case u:e:{for(var ke=$.key,st=G;st!==null;){if(st.key===ke){if(ke=$.type,ke===d){if(st.tag===7){f(Z,st.sibling),G=M(st,$.props.children),G.return=Z,Z=G;break e}}else if(st.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Hd(ke)===st.type){f(Z,st.sibling),G=M(st,$.props),G.ref=vo(Z,st,$),G.return=Z,Z=G;break e}f(Z,st);break}else o(Z,st);st=st.sibling}$.type===d?(G=Nr($.props.children,Z.mode,Ee,$.key),G.return=Z,Z=G):(Ee=Il($.type,$.key,$.props,null,Z.mode,Ee),Ee.ref=vo(Z,G,$),Ee.return=Z,Z=Ee)}return z(Z);case h:e:{for(st=$.key;G!==null;){if(G.key===st)if(G.tag===4&&G.stateNode.containerInfo===$.containerInfo&&G.stateNode.implementation===$.implementation){f(Z,G.sibling),G=M(G,$.children||[]),G.return=Z,Z=G;break e}else{f(Z,G);break}else o(Z,G);G=G.sibling}G=nh($,Z.mode,Ee),G.return=Z,Z=G}return z(Z);case w:return st=$._init,$n(Z,G,st($._payload),Ee)}if(ee($))return Be(Z,G,$,Ee);if(L($))return mn(Z,G,$,Ee);tl(Z,$)}return typeof $=="string"&&$!==""||typeof $=="number"?($=""+$,G!==null&&G.tag===6?(f(Z,G.sibling),G=M(G,$),G.return=Z,Z=G):(f(Z,G),G=th($,Z.mode,Ee),G.return=Z,Z=G),z(Z)):f(Z,G)}return $n}var xs=Wd(!0),Xd=Wd(!1),_o={},Jn=Wn(_o),yo=Wn(_o),Ms=Wn(_o);function Mi(s){if(s===_o)throw Error(a(174));return s}function yu(s,o){pt(Ms,o),pt(yo,s),pt(Jn,_o),s=de(o),nt(Jn),pt(Jn,s)}function Ss(){nt(Jn),nt(yo),nt(Ms)}function qd(s){var o=Mi(Ms.current),f=Mi(Jn.current);o=k(f,s.type,o),f!==o&&(pt(yo,s),pt(Jn,o))}function xu(s){yo.current===s&&(nt(Jn),nt(yo))}var Dt=Wn(0);function nl(s){for(var o=s;o!==null;){if(o.tag===13){var f=o.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ua(f)||ho(f)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if(o.flags&128)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var Mu=[];function Su(){for(var s=0;s<Mu.length;s++){var o=Mu[s];Me?o._workInProgressVersionPrimary=null:o._workInProgressVersionSecondary=null}Mu.length=0}var il=c.ReactCurrentDispatcher,jn=c.ReactCurrentBatchConfig,ws=0,kt=null,fn=null,sn=null,rl=!1,xo=!1,Mo=0,__=0;function dn(){throw Error(a(321))}function wu(s,o){if(o===null)return!1;for(var f=0;f<o.length&&f<s.length;f++)if(!_i(s[f],o[f]))return!1;return!0}function bu(s,o,f,g,M,T){if(ws=T,kt=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,il.current=s===null||s.memoizedState===null?S_:w_,s=f(g,M),xo){T=0;do{if(xo=!1,Mo=0,25<=T)throw Error(a(301));T+=1,sn=fn=null,o.updateQueue=null,il.current=b_,s=f(g,M)}while(xo)}if(il.current=cl,o=fn!==null&&fn.next!==null,ws=0,sn=fn=kt=null,rl=!1,o)throw Error(a(300));return s}function Tu(){var s=Mo!==0;return Mo=0,s}function Ni(){var s={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return sn===null?kt.memoizedState=sn=s:sn=sn.next=s,sn}function Si(){if(fn===null){var s=kt.alternate;s=s!==null?s.memoizedState:null}else s=fn.next;var o=sn===null?kt.memoizedState:sn.next;if(o!==null)sn=o,fn=s;else{if(s===null)throw Error(a(310));fn=s,s={memoizedState:fn.memoizedState,baseState:fn.baseState,baseQueue:fn.baseQueue,queue:fn.queue,next:null},sn===null?kt.memoizedState=sn=s:sn=sn.next=s}return sn}function Pr(s,o){return typeof o=="function"?o(s):o}function sl(s){var o=Si(),f=o.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=s;var g=fn,M=g.baseQueue,T=f.pending;if(T!==null){if(M!==null){var z=M.next;M.next=T.next,T.next=z}g.baseQueue=M=T,f.pending=null}if(M!==null){T=M.next,g=g.baseState;var U=z=null,ne=null,ve=T;do{var Le=ve.lane;if((ws&Le)===Le)ne!==null&&(ne=ne.next={lane:0,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null}),g=ve.hasEagerState?ve.eagerState:s(g,ve.action);else{var $e={lane:Le,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null};ne===null?(U=ne=$e,z=g):ne=ne.next=$e,kt.lanes|=Le,Ts|=Le}ve=ve.next}while(ve!==null&&ve!==T);ne===null?z=g:ne.next=U,_i(g,o.memoizedState)||(Fn=!0),o.memoizedState=g,o.baseState=z,o.baseQueue=ne,f.lastRenderedState=g}if(s=f.interleaved,s!==null){M=s;do T=M.lane,kt.lanes|=T,Ts|=T,M=M.next;while(M!==s)}else M===null&&(f.lanes=0);return[o.memoizedState,f.dispatch]}function ol(s){var o=Si(),f=o.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=s;var g=f.dispatch,M=f.pending,T=o.memoizedState;if(M!==null){f.pending=null;var z=M=M.next;do T=s(T,z.action),z=z.next;while(z!==M);_i(T,o.memoizedState)||(Fn=!0),o.memoizedState=T,o.baseQueue===null&&(o.baseState=T),f.lastRenderedState=T}return[T,g]}function Yd(){}function Zd(s,o){var f=kt,g=Si(),M=o(),T=!_i(g.memoizedState,M);if(T&&(g.memoizedState=M,Fn=!0),g=g.queue,wo(Qd.bind(null,f,g,s),[s]),g.getSnapshot!==o||T||sn!==null&&sn.memoizedState.tag&1){if(f.flags|=2048,So(9,jd.bind(null,f,g,M,o),void 0,null),Zt===null)throw Error(a(349));ws&30||Jd(f,o,M)}return M}function Jd(s,o,f){s.flags|=16384,s={getSnapshot:o,value:f},o=kt.updateQueue,o===null?(o={lastEffect:null,stores:null},kt.updateQueue=o,o.stores=[s]):(f=o.stores,f===null?o.stores=[s]:f.push(s))}function jd(s,o,f,g){o.value=f,o.getSnapshot=g,Kd(o)&&Qn(s,1,-1)}function Qd(s,o,f){return f(function(){Kd(o)&&Qn(s,1,-1)})}function Kd(s){var o=s.getSnapshot;s=s.value;try{var f=o();return!_i(s,f)}catch{return!0}}function Eu(s){var o=Ni();return typeof s=="function"&&(s=s()),o.memoizedState=o.baseState=s,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Pr,lastRenderedState:s},o.queue=s,s=s.dispatch=M_.bind(null,kt,s),[o.memoizedState,s]}function So(s,o,f,g){return s={tag:s,create:o,destroy:f,deps:g,next:null},o=kt.updateQueue,o===null?(o={lastEffect:null,stores:null},kt.updateQueue=o,o.lastEffect=s.next=s):(f=o.lastEffect,f===null?o.lastEffect=s.next=s:(g=f.next,f.next=s,s.next=g,o.lastEffect=s)),s}function $d(){return Si().memoizedState}function al(s,o,f,g){var M=Ni();kt.flags|=s,M.memoizedState=So(1|o,f,void 0,g===void 0?null:g)}function ll(s,o,f,g){var M=Si();g=g===void 0?null:g;var T=void 0;if(fn!==null){var z=fn.memoizedState;if(T=z.destroy,g!==null&&wu(g,z.deps)){M.memoizedState=So(o,f,T,g);return}}kt.flags|=s,M.memoizedState=So(1|o,f,T,g)}function Au(s,o){return al(8390656,8,s,o)}function wo(s,o){return ll(2048,8,s,o)}function ep(s,o){return ll(4,2,s,o)}function tp(s,o){return ll(4,4,s,o)}function np(s,o){if(typeof o=="function")return s=s(),o(s),function(){o(null)};if(o!=null)return s=s(),o.current=s,function(){o.current=null}}function ip(s,o,f){return f=f!=null?f.concat([s]):null,ll(4,4,np.bind(null,o,s),f)}function Cu(){}function rp(s,o){var f=Si();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&wu(o,g[1])?g[0]:(f.memoizedState=[s,o],s)}function sp(s,o){var f=Si();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&wu(o,g[1])?g[0]:(s=s(),f.memoizedState=[s,o],s)}function y_(s,o){var f=vt;vt=f!==0&&4>f?f:4,s(!0);var g=jn.transition;jn.transition={};try{s(!1),o()}finally{vt=f,jn.transition=g}}function op(){return Si().memoizedState}function x_(s,o,f){var g=sr(s);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},ap(s)?lp(o,f):(cp(s,o,f),f=Mn(),s=Qn(s,g,f),s!==null&&up(s,o,g))}function M_(s,o,f){var g=sr(s),M={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(ap(s))lp(o,M);else{cp(s,o,M);var T=s.alternate;if(s.lanes===0&&(T===null||T.lanes===0)&&(T=o.lastRenderedReducer,T!==null))try{var z=o.lastRenderedState,U=T(z,f);if(M.hasEagerState=!0,M.eagerState=U,_i(U,z))return}catch{}finally{}f=Mn(),s=Qn(s,g,f),s!==null&&up(s,o,g)}}function ap(s){var o=s.alternate;return s===kt||o!==null&&o===kt}function lp(s,o){xo=rl=!0;var f=s.pending;f===null?o.next=o:(o.next=f.next,f.next=o),s.pending=o}function cp(s,o,f){Zt!==null&&s.mode&1&&!(ct&2)?(s=o.interleaved,s===null?(f.next=f,xi===null?xi=[o]:xi.push(o)):(f.next=s.next,s.next=f),o.interleaved=f):(s=o.pending,s===null?f.next=f:(f.next=s.next,s.next=f),o.pending=f)}function up(s,o,f){if(f&4194240){var g=o.lanes;g&=s.pendingLanes,f|=g,o.lanes=f,nu(s,f)}}var cl={readContext:qn,useCallback:dn,useContext:dn,useEffect:dn,useImperativeHandle:dn,useInsertionEffect:dn,useLayoutEffect:dn,useMemo:dn,useReducer:dn,useRef:dn,useState:dn,useDebugValue:dn,useDeferredValue:dn,useTransition:dn,useMutableSource:dn,useSyncExternalStore:dn,useId:dn,unstable_isNewReconciler:!1},S_={readContext:qn,useCallback:function(s,o){return Ni().memoizedState=[s,o===void 0?null:o],s},useContext:qn,useEffect:Au,useImperativeHandle:function(s,o,f){return f=f!=null?f.concat([s]):null,al(4194308,4,np.bind(null,o,s),f)},useLayoutEffect:function(s,o){return al(4194308,4,s,o)},useInsertionEffect:function(s,o){return al(4,2,s,o)},useMemo:function(s,o){var f=Ni();return o=o===void 0?null:o,s=s(),f.memoizedState=[s,o],s},useReducer:function(s,o,f){var g=Ni();return o=f!==void 0?f(o):o,g.memoizedState=g.baseState=o,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:s,lastRenderedState:o},g.queue=s,s=s.dispatch=x_.bind(null,kt,s),[g.memoizedState,s]},useRef:function(s){var o=Ni();return s={current:s},o.memoizedState=s},useState:Eu,useDebugValue:Cu,useDeferredValue:function(s){var o=Eu(s),f=o[0],g=o[1];return Au(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=Eu(!1),o=s[0];return s=y_.bind(null,s[1]),Ni().memoizedState=s,[o,s]},useMutableSource:function(){},useSyncExternalStore:function(s,o,f){var g=kt,M=Ni();if(It){if(f===void 0)throw Error(a(407));f=f()}else{if(f=o(),Zt===null)throw Error(a(349));ws&30||Jd(g,o,f)}M.memoizedState=f;var T={value:f,getSnapshot:o};return M.queue=T,Au(Qd.bind(null,g,T,s),[s]),g.flags|=2048,So(9,jd.bind(null,g,T,f,o),void 0,null),f},useId:function(){var s=Ni(),o=Zt.identifierPrefix;if(It){var f=zi,g=Di;f=(g&~(1<<32-ri(g)-1)).toString(32)+f,o=":"+o+"R"+f,f=Mo++,0<f&&(o+="H"+f.toString(32)),o+=":"}else f=__++,o=":"+o+"r"+f.toString(32)+":";return s.memoizedState=o},unstable_isNewReconciler:!1},w_={readContext:qn,useCallback:rp,useContext:qn,useEffect:wo,useImperativeHandle:ip,useInsertionEffect:ep,useLayoutEffect:tp,useMemo:sp,useReducer:sl,useRef:$d,useState:function(){return sl(Pr)},useDebugValue:Cu,useDeferredValue:function(s){var o=sl(Pr),f=o[0],g=o[1];return wo(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=sl(Pr)[0],o=Si().memoizedState;return[s,o]},useMutableSource:Yd,useSyncExternalStore:Zd,useId:op,unstable_isNewReconciler:!1},b_={readContext:qn,useCallback:rp,useContext:qn,useEffect:wo,useImperativeHandle:ip,useInsertionEffect:ep,useLayoutEffect:tp,useMemo:sp,useReducer:ol,useRef:$d,useState:function(){return ol(Pr)},useDebugValue:Cu,useDeferredValue:function(s){var o=ol(Pr),f=o[0],g=o[1];return wo(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=ol(Pr)[0],o=Si().memoizedState;return[s,o]},useMutableSource:Yd,useSyncExternalStore:Zd,useId:op,unstable_isNewReconciler:!1};function Pu(s,o){try{var f="",g=o;do f+=v_(g),g=g.return;while(g);var M=f}catch(T){M=`
Error generating stack: `+T.message+`
`+T.stack}return{value:s,source:o,stack:M}}function Lu(s,o){try{console.error(o.value)}catch(f){setTimeout(function(){throw f})}}var T_=typeof WeakMap=="function"?WeakMap:Map;function hp(s,o,f){f=Ii(-1,f),f.tag=3,f.payload={element:null};var g=o.value;return f.callback=function(){Tl||(Tl=!0,Zu=g),Lu(s,o)},f}function fp(s,o,f){f=Ii(-1,f),f.tag=3;var g=s.type.getDerivedStateFromError;if(typeof g=="function"){var M=o.value;f.payload=function(){return g(M)},f.callback=function(){Lu(s,o)}}var T=s.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){Lu(s,o),typeof g!="function"&&(ir===null?ir=new Set([this]):ir.add(this));var z=o.stack;this.componentDidCatch(o.value,{componentStack:z!==null?z:""})}),f}function dp(s,o,f){var g=s.pingCache;if(g===null){g=s.pingCache=new T_;var M=new Set;g.set(o,M)}else M=g.get(o),M===void 0&&(M=new Set,g.set(o,M));M.has(f)||(M.add(f),s=U_.bind(null,s,o,f),o.then(s,s))}function pp(s){do{var o;if((o=s.tag===13)&&(o=s.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return s;s=s.return}while(s!==null);return null}function mp(s,o,f,g,M){return s.mode&1?(s.flags|=65536,s.lanes=M,s):(s===o?s.flags|=65536:(s.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(o=Ii(-1,1),o.tag=2,nr(f,o))),f.lanes|=1),s)}function wi(s){s.flags|=4}function gp(s,o){if(s!==null&&s.child===o.child)return!0;if(o.flags&16)return!1;for(s=o.child;s!==null;){if(s.flags&12854||s.subtreeFlags&12854)return!1;s=s.sibling}return!0}var bo,To,ul,hl;if(Je)bo=function(s,o){for(var f=o.child;f!==null;){if(f.tag===5||f.tag===6)W(s,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===o)break;for(;f.sibling===null;){if(f.return===null||f.return===o)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},To=function(){},ul=function(s,o,f,g,M){if(s=s.memoizedProps,s!==g){var T=o.stateNode,z=Mi(Jn.current);f=ge(T,f,s,g,M,z),(o.updateQueue=f)&&wi(o)}},hl=function(s,o,f,g){f!==g&&wi(o)};else if(le){bo=function(s,o,f,g){for(var M=o.child;M!==null;){if(M.tag===5){var T=M.stateNode;f&&g&&(T=At(T,M.type,M.memoizedProps,M)),W(s,T)}else if(M.tag===6)T=M.stateNode,f&&g&&(T=Gn(T,M.memoizedProps,M)),W(s,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),bo(s,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===o)break;for(;M.sibling===null;){if(M.return===null||M.return===o)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var vp=function(s,o,f,g){for(var M=o.child;M!==null;){if(M.tag===5){var T=M.stateNode;f&&g&&(T=At(T,M.type,M.memoizedProps,M)),Vt(s,T)}else if(M.tag===6)T=M.stateNode,f&&g&&(T=Gn(T,M.memoizedProps,M)),Vt(s,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),vp(s,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===o)break;for(;M.sibling===null;){if(M.return===null||M.return===o)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};To=function(s,o){var f=o.stateNode;if(!gp(s,o)){s=f.containerInfo;var g=mt(s);vp(g,o,!1,!1),f.pendingChildren=g,wi(o),tn(s,g)}},ul=function(s,o,f,g,M){var T=s.stateNode,z=s.memoizedProps;if((s=gp(s,o))&&z===g)o.stateNode=T;else{var U=o.stateNode,ne=Mi(Jn.current),ve=null;z!==g&&(ve=ge(U,f,z,g,M,ne)),s&&ve===null?o.stateNode=T:(T=Ue(T,ve,f,z,g,o,s,U),ue(T,f,g,M,ne)&&wi(o),o.stateNode=T,s?wi(o):bo(T,o,!1,!1))}},hl=function(s,o,f,g){f!==g?(s=Mi(Ms.current),f=Mi(Jn.current),o.stateNode=Q(g,s,f,o),wi(o)):o.stateNode=s.stateNode}}else To=function(){},ul=function(){},hl=function(){};function Eo(s,o){if(!It)switch(s.tailMode){case"hidden":o=s.tail;for(var f=null;o!==null;)o.alternate!==null&&(f=o),o=o.sibling;f===null?s.tail=null:f.sibling=null;break;case"collapsed":f=s.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?o||s.tail===null?s.tail=null:s.tail.sibling=null:g.sibling=null}}function pn(s){var o=s.alternate!==null&&s.alternate.child===s.child,f=0,g=0;if(o)for(var M=s.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags&14680064,g|=M.flags&14680064,M.return=s,M=M.sibling;else for(M=s.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags,g|=M.flags,M.return=s,M=M.sibling;return s.subtreeFlags|=g,s.childLanes=f,o}function E_(s,o,f){var g=o.pendingProps;switch(mu(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return pn(o),null;case 1:return An(o.type)&&Ba(),pn(o),null;case 3:return g=o.stateNode,Ss(),nt(nn),nt(wt),Su(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(s===null||s.child===null)&&(go(o)?wi(o):s===null||s.memoizedState.isDehydrated&&!(o.flags&256)||(o.flags|=1024,oi!==null&&(Qu(oi),oi=null))),To(s,o),pn(o),null;case 5:xu(o),f=Mi(Ms.current);var M=o.type;if(s!==null&&o.stateNode!=null)ul(s,o,M,g,f),s.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!g){if(o.stateNode===null)throw Error(a(166));return pn(o),null}if(s=Mi(Jn.current),go(o)){if(!ie)throw Error(a(175));s=We(o.stateNode,o.type,o.memoizedProps,f,s,o,!mo),o.updateQueue=s,s!==null&&wi(o)}else{var T=he(M,g,f,s,o);bo(T,o,!1,!1),o.stateNode=T,ue(T,M,g,f,s)&&wi(o)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return pn(o),null;case 6:if(s&&o.stateNode!=null)hl(s,o,s.memoizedProps,g);else{if(typeof g!="string"&&o.stateNode===null)throw Error(a(166));if(s=Mi(Ms.current),f=Mi(Jn.current),go(o)){if(!ie)throw Error(a(176));if(s=o.stateNode,g=o.memoizedProps,(f=Ke(s,g,o,!mo))&&(M=zn,M!==null))switch(T=(M.mode&1)!==0,M.tag){case 3:ii(M.stateNode.containerInfo,s,g,T);break;case 5:Ai(M.type,M.memoizedProps,M.stateNode,s,g,T)}f&&wi(o)}else o.stateNode=Q(g,s,f,o)}return pn(o),null;case 13:if(nt(Dt),g=o.memoizedState,It&&Nn!==null&&o.mode&1&&!(o.flags&128)){for(s=Nn;s;)s=Y(s);return ys(),o.flags|=98560,o}if(g!==null&&g.dehydrated!==null){if(g=go(o),s===null){if(!g)throw Error(a(318));if(!ie)throw Error(a(344));if(s=o.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));it(s,o)}else ys(),!(o.flags&128)&&(o.memoizedState=null),o.flags|=4;return pn(o),null}return oi!==null&&(Qu(oi),oi=null),o.flags&128?(o.lanes=f,o):(g=g!==null,f=!1,s===null?go(o):f=s.memoizedState!==null,g&&!f&&(o.child.flags|=8192,o.mode&1&&(s===null||Dt.current&1?Qt===0&&(Qt=3):$u())),o.updateQueue!==null&&(o.flags|=4),pn(o),null);case 4:return Ss(),To(s,o),s===null&&Fe(o.stateNode.containerInfo),pn(o),null;case 10:return cu(o.type._context),pn(o),null;case 17:return An(o.type)&&Ba(),pn(o),null;case 19:if(nt(Dt),M=o.memoizedState,M===null)return pn(o),null;if(g=(o.flags&128)!==0,T=M.rendering,T===null)if(g)Eo(M,!1);else{if(Qt!==0||s!==null&&s.flags&128)for(s=o.child;s!==null;){if(T=nl(s),T!==null){for(o.flags|=128,Eo(M,!1),s=T.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),o.subtreeFlags=0,s=f,g=o.child;g!==null;)f=g,M=s,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=M,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,M=T.dependencies,f.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),g=g.sibling;return pt(Dt,Dt.current&1|2),o.child}s=s.sibling}M.tail!==null&&rn()>Yu&&(o.flags|=128,g=!0,Eo(M,!1),o.lanes=4194304)}else{if(!g)if(s=nl(T),s!==null){if(o.flags|=128,g=!0,s=s.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),Eo(M,!0),M.tail===null&&M.tailMode==="hidden"&&!T.alternate&&!It)return pn(o),null}else 2*rn()-M.renderingStartTime>Yu&&f!==1073741824&&(o.flags|=128,g=!0,Eo(M,!1),o.lanes=4194304);M.isBackwards?(T.sibling=o.child,o.child=T):(s=M.last,s!==null?s.sibling=T:o.child=T,M.last=T)}return M.tail!==null?(o=M.tail,M.rendering=o,M.tail=o.sibling,M.renderingStartTime=rn(),o.sibling=null,s=Dt.current,pt(Dt,g?s&1|2:s&1),o):(pn(o),null);case 22:case 23:return Ku(),g=o.memoizedState!==null,s!==null&&s.memoizedState!==null!==g&&(o.flags|=8192),g&&o.mode&1?On&1073741824&&(pn(o),Je&&o.subtreeFlags&6&&(o.flags|=8192)):pn(o),null;case 24:return null;case 25:return null}throw Error(a(156,o.tag))}var A_=c.ReactCurrentOwner,Fn=!1;function xn(s,o,f,g){o.child=s===null?Xd(o,null,f,g):xs(o,s.child,f,g)}function _p(s,o,f,g,M){f=f.render;var T=o.ref;return gs(o,M),g=bu(s,o,f,g,T,M),f=Tu(),s!==null&&!Fn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~M,Fi(s,o,M)):(It&&f&&pu(o),o.flags|=1,xn(s,o,g,M),o.child)}function yp(s,o,f,g,M){if(s===null){var T=f.type;return typeof T=="function"&&!eh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(o.tag=15,o.type=T,xp(s,o,T,g,M)):(s=Il(f.type,null,g,o,o.mode,M),s.ref=o.ref,s.return=o,o.child=s)}if(T=s.child,!(s.lanes&M)){var z=T.memoizedProps;if(f=f.compare,f=f!==null?f:Ya,f(z,g)&&s.ref===o.ref)return Fi(s,o,M)}return o.flags|=1,s=ar(T,g),s.ref=o.ref,s.return=o,o.child=s}function xp(s,o,f,g,M){if(s!==null&&Ya(s.memoizedProps,g)&&s.ref===o.ref)if(Fn=!1,(s.lanes&M)!==0)s.flags&131072&&(Fn=!0);else return o.lanes=s.lanes,Fi(s,o,M);return Ru(s,o,f,g,M)}function Mp(s,o,f){var g=o.pendingProps,M=g.children,T=s!==null?s.memoizedState:null;if(g.mode==="hidden")if(!(o.mode&1))o.memoizedState={baseLanes:0,cachePool:null},pt(bs,On),On|=f;else if(f&1073741824)o.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,pt(bs,On),On|=g;else return s=T!==null?T.baseLanes|f:f,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:s,cachePool:null},o.updateQueue=null,pt(bs,On),On|=s,null;else T!==null?(g=T.baseLanes|f,o.memoizedState=null):g=f,pt(bs,On),On|=g;return xn(s,o,M,f),o.child}function Sp(s,o){var f=o.ref;(s===null&&f!==null||s!==null&&s.ref!==f)&&(o.flags|=512,o.flags|=2097152)}function Ru(s,o,f,g,M){var T=An(f)?Pi:wt.current;return T=Li(o,T),gs(o,M),f=bu(s,o,f,g,T,M),g=Tu(),s!==null&&!Fn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~M,Fi(s,o,M)):(It&&g&&pu(o),o.flags|=1,xn(s,o,f,M),o.child)}function wp(s,o,f,g,M){if(An(f)){var T=!0;Va(o)}else T=!1;if(gs(o,M),o.stateNode===null)s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),Od(o,f,g),du(o,f,g,M),g=!0;else if(s===null){var z=o.stateNode,U=o.memoizedProps;z.props=U;var ne=z.context,ve=f.contextType;typeof ve=="object"&&ve!==null?ve=qn(ve):(ve=An(f)?Pi:wt.current,ve=Li(o,ve));var Le=f.getDerivedStateFromProps,$e=typeof Le=="function"||typeof z.getSnapshotBeforeUpdate=="function";$e||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(U!==g||ne!==ve)&&kd(o,z,g,ve),tr=!1;var Xe=o.memoizedState;z.state=Xe,Qa(o,g,z,M),ne=o.memoizedState,U!==g||Xe!==ne||nn.current||tr?(typeof Le=="function"&&(fu(o,f,Le,g),ne=o.memoizedState),(U=tr||Fd(o,f,U,g,Xe,ne,ve))?($e||typeof z.UNSAFE_componentWillMount!="function"&&typeof z.componentWillMount!="function"||(typeof z.componentWillMount=="function"&&z.componentWillMount(),typeof z.UNSAFE_componentWillMount=="function"&&z.UNSAFE_componentWillMount()),typeof z.componentDidMount=="function"&&(o.flags|=4194308)):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=g,o.memoizedState=ne),z.props=g,z.state=ne,z.context=ve,g=U):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),g=!1)}else{z=o.stateNode,Id(s,o),U=o.memoizedProps,ve=o.type===o.elementType?U:si(o.type,U),z.props=ve,$e=o.pendingProps,Xe=z.context,ne=f.contextType,typeof ne=="object"&&ne!==null?ne=qn(ne):(ne=An(f)?Pi:wt.current,ne=Li(o,ne));var Ct=f.getDerivedStateFromProps;(Le=typeof Ct=="function"||typeof z.getSnapshotBeforeUpdate=="function")||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(U!==$e||Xe!==ne)&&kd(o,z,g,ne),tr=!1,Xe=o.memoizedState,z.state=Xe,Qa(o,g,z,M);var Be=o.memoizedState;U!==$e||Xe!==Be||nn.current||tr?(typeof Ct=="function"&&(fu(o,f,Ct,g),Be=o.memoizedState),(ve=tr||Fd(o,f,ve,g,Xe,Be,ne)||!1)?(Le||typeof z.UNSAFE_componentWillUpdate!="function"&&typeof z.componentWillUpdate!="function"||(typeof z.componentWillUpdate=="function"&&z.componentWillUpdate(g,Be,ne),typeof z.UNSAFE_componentWillUpdate=="function"&&z.UNSAFE_componentWillUpdate(g,Be,ne)),typeof z.componentDidUpdate=="function"&&(o.flags|=4),typeof z.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof z.componentDidUpdate!="function"||U===s.memoizedProps&&Xe===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||U===s.memoizedProps&&Xe===s.memoizedState||(o.flags|=1024),o.memoizedProps=g,o.memoizedState=Be),z.props=g,z.state=Be,z.context=ne,g=ve):(typeof z.componentDidUpdate!="function"||U===s.memoizedProps&&Xe===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||U===s.memoizedProps&&Xe===s.memoizedState||(o.flags|=1024),g=!1)}return Iu(s,o,f,g,T,M)}function Iu(s,o,f,g,M,T){Sp(s,o);var z=(o.flags&128)!==0;if(!g&&!z)return M&&Ad(o,f,!1),Fi(s,o,T);g=o.stateNode,A_.current=o;var U=z&&typeof f.getDerivedStateFromError!="function"?null:g.render();return o.flags|=1,s!==null&&z?(o.child=xs(o,s.child,null,T),o.child=xs(o,null,U,T)):xn(s,o,U,T),o.memoizedState=g.state,M&&Ad(o,f,!0),o.child}function bp(s){var o=s.stateNode;o.pendingContext?Td(s,o.pendingContext,o.pendingContext!==o.context):o.context&&Td(s,o.context,!1),yu(s,o.containerInfo)}function Tp(s,o,f,g,M){return ys(),_u(M),o.flags|=256,xn(s,o,f,g),o.child}var fl={dehydrated:null,treeContext:null,retryLane:0};function dl(s){return{baseLanes:s,cachePool:null}}function Ep(s,o,f){var g=o.pendingProps,M=Dt.current,T=!1,z=(o.flags&128)!==0,U;if((U=z)||(U=s!==null&&s.memoizedState===null?!1:(M&2)!==0),U?(T=!0,o.flags&=-129):(s===null||s.memoizedState!==null)&&(M|=1),pt(Dt,M&1),s===null)return vu(o),s=o.memoizedState,s!==null&&(s=s.dehydrated,s!==null)?(o.mode&1?ho(s)?o.lanes=8:o.lanes=1073741824:o.lanes=1,null):(M=g.children,s=g.fallback,T?(g=o.mode,T=o.child,M={mode:"hidden",children:M},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=M):T=Dl(M,g,0,null),s=Nr(s,g,f,null),T.return=o,s.return=o,T.sibling=s,o.child=T,o.child.memoizedState=dl(f),o.memoizedState=fl,s):Du(o,M));if(M=s.memoizedState,M!==null){if(U=M.dehydrated,U!==null){if(z)return o.flags&256?(o.flags&=-257,pl(s,o,f,Error(a(422)))):o.memoizedState!==null?(o.child=s.child,o.flags|=128,null):(T=g.fallback,M=o.mode,g=Dl({mode:"visible",children:g.children},M,0,null),T=Nr(T,M,f,null),T.flags|=2,g.return=o,T.return=o,g.sibling=T,o.child=g,o.mode&1&&xs(o,s.child,null,f),o.child.memoizedState=dl(f),o.memoizedState=fl,T);if(!(o.mode&1))o=pl(s,o,f,null);else if(ho(U))o=pl(s,o,f,Error(a(419)));else if(g=(f&s.childLanes)!==0,Fn||g){if(g=Zt,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|f)?0:T,g!==0&&g!==M.retryLane&&(M.retryLane=g,Qn(s,g,-1))}$u(),o=pl(s,o,f,Error(a(421)))}else Ua(U)?(o.flags|=128,o.child=s.child,o=B_.bind(null,s),I(U,o),o=null):(f=M.treeContext,ie&&(Nn=ae(U),zn=o,It=!0,oi=null,mo=!1,f!==null&&(Yn[Zn++]=Di,Yn[Zn++]=zi,Yn[Zn++]=Ar,Di=f.id,zi=f.overflow,Ar=o)),o=Du(o,o.pendingProps.children),o.flags|=4096);return o}return T?(g=Cp(s,o,g.children,g.fallback,f),T=o.child,M=s.child.memoizedState,T.memoizedState=M===null?dl(f):{baseLanes:M.baseLanes|f,cachePool:null},T.childLanes=s.childLanes&~f,o.memoizedState=fl,g):(f=Ap(s,o,g.children,f),o.memoizedState=null,f)}return T?(g=Cp(s,o,g.children,g.fallback,f),T=o.child,M=s.child.memoizedState,T.memoizedState=M===null?dl(f):{baseLanes:M.baseLanes|f,cachePool:null},T.childLanes=s.childLanes&~f,o.memoizedState=fl,g):(f=Ap(s,o,g.children,f),o.memoizedState=null,f)}function Du(s,o){return o=Dl({mode:"visible",children:o},s.mode,0,null),o.return=s,s.child=o}function Ap(s,o,f,g){var M=s.child;return s=M.sibling,f=ar(M,{mode:"visible",children:f}),!(o.mode&1)&&(f.lanes=g),f.return=o,f.sibling=null,s!==null&&(g=o.deletions,g===null?(o.deletions=[s],o.flags|=16):g.push(s)),o.child=f}function Cp(s,o,f,g,M){var T=o.mode;s=s.child;var z=s.sibling,U={mode:"hidden",children:f};return!(T&1)&&o.child!==s?(f=o.child,f.childLanes=0,f.pendingProps=U,o.deletions=null):(f=ar(s,U),f.subtreeFlags=s.subtreeFlags&14680064),z!==null?g=ar(z,g):(g=Nr(g,T,M,null),g.flags|=2),g.return=o,f.return=o,f.sibling=g,o.child=f,g}function pl(s,o,f,g){return g!==null&&_u(g),xs(o,s.child,null,f),s=Du(o,o.pendingProps.children),s.flags|=2,o.memoizedState=null,s}function Pp(s,o,f){s.lanes|=o;var g=s.alternate;g!==null&&(g.lanes|=o),uu(s.return,o,f)}function zu(s,o,f,g,M){var T=s.memoizedState;T===null?s.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:M}:(T.isBackwards=o,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=M)}function Lp(s,o,f){var g=o.pendingProps,M=g.revealOrder,T=g.tail;if(xn(s,o,g.children,f),g=Dt.current,g&2)g=g&1|2,o.flags|=128;else{if(s!==null&&s.flags&128)e:for(s=o.child;s!==null;){if(s.tag===13)s.memoizedState!==null&&Pp(s,f,o);else if(s.tag===19)Pp(s,f,o);else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===o)break e;for(;s.sibling===null;){if(s.return===null||s.return===o)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}g&=1}if(pt(Dt,g),!(o.mode&1))o.memoizedState=null;else switch(M){case"forwards":for(f=o.child,M=null;f!==null;)s=f.alternate,s!==null&&nl(s)===null&&(M=f),f=f.sibling;f=M,f===null?(M=o.child,o.child=null):(M=f.sibling,f.sibling=null),zu(o,!1,M,f,T);break;case"backwards":for(f=null,M=o.child,o.child=null;M!==null;){if(s=M.alternate,s!==null&&nl(s)===null){o.child=M;break}s=M.sibling,M.sibling=f,f=M,M=s}zu(o,!0,f,null,T);break;case"together":zu(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function Fi(s,o,f){if(s!==null&&(o.dependencies=s.dependencies),Ts|=o.lanes,!(f&o.childLanes))return null;if(s!==null&&o.child!==s.child)throw Error(a(153));if(o.child!==null){for(s=o.child,f=ar(s,s.pendingProps),o.child=f,f.return=o;s.sibling!==null;)s=s.sibling,f=f.sibling=ar(s,s.pendingProps),f.return=o;f.sibling=null}return o.child}function C_(s,o,f){switch(o.tag){case 3:bp(o),ys();break;case 5:qd(o);break;case 1:An(o.type)&&Va(o);break;case 4:yu(o,o.stateNode.containerInfo);break;case 10:Rd(o,o.type._context,o.memoizedProps.value);break;case 13:var g=o.memoizedState;if(g!==null)return g.dehydrated!==null?(pt(Dt,Dt.current&1),o.flags|=128,null):f&o.child.childLanes?Ep(s,o,f):(pt(Dt,Dt.current&1),s=Fi(s,o,f),s!==null?s.sibling:null);pt(Dt,Dt.current&1);break;case 19:if(g=(f&o.childLanes)!==0,s.flags&128){if(g)return Lp(s,o,f);o.flags|=128}var M=o.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),pt(Dt,Dt.current),g)break;return null;case 22:case 23:return o.lanes=0,Mp(s,o,f)}return Fi(s,o,f)}function P_(s,o){switch(mu(o),o.tag){case 1:return An(o.type)&&Ba(),s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 3:return Ss(),nt(nn),nt(wt),Su(),s=o.flags,s&65536&&!(s&128)?(o.flags=s&-65537|128,o):null;case 5:return xu(o),null;case 13:if(nt(Dt),s=o.memoizedState,s!==null&&s.dehydrated!==null){if(o.alternate===null)throw Error(a(340));ys()}return s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 19:return nt(Dt),null;case 4:return Ss(),null;case 10:return cu(o.type._context),null;case 22:case 23:return Ku(),null;case 24:return null;default:return null}}var ml=!1,Lr=!1,L_=typeof WeakSet=="function"?WeakSet:Set,be=null;function gl(s,o){var f=s.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){Ln(s,o,g)}else f.current=null}function Nu(s,o,f){try{f()}catch(g){Ln(s,o,g)}}var Rp=!1;function R_(s,o){for(J(s.containerInfo),be=o;be!==null;)if(s=be,o=s.child,(s.subtreeFlags&1028)!==0&&o!==null)o.return=s,be=o;else for(;be!==null;){s=be;try{var f=s.alternate;if(s.flags&1024)switch(s.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,M=f.memoizedState,T=s.stateNode,z=T.getSnapshotBeforeUpdate(s.elementType===s.type?g:si(s.type,g),M);T.__reactInternalSnapshotBeforeUpdate=z}break;case 3:Je&&Ce(s.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(U){Ln(s,s.return,U)}if(o=s.sibling,o!==null){o.return=s.return,be=o;break}be=s.return}return f=Rp,Rp=!1,f}function Rr(s,o,f){var g=o.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var M=g=g.next;do{if((M.tag&s)===s){var T=M.destroy;M.destroy=void 0,T!==void 0&&Nu(o,f,T)}M=M.next}while(M!==g)}}function Ao(s,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var f=o=o.next;do{if((f.tag&s)===s){var g=f.create;f.destroy=g()}f=f.next}while(f!==o)}}function Fu(s){var o=s.ref;if(o!==null){var f=s.stateNode;switch(s.tag){case 5:s=oe(f);break;default:s=f}typeof o=="function"?o(s):o.current=s}}function Ip(s,o,f){if(vi&&typeof vi.onCommitFiberUnmount=="function")try{vi.onCommitFiberUnmount(Xa,o)}catch{}switch(o.tag){case 0:case 11:case 14:case 15:if(s=o.updateQueue,s!==null&&(s=s.lastEffect,s!==null)){var g=s=s.next;do{var M=g,T=M.destroy;M=M.tag,T!==void 0&&(M&2||M&4)&&Nu(o,f,T),g=g.next}while(g!==s)}break;case 1:if(gl(o,f),s=o.stateNode,typeof s.componentWillUnmount=="function")try{s.props=o.memoizedProps,s.state=o.memoizedState,s.componentWillUnmount()}catch(z){Ln(o,f,z)}break;case 5:gl(o,f);break;case 4:Je?kp(s,o,f):le&&le&&(o=o.stateNode.containerInfo,f=mt(o),gi(o,f))}}function Dp(s,o,f){for(var g=o;;)if(Ip(s,g,f),g.child===null||Je&&g.tag===4){if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function zp(s){var o=s.alternate;o!==null&&(s.alternate=null,zp(o)),s.child=null,s.deletions=null,s.sibling=null,s.tag===5&&(o=s.stateNode,o!==null&&Qe(o)),s.stateNode=null,s.return=null,s.dependencies=null,s.memoizedProps=null,s.memoizedState=null,s.pendingProps=null,s.stateNode=null,s.updateQueue=null}function Np(s){return s.tag===5||s.tag===3||s.tag===4}function Fp(s){e:for(;;){for(;s.sibling===null;){if(s.return===null||Np(s.return))return null;s=s.return}for(s.sibling.return=s.return,s=s.sibling;s.tag!==5&&s.tag!==6&&s.tag!==18;){if(s.flags&2||s.child===null||s.tag===4)continue e;s.child.return=s,s=s.child}if(!(s.flags&2))return s.stateNode}}function Op(s){if(Je){e:{for(var o=s.return;o!==null;){if(Np(o))break e;o=o.return}throw Error(a(160))}var f=o;switch(f.tag){case 5:o=f.stateNode,f.flags&32&&(Et(o),f.flags&=-33),f=Fp(s),ku(s,f,o);break;case 3:case 4:o=f.stateNode.containerInfo,f=Fp(s),Ou(s,f,o);break;default:throw Error(a(161))}}}function Ou(s,o,f){var g=s.tag;if(g===5||g===6)s=s.stateNode,o?Ye(f,s,o):Ae(f,s);else if(g!==4&&(s=s.child,s!==null))for(Ou(s,o,f),s=s.sibling;s!==null;)Ou(s,o,f),s=s.sibling}function ku(s,o,f){var g=s.tag;if(g===5||g===6)s=s.stateNode,o?Oe(f,s,o):je(f,s);else if(g!==4&&(s=s.child,s!==null))for(ku(s,o,f),s=s.sibling;s!==null;)ku(s,o,f),s=s.sibling}function kp(s,o,f){for(var g=o,M=!1,T,z;;){if(!M){M=g.return;e:for(;;){if(M===null)throw Error(a(160));switch(T=M.stateNode,M.tag){case 5:z=!1;break e;case 3:T=T.containerInfo,z=!0;break e;case 4:T=T.containerInfo,z=!0;break e}M=M.return}M=!0}if(g.tag===5||g.tag===6)Dp(s,g,f),z?dt(T,g.stateNode):He(T,g.stateNode);else if(g.tag===18)z?Ft(T,g.stateNode):ht(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,z=!0,g.child.return=g,g=g.child;continue}}else if(Ip(s,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return,g.tag===4&&(M=!1)}g.sibling.return=g.return,g=g.sibling}}function Uu(s,o){if(Je){switch(o.tag){case 0:case 11:case 14:case 15:Rr(3,o,o.return),Ao(3,o),Rr(5,o,o.return);return;case 1:return;case 5:var f=o.stateNode;if(f!=null){var g=o.memoizedProps;s=s!==null?s.memoizedProps:g;var M=o.type,T=o.updateQueue;o.updateQueue=null,T!==null&&Ze(f,T,M,s,g,o)}return;case 6:if(o.stateNode===null)throw Error(a(162));f=o.memoizedProps,ce(o.stateNode,s!==null?s.memoizedProps:f,f);return;case 3:ie&&s!==null&&s.memoizedState.isDehydrated&&ft(o.stateNode.containerInfo);return;case 12:return;case 13:vl(o);return;case 19:vl(o);return;case 17:return}throw Error(a(163))}switch(o.tag){case 0:case 11:case 14:case 15:Rr(3,o,o.return),Ao(3,o),Rr(5,o,o.return);return;case 12:return;case 13:vl(o);return;case 19:vl(o);return;case 3:ie&&s!==null&&s.memoizedState.isDehydrated&&ft(o.stateNode.containerInfo);break;case 22:case 23:return}e:if(le){switch(o.tag){case 1:case 5:case 6:break e;case 3:case 4:o=o.stateNode,gi(o.containerInfo,o.pendingChildren);break e}throw Error(a(163))}}function vl(s){var o=s.updateQueue;if(o!==null){s.updateQueue=null;var f=s.stateNode;f===null&&(f=s.stateNode=new L_),o.forEach(function(g){var M=V_.bind(null,s,g);f.has(g)||(f.add(g),g.then(M,M))})}}function I_(s,o){for(be=o;be!==null;){o=be;var f=o.deletions;if(f!==null)for(var g=0;g<f.length;g++){var M=f[g];try{var T=s;Je?kp(T,M,o):Dp(T,M,o);var z=M.alternate;z!==null&&(z.return=null),M.return=null}catch(ke){Ln(M,o,ke)}}if(f=o.child,o.subtreeFlags&12854&&f!==null)f.return=o,be=f;else for(;be!==null;){o=be;try{var U=o.flags;if(U&32&&Je&&Et(o.stateNode),U&512){var ne=o.alternate;if(ne!==null){var ve=ne.ref;ve!==null&&(typeof ve=="function"?ve(null):ve.current=null)}}if(U&8192)switch(o.tag){case 13:if(o.memoizedState!==null){var Le=o.alternate;(Le===null||Le.memoizedState===null)&&(qu=rn())}break;case 22:var $e=o.memoizedState!==null,Xe=o.alternate,Ct=Xe!==null&&Xe.memoizedState!==null;if(f=o,Je){e:if(g=f,M=$e,T=null,Je)for(var Be=g;;){if(Be.tag===5){if(T===null){T=Be;var mn=Be.stateNode;M?Yt(mn):re(Be.stateNode,Be.memoizedProps)}}else if(Be.tag===6){if(T===null){var $n=Be.stateNode;M?B($n):pe($n,Be.memoizedProps)}}else if((Be.tag!==22&&Be.tag!==23||Be.memoizedState===null||Be===g)&&Be.child!==null){Be.child.return=Be,Be=Be.child;continue}if(Be===g)break;for(;Be.sibling===null;){if(Be.return===null||Be.return===g)break e;T===Be&&(T=null),Be=Be.return}T===Be&&(T=null),Be.sibling.return=Be.return,Be=Be.sibling}}if($e&&!Ct&&f.mode&1){be=f;for(var Z=f.child;Z!==null;){for(f=be=Z;be!==null;){g=be;var G=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Rr(4,g,g.return);break;case 1:gl(g,g.return);var $=g.stateNode;if(typeof $.componentWillUnmount=="function"){var Ee=g.return;try{$.props=g.memoizedProps,$.state=g.memoizedState,$.componentWillUnmount()}catch(ke){Ln(g,Ee,ke)}}break;case 5:gl(g,g.return);break;case 22:if(g.memoizedState!==null){Vp(f);continue}}G!==null?(G.return=g,be=G):Vp(f)}Z=Z.sibling}}}switch(U&4102){case 2:Op(o),o.flags&=-3;break;case 6:Op(o),o.flags&=-3,Uu(o.alternate,o);break;case 4096:o.flags&=-4097;break;case 4100:o.flags&=-4097,Uu(o.alternate,o);break;case 4:Uu(o.alternate,o)}}catch(ke){Ln(o,o.return,ke)}if(f=o.sibling,f!==null){f.return=o.return,be=f;break}be=o.return}}}function D_(s,o,f){be=s,Up(s)}function Up(s,o,f){for(var g=(s.mode&1)!==0;be!==null;){var M=be,T=M.child;if(M.tag===22&&g){var z=M.memoizedState!==null||ml;if(!z){var U=M.alternate,ne=U!==null&&U.memoizedState!==null||Lr;U=ml;var ve=Lr;if(ml=z,(Lr=ne)&&!ve)for(be=M;be!==null;)z=be,ne=z.child,z.tag===22&&z.memoizedState!==null?Gp(M):ne!==null?(ne.return=z,be=ne):Gp(M);for(;T!==null;)be=T,Up(T),T=T.sibling;be=M,ml=U,Lr=ve}Bp(s)}else M.subtreeFlags&8772&&T!==null?(T.return=M,be=T):Bp(s)}}function Bp(s){for(;be!==null;){var o=be;if(o.flags&8772){var f=o.alternate;try{if(o.flags&8772)switch(o.tag){case 0:case 11:case 15:Lr||Ao(5,o);break;case 1:var g=o.stateNode;if(o.flags&4&&!Lr)if(f===null)g.componentDidMount();else{var M=o.elementType===o.type?f.memoizedProps:si(o.type,f.memoizedProps);g.componentDidUpdate(M,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=o.updateQueue;T!==null&&zd(o,T,g);break;case 3:var z=o.updateQueue;if(z!==null){if(f=null,o.child!==null)switch(o.child.tag){case 5:f=oe(o.child.stateNode);break;case 1:f=o.child.stateNode}zd(o,z,f)}break;case 5:var U=o.stateNode;f===null&&o.flags&4&&Ge(U,o.type,o.memoizedProps,o);break;case 6:break;case 4:break;case 12:break;case 13:if(ie&&o.memoizedState===null){var ne=o.alternate;if(ne!==null){var ve=ne.memoizedState;if(ve!==null){var Le=ve.dehydrated;Le!==null&&ut(Le)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}Lr||o.flags&512&&Fu(o)}catch($e){Ln(o,o.return,$e)}}if(o===s){be=null;break}if(f=o.sibling,f!==null){f.return=o.return,be=f;break}be=o.return}}function Vp(s){for(;be!==null;){var o=be;if(o===s){be=null;break}var f=o.sibling;if(f!==null){f.return=o.return,be=f;break}be=o.return}}function Gp(s){for(;be!==null;){var o=be;try{switch(o.tag){case 0:case 11:case 15:var f=o.return;try{Ao(4,o)}catch(ne){Ln(o,f,ne)}break;case 1:var g=o.stateNode;if(typeof g.componentDidMount=="function"){var M=o.return;try{g.componentDidMount()}catch(ne){Ln(o,M,ne)}}var T=o.return;try{Fu(o)}catch(ne){Ln(o,T,ne)}break;case 5:var z=o.return;try{Fu(o)}catch(ne){Ln(o,z,ne)}}}catch(ne){Ln(o,o.return,ne)}if(o===s){be=null;break}var U=o.sibling;if(U!==null){U.return=o.return,be=U;break}be=o.return}}var _l=0,yl=1,xl=2,Ml=3,Sl=4;if(typeof Symbol=="function"&&Symbol.for){var Co=Symbol.for;_l=Co("selector.component"),yl=Co("selector.has_pseudo_class"),xl=Co("selector.role"),Ml=Co("selector.test_id"),Sl=Co("selector.text")}function Bu(s){var o=xe(s);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(a(364));return o}if(s=St(s),s===null)throw Error(a(362));return s.stateNode.current}function Vu(s,o){switch(o.$$typeof){case _l:if(s.type===o.value)return!0;break;case yl:e:{o=o.value,s=[s,0];for(var f=0;f<s.length;){var g=s[f++],M=s[f++],T=o[M];if(g.tag!==5||!te(g)){for(;T!=null&&Vu(g,T);)M++,T=o[M];if(M===o.length){o=!0;break e}else for(g=g.child;g!==null;)s.push(g,M),g=g.sibling}}o=!1}return o;case xl:if(s.tag===5&&me(s.stateNode,o.value))return!0;break;case Sl:if((s.tag===5||s.tag===6)&&(s=R(s),s!==null&&0<=s.indexOf(o.value)))return!0;break;case Ml:if(s.tag===5&&(s=s.memoizedProps["data-testname"],typeof s=="string"&&s.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Gu(s){switch(s.$$typeof){case _l:return"<"+(N(s.value)||"Unknown")+">";case yl:return":has("+(Gu(s)||"")+")";case xl:return'[role="'+s.value+'"]';case Sl:return'"'+s.value+'"';case Ml:return'[data-testname="'+s.value+'"]';default:throw Error(a(365))}}function Hp(s,o){var f=[];s=[s,0];for(var g=0;g<s.length;){var M=s[g++],T=s[g++],z=o[T];if(M.tag!==5||!te(M)){for(;z!=null&&Vu(M,z);)T++,z=o[T];if(T===o.length)f.push(M);else for(M=M.child;M!==null;)s.push(M,T),M=M.sibling}}return f}function Hu(s,o){if(!Mt)throw Error(a(363));s=Bu(s),s=Hp(s,o),o=[],s=Array.from(s);for(var f=0;f<s.length;){var g=s[f++];if(g.tag===5)te(g)||o.push(g.stateNode);else for(g=g.child;g!==null;)s.push(g),g=g.sibling}return o}var z_=Math.ceil,wl=c.ReactCurrentDispatcher,Wu=c.ReactCurrentOwner,Gt=c.ReactCurrentBatchConfig,ct=0,Zt=null,Jt=null,cn=0,On=0,bs=Wn(0),Qt=0,Po=null,Ts=0,bl=0,Xu=0,Lo=null,Cn=null,qu=0,Yu=1/0;function Es(){Yu=rn()+500}var Tl=!1,Zu=null,ir=null,El=!1,rr=null,Al=0,Ro=0,Ju=null,Cl=-1,Pl=0;function Mn(){return ct&6?rn():Cl!==-1?Cl:Cl=rn()}function sr(s){return s.mode&1?ct&2&&cn!==0?cn&-cn:g_.transition!==null?(Pl===0&&(s=Ga,Ga<<=1,!(Ga&4194240)&&(Ga=64),Pl=s),Pl):(s=vt,s!==0?s:we()):1}function Qn(s,o,f){if(50<Ro)throw Ro=0,Ju=null,Error(a(185));var g=Ll(s,o);return g===null?null:(po(g,o,f),(!(ct&2)||g!==Zt)&&(g===Zt&&(!(ct&2)&&(bl|=o),Qt===4&&or(g,cn)),Pn(g,f),o===1&&ct===0&&!(s.mode&1)&&(Es(),qa&&yi())),g)}function Ll(s,o){s.lanes|=o;var f=s.alternate;for(f!==null&&(f.lanes|=o),f=s,s=s.return;s!==null;)s.childLanes|=o,f=s.alternate,f!==null&&(f.childLanes|=o),f=s,s=s.return;return f.tag===3?f.stateNode:null}function Pn(s,o){var f=s.callbackNode;a_(s,o);var g=Wa(s,s===Zt?cn:0);if(g===0)f!==null&&Pd(f),s.callbackNode=null,s.callbackPriority=0;else if(o=g&-g,s.callbackPriority!==o){if(f!=null&&Pd(f),o===1)s.tag===0?m_(Xp.bind(null,s)):Ld(Xp.bind(null,s)),qe?Ve(function(){ct===0&&yi()}):iu(ru,yi),f=null;else{switch(Cd(g)){case 1:f=ru;break;case 4:f=h_;break;case 16:f=su;break;case 536870912:f=f_;break;default:f=su}f=em(f,Wp.bind(null,s))}s.callbackPriority=o,s.callbackNode=f}}function Wp(s,o){if(Cl=-1,Pl=0,ct&6)throw Error(a(327));var f=s.callbackNode;if(zr()&&s.callbackNode!==f)return null;var g=Wa(s,s===Zt?cn:0);if(g===0)return null;if(g&30||g&s.expiredLanes||o)o=Rl(s,g);else{o=g;var M=ct;ct|=2;var T=Zp();(Zt!==s||cn!==o)&&(Es(),Ir(s,o));do try{O_();break}catch(U){Yp(s,U)}while(1);lu(),wl.current=T,ct=M,Jt!==null?o=0:(Zt=null,cn=0,o=Qt)}if(o!==0){if(o===2&&(M=eu(s),M!==0&&(g=M,o=ju(s,M))),o===1)throw f=Po,Ir(s,0),or(s,g),Pn(s,rn()),f;if(o===6)or(s,g);else{if(M=s.current.alternate,!(g&30)&&!N_(M)&&(o=Rl(s,g),o===2&&(T=eu(s),T!==0&&(g=T,o=ju(s,T))),o===1))throw f=Po,Ir(s,0),or(s,g),Pn(s,rn()),f;switch(s.finishedWork=M,s.finishedLanes=g,o){case 0:case 1:throw Error(a(345));case 2:Dr(s,Cn);break;case 3:if(or(s,g),(g&130023424)===g&&(o=qu+500-rn(),10<o)){if(Wa(s,0)!==0)break;if(M=s.suspendedLanes,(M&g)!==g){Mn(),s.pingedLanes|=s.suspendedLanes&M;break}s.timeoutHandle=De(Dr.bind(null,s,Cn),o);break}Dr(s,Cn);break;case 4:if(or(s,g),(g&4194240)===g)break;for(o=s.eventTimes,M=-1;0<g;){var z=31-ri(g);T=1<<z,z=o[z],z>M&&(M=z),g&=~T}if(g=M,g=rn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*z_(g/1960))-g,10<g){s.timeoutHandle=De(Dr.bind(null,s,Cn),g);break}Dr(s,Cn);break;case 5:Dr(s,Cn);break;default:throw Error(a(329))}}}return Pn(s,rn()),s.callbackNode===f?Wp.bind(null,s):null}function ju(s,o){var f=Lo;return s.current.memoizedState.isDehydrated&&(Ir(s,o).flags|=256),s=Rl(s,o),s!==2&&(o=Cn,Cn=f,o!==null&&Qu(o)),s}function Qu(s){Cn===null?Cn=s:Cn.push.apply(Cn,s)}function N_(s){for(var o=s;;){if(o.flags&16384){var f=o.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var M=f[g],T=M.getSnapshot;M=M.value;try{if(!_i(T(),M))return!1}catch{return!1}}}if(f=o.child,o.subtreeFlags&16384&&f!==null)f.return=o,o=f;else{if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function or(s,o){for(o&=~Xu,o&=~bl,s.suspendedLanes|=o,s.pingedLanes&=~o,s=s.expirationTimes;0<o;){var f=31-ri(o),g=1<<f;s[f]=-1,o&=~g}}function Xp(s){if(ct&6)throw Error(a(327));zr();var o=Wa(s,0);if(!(o&1))return Pn(s,rn()),null;var f=Rl(s,o);if(s.tag!==0&&f===2){var g=eu(s);g!==0&&(o=g,f=ju(s,g))}if(f===1)throw f=Po,Ir(s,0),or(s,o),Pn(s,rn()),f;if(f===6)throw Error(a(345));return s.finishedWork=s.current.alternate,s.finishedLanes=o,Dr(s,Cn),Pn(s,rn()),null}function qp(s){rr!==null&&rr.tag===0&&!(ct&6)&&zr();var o=ct;ct|=1;var f=Gt.transition,g=vt;try{if(Gt.transition=null,vt=1,s)return s()}finally{vt=g,Gt.transition=f,ct=o,!(ct&6)&&yi()}}function Ku(){On=bs.current,nt(bs)}function Ir(s,o){s.finishedWork=null,s.finishedLanes=0;var f=s.timeoutHandle;if(f!==Ne&&(s.timeoutHandle=Ne,ze(f)),Jt!==null)for(f=Jt.return;f!==null;){var g=f;switch(mu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Ba();break;case 3:Ss(),nt(nn),nt(wt),Su();break;case 5:xu(g);break;case 4:Ss();break;case 13:nt(Dt);break;case 19:nt(Dt);break;case 10:cu(g.type._context);break;case 22:case 23:Ku()}f=f.return}if(Zt=s,Jt=s=ar(s.current,null),cn=On=o,Qt=0,Po=null,Xu=bl=Ts=0,Cn=Lo=null,xi!==null){for(o=0;o<xi.length;o++)if(f=xi[o],g=f.interleaved,g!==null){f.interleaved=null;var M=g.next,T=f.pending;if(T!==null){var z=T.next;T.next=M,g.next=z}f.pending=g}xi=null}return s}function Yp(s,o){do{var f=Jt;try{if(lu(),il.current=cl,rl){for(var g=kt.memoizedState;g!==null;){var M=g.queue;M!==null&&(M.pending=null),g=g.next}rl=!1}if(ws=0,sn=fn=kt=null,xo=!1,Mo=0,Wu.current=null,f===null||f.return===null){Qt=1,Po=o,Jt=null;break}e:{var T=s,z=f.return,U=f,ne=o;if(o=cn,U.flags|=32768,ne!==null&&typeof ne=="object"&&typeof ne.then=="function"){var ve=ne,Le=U,$e=Le.tag;if(!(Le.mode&1)&&($e===0||$e===11||$e===15)){var Xe=Le.alternate;Xe?(Le.updateQueue=Xe.updateQueue,Le.memoizedState=Xe.memoizedState,Le.lanes=Xe.lanes):(Le.updateQueue=null,Le.memoizedState=null)}var Ct=pp(z);if(Ct!==null){Ct.flags&=-257,mp(Ct,z,U,T,o),Ct.mode&1&&dp(T,ve,o),o=Ct,ne=ve;var Be=o.updateQueue;if(Be===null){var mn=new Set;mn.add(ne),o.updateQueue=mn}else Be.add(ne);break e}else{if(!(o&1)){dp(T,ve,o),$u();break e}ne=Error(a(426))}}else if(It&&U.mode&1){var $n=pp(z);if($n!==null){!($n.flags&65536)&&($n.flags|=256),mp($n,z,U,T,o),_u(ne);break e}}T=ne,Qt!==4&&(Qt=2),Lo===null?Lo=[T]:Lo.push(T),ne=Pu(ne,U),U=z;do{switch(U.tag){case 3:U.flags|=65536,o&=-o,U.lanes|=o;var Z=hp(U,ne,o);Dd(U,Z);break e;case 1:T=ne;var G=U.type,$=U.stateNode;if(!(U.flags&128)&&(typeof G.getDerivedStateFromError=="function"||$!==null&&typeof $.componentDidCatch=="function"&&(ir===null||!ir.has($)))){U.flags|=65536,o&=-o,U.lanes|=o;var Ee=fp(U,T,o);Dd(U,Ee);break e}}U=U.return}while(U!==null)}jp(f)}catch(ke){o=ke,Jt===f&&f!==null&&(Jt=f=f.return);continue}break}while(1)}function Zp(){var s=wl.current;return wl.current=cl,s===null?cl:s}function $u(){(Qt===0||Qt===3||Qt===2)&&(Qt=4),Zt===null||!(Ts&268435455)&&!(bl&268435455)||or(Zt,cn)}function Rl(s,o){var f=ct;ct|=2;var g=Zp();Zt===s&&cn===o||Ir(s,o);do try{F_();break}catch(M){Yp(s,M)}while(1);if(lu(),ct=f,wl.current=g,Jt!==null)throw Error(a(261));return Zt=null,cn=0,Qt}function F_(){for(;Jt!==null;)Jp(Jt)}function O_(){for(;Jt!==null&&!c_();)Jp(Jt)}function Jp(s){var o=$p(s.alternate,s,On);s.memoizedProps=s.pendingProps,o===null?jp(s):Jt=o,Wu.current=null}function jp(s){var o=s;do{var f=o.alternate;if(s=o.return,o.flags&32768){if(f=P_(f,o),f!==null){f.flags&=32767,Jt=f;return}if(s!==null)s.flags|=32768,s.subtreeFlags=0,s.deletions=null;else{Qt=6,Jt=null;return}}else if(f=E_(f,o,On),f!==null){Jt=f;return}if(o=o.sibling,o!==null){Jt=o;return}Jt=o=s}while(o!==null);Qt===0&&(Qt=5)}function Dr(s,o){var f=vt,g=Gt.transition;try{Gt.transition=null,vt=1,k_(s,o,f)}finally{Gt.transition=g,vt=f}return null}function k_(s,o,f){do zr();while(rr!==null);if(ct&6)throw Error(a(327));var g=s.finishedWork,M=s.finishedLanes;if(g===null)return null;if(s.finishedWork=null,s.finishedLanes=0,g===s.current)throw Error(a(177));s.callbackNode=null,s.callbackPriority=0;var T=g.lanes|g.childLanes;if(l_(s,T),s===Zt&&(Jt=Zt=null,cn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||El||(El=!0,em(su,function(){return zr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=Gt.transition,Gt.transition=null;var z=vt;vt=1;var U=ct;ct|=4,Wu.current=null,R_(s,g),I_(s,g),j(s.containerInfo),s.current=g,D_(g),u_(),ct=U,vt=z,Gt.transition=T}else s.current=g;if(El&&(El=!1,rr=s,Al=M),T=s.pendingLanes,T===0&&(ir=null),d_(g.stateNode),Pn(s,rn()),o!==null)for(f=s.onRecoverableError,g=0;g<o.length;g++)f(o[g]);if(Tl)throw Tl=!1,s=Zu,Zu=null,s;return Al&1&&s.tag!==0&&zr(),T=s.pendingLanes,T&1?s===Ju?Ro++:(Ro=0,Ju=s):Ro=0,yi(),null}function zr(){if(rr!==null){var s=Cd(Al),o=Gt.transition,f=vt;try{if(Gt.transition=null,vt=16>s?16:s,rr===null)var g=!1;else{if(s=rr,rr=null,Al=0,ct&6)throw Error(a(331));var M=ct;for(ct|=4,be=s.current;be!==null;){var T=be,z=T.child;if(be.flags&16){var U=T.deletions;if(U!==null){for(var ne=0;ne<U.length;ne++){var ve=U[ne];for(be=ve;be!==null;){var Le=be;switch(Le.tag){case 0:case 11:case 15:Rr(8,Le,T)}var $e=Le.child;if($e!==null)$e.return=Le,be=$e;else for(;be!==null;){Le=be;var Xe=Le.sibling,Ct=Le.return;if(zp(Le),Le===ve){be=null;break}if(Xe!==null){Xe.return=Ct,be=Xe;break}be=Ct}}}var Be=T.alternate;if(Be!==null){var mn=Be.child;if(mn!==null){Be.child=null;do{var $n=mn.sibling;mn.sibling=null,mn=$n}while(mn!==null)}}be=T}}if(T.subtreeFlags&2064&&z!==null)z.return=T,be=z;else e:for(;be!==null;){if(T=be,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Rr(9,T,T.return)}var Z=T.sibling;if(Z!==null){Z.return=T.return,be=Z;break e}be=T.return}}var G=s.current;for(be=G;be!==null;){z=be;var $=z.child;if(z.subtreeFlags&2064&&$!==null)$.return=z,be=$;else e:for(z=G;be!==null;){if(U=be,U.flags&2048)try{switch(U.tag){case 0:case 11:case 15:Ao(9,U)}}catch(ke){Ln(U,U.return,ke)}if(U===z){be=null;break e}var Ee=U.sibling;if(Ee!==null){Ee.return=U.return,be=Ee;break e}be=U.return}}if(ct=M,yi(),vi&&typeof vi.onPostCommitFiberRoot=="function")try{vi.onPostCommitFiberRoot(Xa,s)}catch{}g=!0}return g}finally{vt=f,Gt.transition=o}}return!1}function Qp(s,o,f){o=Pu(f,o),o=hp(s,o,1),nr(s,o),o=Mn(),s=Ll(s,1),s!==null&&(po(s,1,o),Pn(s,o))}function Ln(s,o,f){if(s.tag===3)Qp(s,s,f);else for(;o!==null;){if(o.tag===3){Qp(o,s,f);break}else if(o.tag===1){var g=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(ir===null||!ir.has(g))){s=Pu(f,s),s=fp(o,s,1),nr(o,s),s=Mn(),o=Ll(o,1),o!==null&&(po(o,1,s),Pn(o,s));break}}o=o.return}}function U_(s,o,f){var g=s.pingCache;g!==null&&g.delete(o),o=Mn(),s.pingedLanes|=s.suspendedLanes&f,Zt===s&&(cn&f)===f&&(Qt===4||Qt===3&&(cn&130023424)===cn&&500>rn()-qu?Ir(s,0):Xu|=f),Pn(s,o)}function Kp(s,o){o===0&&(s.mode&1?(o=Ha,Ha<<=1,!(Ha&130023424)&&(Ha=4194304)):o=1);var f=Mn();s=Ll(s,o),s!==null&&(po(s,o,f),Pn(s,f))}function B_(s){var o=s.memoizedState,f=0;o!==null&&(f=o.retryLane),Kp(s,f)}function V_(s,o){var f=0;switch(s.tag){case 13:var g=s.stateNode,M=s.memoizedState;M!==null&&(f=M.retryLane);break;case 19:g=s.stateNode;break;default:throw Error(a(314))}g!==null&&g.delete(o),Kp(s,f)}var $p;$p=function(s,o,f){if(s!==null)if(s.memoizedProps!==o.pendingProps||nn.current)Fn=!0;else{if(!(s.lanes&f)&&!(o.flags&128))return Fn=!1,C_(s,o,f);Fn=!!(s.flags&131072)}else Fn=!1,It&&o.flags&1048576&&Ud(o,el,o.index);switch(o.lanes=0,o.tag){case 2:var g=o.type;s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps;var M=Li(o,wt.current);gs(o,f),M=bu(null,o,g,s,M,f);var T=Tu();return o.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,An(g)?(T=!0,Va(o)):T=!1,o.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,hu(o),M.updater=Ka,o.stateNode=M,M._reactInternals=o,du(o,g,s,f),o=Iu(null,o,g,!0,T,f)):(o.tag=0,It&&T&&pu(o),xn(null,o,M,f),o=o.child),o;case 16:g=o.elementType;e:{switch(s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps,M=g._init,g=M(g._payload),o.type=g,M=o.tag=H_(g),s=si(g,s),M){case 0:o=Ru(null,o,g,s,f);break e;case 1:o=wp(null,o,g,s,f);break e;case 11:o=_p(null,o,g,s,f);break e;case 14:o=yp(null,o,g,si(g.type,s),f);break e}throw Error(a(306,g,""))}return o;case 0:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:si(g,M),Ru(s,o,g,M,f);case 1:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:si(g,M),wp(s,o,g,M,f);case 3:e:{if(bp(o),s===null)throw Error(a(387));g=o.pendingProps,T=o.memoizedState,M=T.element,Id(s,o),Qa(o,g,null,f);var z=o.memoizedState;if(g=z.element,ie&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:z.cache,transitions:z.transitions},o.updateQueue.baseState=T,o.memoizedState=T,o.flags&256){M=Error(a(423)),o=Tp(s,o,g,f,M);break e}else if(g!==M){M=Error(a(424)),o=Tp(s,o,g,f,M);break e}else for(ie&&(Nn=q(o.stateNode.containerInfo),zn=o,It=!0,oi=null,mo=!1),f=Xd(o,null,g,f),o.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(ys(),g===M){o=Fi(s,o,f);break e}xn(s,o,g,f)}o=o.child}return o;case 5:return qd(o),s===null&&vu(o),g=o.type,M=o.pendingProps,T=s!==null?s.memoizedProps:null,z=M.children,_e(g,M)?z=null:T!==null&&_e(g,T)&&(o.flags|=32),Sp(s,o),xn(s,o,z,f),o.child;case 6:return s===null&&vu(o),null;case 13:return Ep(s,o,f);case 4:return yu(o,o.stateNode.containerInfo),g=o.pendingProps,s===null?o.child=xs(o,null,g,f):xn(s,o,g,f),o.child;case 11:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:si(g,M),_p(s,o,g,M,f);case 7:return xn(s,o,o.pendingProps,f),o.child;case 8:return xn(s,o,o.pendingProps.children,f),o.child;case 12:return xn(s,o,o.pendingProps.children,f),o.child;case 10:e:{if(g=o.type._context,M=o.pendingProps,T=o.memoizedProps,z=M.value,Rd(o,g,z),T!==null)if(_i(T.value,z)){if(T.children===M.children&&!nn.current){o=Fi(s,o,f);break e}}else for(T=o.child,T!==null&&(T.return=o);T!==null;){var U=T.dependencies;if(U!==null){z=T.child;for(var ne=U.firstContext;ne!==null;){if(ne.context===g){if(T.tag===1){ne=Ii(-1,f&-f),ne.tag=2;var ve=T.updateQueue;if(ve!==null){ve=ve.shared;var Le=ve.pending;Le===null?ne.next=ne:(ne.next=Le.next,Le.next=ne),ve.pending=ne}}T.lanes|=f,ne=T.alternate,ne!==null&&(ne.lanes|=f),uu(T.return,f,o),U.lanes|=f;break}ne=ne.next}}else if(T.tag===10)z=T.type===o.type?null:T.child;else if(T.tag===18){if(z=T.return,z===null)throw Error(a(341));z.lanes|=f,U=z.alternate,U!==null&&(U.lanes|=f),uu(z,f,o),z=T.sibling}else z=T.child;if(z!==null)z.return=T;else for(z=T;z!==null;){if(z===o){z=null;break}if(T=z.sibling,T!==null){T.return=z.return,z=T;break}z=z.return}T=z}xn(s,o,M.children,f),o=o.child}return o;case 9:return M=o.type,g=o.pendingProps.children,gs(o,f),M=qn(M),g=g(M),o.flags|=1,xn(s,o,g,f),o.child;case 14:return g=o.type,M=si(g,o.pendingProps),M=si(g.type,M),yp(s,o,g,M,f);case 15:return xp(s,o,o.type,o.pendingProps,f);case 17:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:si(g,M),s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),o.tag=1,An(g)?(s=!0,Va(o)):s=!1,gs(o,f),Od(o,g,M),du(o,g,M,f),Iu(null,o,g,!0,s,f);case 19:return Lp(s,o,f);case 22:return Mp(s,o,f)}throw Error(a(156,o.tag))};function em(s,o){return iu(s,o)}function G_(s,o,f,g){this.tag=s,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Kn(s,o,f,g){return new G_(s,o,f,g)}function eh(s){return s=s.prototype,!(!s||!s.isReactComponent)}function H_(s){if(typeof s=="function")return eh(s)?1:0;if(s!=null){if(s=s.$$typeof,s===_)return 11;if(s===b)return 14}return 2}function ar(s,o){var f=s.alternate;return f===null?(f=Kn(s.tag,o,s.key,s.mode),f.elementType=s.elementType,f.type=s.type,f.stateNode=s.stateNode,f.alternate=s,s.alternate=f):(f.pendingProps=o,f.type=s.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=s.flags&14680064,f.childLanes=s.childLanes,f.lanes=s.lanes,f.child=s.child,f.memoizedProps=s.memoizedProps,f.memoizedState=s.memoizedState,f.updateQueue=s.updateQueue,o=s.dependencies,f.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},f.sibling=s.sibling,f.index=s.index,f.ref=s.ref,f}function Il(s,o,f,g,M,T){var z=2;if(g=s,typeof s=="function")eh(s)&&(z=1);else if(typeof s=="string")z=5;else e:switch(s){case d:return Nr(f.children,M,T,o);case p:z=8,M|=8;break;case m:return s=Kn(12,f,o,M|2),s.elementType=m,s.lanes=T,s;case y:return s=Kn(13,f,o,M),s.elementType=y,s.lanes=T,s;case S:return s=Kn(19,f,o,M),s.elementType=S,s.lanes=T,s;case E:return Dl(f,M,T,o);default:if(typeof s=="object"&&s!==null)switch(s.$$typeof){case v:z=10;break e;case x:z=9;break e;case _:z=11;break e;case b:z=14;break e;case w:z=16,g=null;break e}throw Error(a(130,s==null?s:typeof s,""))}return o=Kn(z,f,o,M),o.elementType=s,o.type=g,o.lanes=T,o}function Nr(s,o,f,g){return s=Kn(7,s,g,o),s.lanes=f,s}function Dl(s,o,f,g){return s=Kn(22,s,g,o),s.elementType=E,s.lanes=f,s.stateNode={},s}function th(s,o,f){return s=Kn(6,s,null,o),s.lanes=f,s}function nh(s,o,f){return o=Kn(4,s.children!==null?s.children:[],s.key,o),o.lanes=f,o.stateNode={containerInfo:s.containerInfo,pendingChildren:null,implementation:s.implementation},o}function W_(s,o,f,g,M){this.tag=o,this.containerInfo=s,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ne,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=tu(0),this.expirationTimes=tu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=tu(0),this.identifierPrefix=g,this.onRecoverableError=M,ie&&(this.mutableSourceEagerHydrationData=null)}function tm(s,o,f,g,M,T,z,U,ne){return s=new W_(s,o,f,U,ne),o===1?(o=1,T===!0&&(o|=8)):o=0,T=Kn(3,null,null,o),s.current=T,T.stateNode=s,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},hu(T),s}function nm(s){if(!s)return Xn;s=s._reactInternals;e:{if(P(s)!==s||s.tag!==1)throw Error(a(170));var o=s;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(An(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(a(171))}if(s.tag===1){var f=s.type;if(An(f))return Ed(s,f,o)}return o}function im(s){var o=s._reactInternals;if(o===void 0)throw typeof s.render=="function"?Error(a(188)):(s=Object.keys(s).join(","),Error(a(268,s)));return s=K(o),s===null?null:s.stateNode}function rm(s,o){if(s=s.memoizedState,s!==null&&s.dehydrated!==null){var f=s.retryLane;s.retryLane=f!==0&&f<o?f:o}}function ih(s,o){rm(s,o),(s=s.alternate)&&rm(s,o)}function X_(s){return s=K(s),s===null?null:s.stateNode}function q_(){return null}return t.attemptContinuousHydration=function(s){if(s.tag===13){var o=Mn();Qn(s,134217728,o),ih(s,134217728)}},t.attemptHydrationAtCurrentPriority=function(s){if(s.tag===13){var o=Mn(),f=sr(s);Qn(s,f,o),ih(s,f)}},t.attemptSynchronousHydration=function(s){switch(s.tag){case 3:var o=s.stateNode;if(o.current.memoizedState.isDehydrated){var f=fo(o.pendingLanes);f!==0&&(nu(o,f|1),Pn(o,rn()),!(ct&6)&&(Es(),yi()))}break;case 13:var g=Mn();qp(function(){return Qn(s,1,g)}),ih(s,1)}},t.batchedUpdates=function(s,o){var f=ct;ct|=1;try{return s(o)}finally{ct=f,ct===0&&(Es(),qa&&yi())}},t.createComponentSelector=function(s){return{$$typeof:_l,value:s}},t.createContainer=function(s,o,f,g,M,T,z){return tm(s,o,!1,null,f,g,M,T,z)},t.createHasPseudoClassSelector=function(s){return{$$typeof:yl,value:s}},t.createHydrationContainer=function(s,o,f,g,M,T,z,U,ne){return s=tm(f,g,!0,s,M,T,z,U,ne),s.context=nm(null),f=s.current,g=Mn(),M=sr(f),T=Ii(g,M),T.callback=o??null,nr(f,T),s.current.lanes=M,po(s,M,g),Pn(s,g),s},t.createPortal=function(s,o,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:s,containerInfo:o,implementation:f}},t.createRoleSelector=function(s){return{$$typeof:xl,value:s}},t.createTestNameSelector=function(s){return{$$typeof:Ml,value:s}},t.createTextSelector=function(s){return{$$typeof:Sl,value:s}},t.deferredUpdates=function(s){var o=vt,f=Gt.transition;try{return Gt.transition=null,vt=16,s()}finally{vt=o,Gt.transition=f}},t.discreteUpdates=function(s,o,f,g,M){var T=vt,z=Gt.transition;try{return Gt.transition=null,vt=1,s(o,f,g,M)}finally{vt=T,Gt.transition=z,ct===0&&Es()}},t.findAllNodes=Hu,t.findBoundingRects=function(s,o){if(!Mt)throw Error(a(363));o=Hu(s,o),s=[];for(var f=0;f<o.length;f++)s.push(F(o[f]));for(o=s.length-1;0<o;o--){f=s[o];for(var g=f.x,M=g+f.width,T=f.y,z=T+f.height,U=o-1;0<=U;U--)if(o!==U){var ne=s[U],ve=ne.x,Le=ve+ne.width,$e=ne.y,Xe=$e+ne.height;if(g>=ve&&T>=$e&&M<=Le&&z<=Xe){s.splice(o,1);break}else if(g!==ve||f.width!==ne.width||Xe<T||$e>z){if(!(T!==$e||f.height!==ne.height||Le<g||ve>M)){ve>g&&(ne.width+=ve-g,ne.x=g),Le<M&&(ne.width=M-ve),s.splice(o,1);break}}else{$e>T&&(ne.height+=$e-T,ne.y=T),Xe<z&&(ne.height=z-$e),s.splice(o,1);break}}}return s},t.findHostInstance=im,t.findHostInstanceWithNoPortals=function(s){return s=H(s),s=s!==null?V(s):null,s===null?null:s.stateNode},t.findHostInstanceWithWarning=function(s){return im(s)},t.flushControlled=function(s){var o=ct;ct|=1;var f=Gt.transition,g=vt;try{Gt.transition=null,vt=1,s()}finally{vt=g,Gt.transition=f,ct=o,ct===0&&(Es(),yi())}},t.flushPassiveEffects=zr,t.flushSync=qp,t.focusWithin=function(s,o){if(!Mt)throw Error(a(363));for(s=Bu(s),o=Hp(s,o),o=Array.from(o),s=0;s<o.length;){var f=o[s++];if(!te(f)){if(f.tag===5&&ye(f.stateNode))return!0;for(f=f.child;f!==null;)o.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return vt},t.getFindAllNodesFailureDescription=function(s,o){if(!Mt)throw Error(a(363));var f=0,g=[];s=[Bu(s),0];for(var M=0;M<s.length;){var T=s[M++],z=s[M++],U=o[z];if((T.tag!==5||!te(T))&&(Vu(T,U)&&(g.push(Gu(U)),z++,z>f&&(f=z)),z<o.length))for(T=T.child;T!==null;)s.push(T,z),T=T.sibling}if(f<o.length){for(s=[];f<o.length;f++)s.push(Gu(o[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+s.join(" > ")}return null},t.getPublicRootInstance=function(s){if(s=s.current,!s.child)return null;switch(s.child.tag){case 5:return oe(s.child.stateNode);default:return s.child.stateNode}},t.injectIntoDevTools=function(s){if(s={bundleType:s.bundleType,version:s.version,rendererPackageName:s.rendererPackageName,rendererConfig:s.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:X_,findFiberByHostInstance:s.findFiberByHostInstance||q_,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")s=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)s=!0;else{try{Xa=o.inject(s),vi=o}catch{}s=!!o.checkDCE}}return s},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(s,o,f,g){if(!Mt)throw Error(a(363));s=Hu(s,o);var M=Te(s,f,g).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(s,o){var f=o._getVersion;f=f(o._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[o,f]:s.mutableSourceEagerHydrationData.push(o,f)},t.runWithPriority=function(s,o){var f=vt;try{return vt=s,o()}finally{vt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(s,o,f,g){var M=o.current,T=Mn(),z=sr(M);return f=nm(f),o.context===null?o.context=f:o.pendingContext=f,o=Ii(T,z),o.payload={element:s},g=g===void 0?null:g,g!==null&&(o.callback=g),nr(M,o),s=Qn(M,z,T),s!==null&&ja(s,M,z),z},t};(function(l){l.exports=aE})(sE);const lE=Z_(Df);function kv(l,e,t=(n,i)=>n===i){if(l===e)return!0;if(!l||!e)return!1;const n=l.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(l[i],e[i]))return!1;return!0}const Wi=[];function Uv(l,e,t=!1,n={}){for(const r of Wi)if(kv(e,r.keys,r.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(r,"error"))throw r.error;if(Object.prototype.hasOwnProperty.call(r,"response"))return r.response;if(!t)throw r.promise}const i={keys:e,equal:n.equal,promise:l(...e).then(r=>i.response=r).then(()=>{n.lifespan&&n.lifespan>0&&setTimeout(()=>{const r=Wi.indexOf(i);r!==-1&&Wi.splice(r,1)},n.lifespan)}).catch(r=>i.error=r)};if(Wi.push(i),!t)throw i.promise}const cE=(l,e,t)=>Uv(l,e,!1,t),uE=(l,e,t)=>void Uv(l,e,!0,t),hE=l=>{if(l===void 0||l.length===0)Wi.splice(0,Wi.length);else{const e=Wi.find(t=>kv(l,t.keys,t.equal));if(e){const t=Wi.indexOf(e);t!==-1&&Wi.splice(t,1)}}};var Eg,Ag;const fE=(l,...e)=>e.reduce((t,n)=>t==null?void 0:t[n],l),Xs="ColorManagement"in If&&fE(If,"ColorManagement")||null,Bv=l=>l&&l.isOrthographicCamera,dE=l=>l&&l.hasOwnProperty("current"),Oa=typeof window<"u"&&((Eg=window.document)!=null&&Eg.createElement||((Ag=window.navigator)==null?void 0:Ag.product)==="ReactNative")?Re.useLayoutEffect:Re.useEffect;function Vv(l){const e=Re.useRef(l);return Oa(()=>void(e.current=l),[l]),e}function pE({set:l}){return Oa(()=>(l(new Promise(()=>null)),()=>l(!1)),[l]),null}class Gv extends Re.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}Gv.getDerivedStateFromError=()=>({error:!0});const Hv="__default",Cg=new Map,mE=l=>l&&!!l.memoized&&!!l.changes;function Wv(l){const e=typeof window<"u"?window.devicePixelRatio:1;return Array.isArray(l)?Math.min(Math.max(l[0],e),l[1]):l}const Wo=l=>{var e;return(e=l.__r3f)==null?void 0:e.root.getState()},zt={obj:l=>l===Object(l)&&!zt.arr(l)&&typeof l!="function",fun:l=>typeof l=="function",str:l=>typeof l=="string",num:l=>typeof l=="number",boo:l=>typeof l=="boolean",und:l=>l===void 0,arr:l=>Array.isArray(l),equ(l,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof l!=typeof e||!!l!=!!e)return!1;if(zt.str(l)||zt.num(l))return l===e;const r=zt.obj(l);if(r&&n==="reference")return l===e;const a=zt.arr(l);if(a&&t==="reference")return l===e;if((a||r)&&l===e)return!0;let c;for(c in l)if(!(c in e))return!1;for(c in i?e:l)if(l[c]!==e[c])return!1;if(zt.und(c)){if(a&&l.length===0&&e.length===0||r&&Object.keys(l).length===0&&Object.keys(e).length===0)return!0;if(l!==e)return!1}return!0}};function gE(l){const e={nodes:{},materials:{}};return l&&l.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function vE(l){l.dispose&&l.type!=="Scene"&&l.dispose();for(const e in l)e.dispose==null||e.dispose(),delete l[e]}function qs(l,e){const t=l;return(e!=null&&e.primitive||!t.__r3f)&&(t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e}),l}function zf(l,e){let t=l;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((r,a)=>r[a],l),{target:t,key:i}}else return{target:t,key:e}}const Pg=/-\d+$/;function kh(l,e,t){if(zt.str(t)){if(Pg.test(t)){const r=t.replace(Pg,""),{target:a,key:c}=zf(l,r);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=zf(l,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(l,e)}function Lg(l,e,t){var n,i;if(zt.str(t)){const{target:r,key:a}=zf(l,t),c=e.__r3f.previousAttach;c===void 0?delete r[a]:r[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(l,e);(i=e.__r3f)==null||delete i.previousAttach}function Xv(l,{children:e,key:t,ref:n,...i},{children:r,key:a,ref:c,...u}={},h=!1){var d;const p=(d=l==null?void 0:l.__r3f)!=null?d:{},m=Object.entries(i),v=[];if(h){const _=Object.keys(u);for(let y=0;y<_.length;y++)i.hasOwnProperty(_[y])||m.unshift([_[y],Hv+"remove"])}m.forEach(([_,y])=>{var S;if((S=l.__r3f)!=null&&S.primitive&&_==="object"||zt.equ(y,u[_]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(_))return v.push([_,y,!0,[]]);let b=[];_.includes("-")&&(b=_.split("-")),v.push([_,y,!1,b]);for(const w in i){const E=i[w];w.startsWith(`${_}-`)&&v.push([w,E,!1,w.split("-")])}});const x={...i};return p.memoizedProps&&p.memoizedProps.args&&(x.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(x.attach=p.memoizedProps.attach),{memoized:x,changes:v}}function Uh(l,e){var t,n,i;const r=(t=l.__r3f)!=null?t:{},a=r.root,c=(n=a==null||a.getState==null?void 0:a.getState())!=null?n:{},{memoized:u,changes:h}=mE(e)?e:Xv(l,e),d=r.eventCount;l.__r3f&&(l.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[v,x,_,y]=h[m],S=l,b=S[v];if(y.length&&(b=y.reduce((w,E)=>w[E],l),!(b&&b.set))){const[w,...E]=y.reverse();S=E.reverse().reduce((C,L)=>C[L],l),v=w}if(x===Hv+"remove")if(S.constructor){let w=Cg.get(S.constructor);w||(w=new S.constructor,Cg.set(S.constructor,w)),x=w[v]}else x=0;if(_)x?r.handlers[v]=x:delete r.handlers[v],r.eventCount=Object.keys(r.handlers).length;else if(b&&b.set&&(b.copy||b instanceof ns)){if(Array.isArray(x))b.fromArray?b.fromArray(x):b.set(...x);else if(b.copy&&x&&x.constructor&&b.constructor===x.constructor)b.copy(x);else if(x!==void 0){const w=b instanceof Pe;!w&&b.setScalar?b.setScalar(x):b instanceof ns&&x instanceof ns?b.mask=x.mask:b.set(x),!Xs&&!c.linear&&w&&b.convertSRGBToLinear()}}else S[v]=x,!c.linear&&S[v]instanceof Bt&&S[v].format===Rn&&S[v].type===ji&&(S[v].encoding=Tt);Ys(l)}if(r.parent&&c.internal&&l.raycast&&d!==r.eventCount){const m=c.internal.interaction.indexOf(l);m>-1&&c.internal.interaction.splice(m,1),r.eventCount&&c.internal.interaction.push(l)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=l.__r3f)!=null&&i.parent&&Nf(l),l}function Ys(l){var e,t;const n=(e=l.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Nf(l){l.onUpdate==null||l.onUpdate(l)}function _E(l,e){l.manual||(Bv(l)?(l.left=e.width/-2,l.right=e.width/2,l.top=e.height/2,l.bottom=e.height/-2):l.aspect=e.width/e.height,l.updateProjectionMatrix(),l.updateMatrixWorld())}function yc(l){return(l.eventObject||l.object).uuid+"/"+l.index+l.instanceId}function yE(){var l;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return gr.DefaultEventPriority;switch((l=e.event)==null?void 0:l.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return gr.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return gr.ContinuousEventPriority;default:return gr.DefaultEventPriority}}function qv(l,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(l.delete(n),i.target.releasePointerCapture(n)))}function xE(l,e){const{internal:t}=l.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{qv(t.capturedMap,e,n,i)})}function ME(l){function e(u){const{internal:h}=l.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=l.getState(),p=new Set,m=[],v=h?h(d.internal.interaction):d.internal.interaction;for(let S=0;S<v.length;S++){const b=Wo(v[S]);b&&(b.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function x(S){const b=Wo(S);if(!b||!b.events.enabled||b.raycaster.camera===null)return[];if(b.raycaster.camera===void 0){var w;b.events.compute==null||b.events.compute(u,b,(w=b.previousRoot)==null?void 0:w.getState()),b.raycaster.camera===void 0&&(b.raycaster.camera=null)}return b.raycaster.camera?b.raycaster.intersectObject(S,!0):[]}let _=v.flatMap(x).sort((S,b)=>{const w=Wo(S.object),E=Wo(b.object);return!w||!E?S.distance-b.distance:E.events.priority-w.events.priority||S.distance-b.distance}).filter(S=>{const b=yc(S);return p.has(b)?!1:(p.add(b),!0)});d.events.filter&&(_=d.events.filter(_,d));for(const S of _){let b=S.object;for(;b;){var y;(y=b.__r3f)!=null&&y.eventCount&&m.push({...S,eventObject:b}),b=b.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let S of d.internal.capturedMap.get(u.pointerId).values())p.has(yc(S.intersection))||m.push(S.intersection);return m}function i(u,h,d,p){const m=l.getState();if(u.length){const v={stopped:!1};for(const x of u){const _=Wo(x.object)||m,{raycaster:y,pointer:S,camera:b,internal:w}=_,E=new D(S.x,S.y,0).unproject(b),C=O=>{var H,K;return(H=(K=w.capturedMap.get(O))==null?void 0:K.has(x.eventObject))!=null?H:!1},L=O=>{const H={intersection:x,target:h.target};w.capturedMap.has(O)?w.capturedMap.get(O).set(x.eventObject,H):w.capturedMap.set(O,new Map([[x.eventObject,H]])),h.target.setPointerCapture(O)},N=O=>{const H=w.capturedMap.get(O);H&&qv(w.capturedMap,x.eventObject,H,O)};let A={};for(let O in h){let H=h[O];typeof H!="function"&&(A[O]=H)}let P={...x,...A,pointer:S,intersections:u,stopped:v.stopped,delta:d,unprojectedPoint:E,ray:y.ray,camera:b,stopPropagation(){const O="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!O||O.has(x.eventObject))&&(P.stopped=v.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(H=>H.eventObject===x.eventObject))){const H=u.slice(0,u.indexOf(x));r([...H,x])}},target:{hasPointerCapture:C,setPointerCapture:L,releasePointerCapture:N},currentTarget:{hasPointerCapture:C,setPointerCapture:L,releasePointerCapture:N},nativeEvent:h};if(p(P),v.stopped===!0)break}}return u}function r(u){const{internal:h}=l.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,v=m==null?void 0:m.handlers;if(h.hovered.delete(yc(d)),m!=null&&m.eventCount){const x={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function a(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return h=>{const{internal:d}=l.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),r([]))}}return function(d){const{onPointerMissed:p,internal:m}=l.getState();m.lastEvent.current=d;const v=u==="onPointerMove",x=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",y=n(d,v?t:void 0),S=x?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=y.map(w=>w.eventObject)),x&&!y.length&&S<=2&&(a(d,m.interaction),p&&p(d)),v&&r(y);function b(w){const E=w.eventObject,C=E.__r3f,L=C==null?void 0:C.handlers;if(C!=null&&C.eventCount)if(v){if(L.onPointerOver||L.onPointerEnter||L.onPointerOut||L.onPointerLeave){const N=yc(w),A=m.hovered.get(N);A?A.stopped&&w.stopPropagation():(m.hovered.set(N,w),L.onPointerOver==null||L.onPointerOver(w),L.onPointerEnter==null||L.onPointerEnter(w))}L.onPointerMove==null||L.onPointerMove(w)}else{const N=L[u];N?(!x||m.initialHits.includes(E))&&(a(d,m.interaction.filter(A=>!m.initialHits.includes(A))),N(w)):x&&m.initialHits.includes(E)&&a(d,m.interaction.filter(A=>!m.initialHits.includes(A)))}}i(y,d,S,b)}}return{handlePointer:c}}let Ff={},SE=l=>void(Ff={...Ff,...l});function wE(l,e){function t(d,{args:p=[],attach:m,...v},x){let _=`${d[0].toUpperCase()}${d.slice(1)}`,y;if(d==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const S=v.object;y=qs(S,{type:d,root:x,attach:m,primitive:!0})}else{const S=Ff[_];if(!S)throw new Error(`R3F: ${_} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");y=qs(new S(...p),{type:d,root:x,attach:m,memoizedProps:{args:p}})}return y.__r3f.attach===void 0&&(y instanceof at?y.__r3f.attach="geometry":y instanceof hn&&(y.__r3f.attach="material")),_!=="inject"&&Uh(y,v),y}function n(d,p){let m=!1;if(p){var v,x;(v=p.__r3f)!=null&&v.attach?kh(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(x=d.__r3f)==null||x.objects.push(p),p.__r3f||qs(p,{}),p.__r3f.parent=d,Nf(p),Ys(p)}}function i(d,p,m){let v=!1;if(p){var x,_;if((x=p.__r3f)!=null&&x.attach)kh(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"});const y=d.children.filter(b=>b!==p),S=y.indexOf(m);d.children=[...y.slice(0,S),p,...y.slice(S)],v=!0}v||(_=d.__r3f)==null||_.objects.push(p),p.__r3f||qs(p,{}),p.__r3f.parent=d,Nf(p),Ys(p)}}function r(d,p,m=!1){d&&[...d].forEach(v=>a(p,v,m))}function a(d,p,m){if(p){var v,x,_;if(p.__r3f&&(p.__r3f.parent=null),(v=d.__r3f)!=null&&v.objects&&(d.__r3f.objects=d.__r3f.objects.filter(E=>E!==p)),(x=p.__r3f)!=null&&x.attach)Lg(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var y;d.remove(p),(y=p.__r3f)!=null&&y.root&&xE(p.__r3f.root,p)}const b=(_=p.__r3f)==null?void 0:_.primitive,w=m===void 0?p.dispose!==null&&!b:m;if(!b){var S;r((S=p.__r3f)==null?void 0:S.objects,p,w),r(p.children,p,w)}p.__r3f&&(delete p.__r3f.root,delete p.__r3f.objects,delete p.__r3f.handlers,delete p.__r3f.memoizedProps,b||delete p.__r3f),w&&p.dispose&&p.type!=="Scene"&&va.unstable_scheduleCallback(va.unstable_IdlePriority,()=>{try{p.dispose()}catch{}}),Ys(d)}}function c(d,p,m,v){var x;const _=(x=d.__r3f)==null?void 0:x.parent;if(!_)return;const y=t(p,m,d.__r3f.root);if(d.children){for(const S of d.children)S.__r3f&&n(y,S);d.children=d.children.filter(S=>!S.__r3f)}d.__r3f.objects.forEach(S=>n(y,S)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||a(_,d),y.parent&&(y.__r3f.autoRemovedBeforeAppend=!0),n(_,y),y.raycast&&y.__r3f.eventCount&&y.__r3f.root.getState().internal.interaction.push(y),[v,v.alternate].forEach(S=>{S!==null&&(S.stateNode=y,S.ref&&(typeof S.ref=="function"?S.ref(y):S.ref.current=y))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:lE({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&a(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const v=d.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;const m=(p=d==null?void 0:d.__r3f)!=null?p:{};return Boolean(m.handlers)},prepareUpdate(d,p,m,v){if(d.__r3f.primitive&&v.object&&v.object!==d)return[!0];{const{args:x=[],children:_,...y}=v,{args:S=[],children:b,...w}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((C,L)=>C!==S[L]))return[!0];const E=Xv(d,y,w,!0);return E.changes.length?[!1,E]:null}},commitUpdate(d,[p,m],v,x,_,y){p?c(d,v,_,y):Uh(d,m)},commitMount(d,p,m,v){var x;const _=(x=d.__r3f)!=null?x:{};d.raycast&&_.handlers&&_.eventCount&&d.__r3f.root.getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>qs(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:v}=(p=d.__r3f)!=null?p:{};m&&v&&Lg(v,d,m),d.isObject3D&&(d.visible=!1),Ys(d)},unhideInstance(d,p){var m;const{attach:v,parent:x}=(m=d.__r3f)!=null?m:{};v&&x&&kh(x,d,v),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),Ys(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():gr.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&zt.fun(performance.now)?performance.now:zt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:zt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:zt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Uh}}const Yv=l=>!!(l!=null&&l.render),Zv=Re.createContext(null),bE=(l,e)=>{const t=rE((c,u)=>{const h=new D,d=new D,p=new D;function m(S=u().camera,b=d,w=u().size){const{width:E,height:C,top:L,left:N}=w,A=E/C;b instanceof D?p.copy(b):p.set(...b);const P=S.getWorldPosition(h).distanceTo(p);if(Bv(S))return{width:E/S.zoom,height:C/S.zoom,top:L,left:N,factor:1,distance:P,aspect:A};{const O=S.fov*Math.PI/180,H=2*Math.tan(O/2)*P,K=H*(E/C);return{width:K,height:H,top:L,left:N,factor:E/K,distance:P,aspect:A}}}let v;const x=S=>c(b=>({performance:{...b.performance,current:S}})),_=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,invalidate:(S=1)=>l(u(),S),advance:(S,b)=>e(S,b,u()),legacy:!1,linear:!1,flat:!1,scene:qs(new td),controls:null,clock:new xd,pointer:_,mouse:_,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const S=u();v&&clearTimeout(v),S.performance.current!==S.performance.min&&x(S.performance.min),v=setTimeout(()=>x(u().performance.max),S.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:S=>c(b=>({...b,events:{...b.events,...S}})),setSize:(S,b,w,E,C)=>{const L=u().camera,N={width:S,height:b,top:E||0,left:C||0,updateStyle:w};c(A=>({size:N,viewport:{...A.viewport,...m(L,d,N)}}))},setDpr:S=>c(b=>{const w=Wv(S);return{viewport:{...b.viewport,dpr:w,initialDpr:b.viewport.initialDpr||w}}}),setFrameloop:(S="always")=>{const b=u().clock;b.stop(),b.elapsedTime=0,S!=="never"&&(b.start(),b.elapsedTime=0),c(()=>({frameloop:S}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Re.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(S,b,w)=>{const E=u().internal;return E.priority=E.priority+(b>0?1:0),E.subscribers.push({ref:S,priority:b,store:w}),E.subscribers=E.subscribers.sort((C,L)=>C.priority-L.priority),()=>{const C=u().internal;C!=null&&C.subscribers&&(C.priority=C.priority-(b>0?1:0),C.subscribers=C.subscribers.filter(L=>L.ref!==S))}}}}}),n=t.getState();let i=n.size,r=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u!==i||h.dpr!==r){var m;i=u,r=h.dpr,_E(c,u),d.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,v)}c!==a&&(a=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>l(c)),t};let xc,TE=new Set,EE=new Set,AE=new Set;function Bh(l,e){if(l.size)for(const{callback:t}of l.values())t(e)}function Xo(l,e){switch(l){case"before":return Bh(TE,e);case"after":return Bh(EE,e);case"tail":return Bh(AE,e)}}let Vh,Gh;function Hh(l,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof l=="number"&&(n=l-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=l),Vh=e.internal.subscribers,xc=0;xc<Vh.length;xc++)Gh=Vh[xc],Gh.ref.current(Gh.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function CE(l){let e=!1,t,n,i;function r(u){n=requestAnimationFrame(r),e=!0,t=0,Xo("before",u);for(const d of l.values()){var h;i=d.store.getState(),i.internal.active&&(i.frameloop==="always"||i.internal.frames>0)&&!((h=i.gl.xr)!=null&&h.isPresenting)&&(t+=Hh(u,i))}if(Xo("after",u),t===0)return Xo("tail",u),e=!1,cancelAnimationFrame(n)}function a(u,h=1){var d;if(!u)return l.forEach(p=>a(p.store.getState()),h);(d=u.gl.xr)!=null&&d.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+h),e||(e=!0,requestAnimationFrame(r)))}function c(u,h=!0,d,p){if(h&&Xo("before",u),d)Hh(u,d,p);else for(const m of l.values())Hh(u,m.store.getState());h&&Xo("after",u)}return{loop:r,invalidate:a,advance:c}}function Jv(){const l=Re.useContext(Zv);if(!l)throw new Error("R3F: Hooks can only be used within the Canvas component!");return l}function Wh(l=t=>t,e){return Jv()(l,e)}function QE(l,e=0){const t=Jv(),n=t.getState().internal.subscribe,i=Vv(l);return Oa(()=>n(i,e,t),[e,n,t]),null}function jv(l,e){return function(t,...n){const i=new t;return l&&l(i),Promise.all(n.map(r=>new Promise((a,c)=>i.load(r,u=>{u.scene&&Object.assign(u,gE(u.scene)),a(u)},e,u=>c(new Error(`Could not load ${r}: ${u.message})`))))))}}function Qv(l,e,t,n){const i=Array.isArray(e)?e:[e],r=cE(jv(t,n),[l,...i],{equal:zt.equ});return Array.isArray(e)?r:r[0]}Qv.preload=function(l,e,t){const n=Array.isArray(e)?e:[e];return uE(jv(t),[l,...n])};Qv.clear=function(l,e){const t=Array.isArray(e)?e:[e];return hE([l,...t])};const io=new Map,{invalidate:Rg,advance:Ig}=CE(io),{reconciler:Nc,applyProps:Mc}=wE(io,yE),qo={objects:"shallow",strict:!1},PE=(l,e)=>{const t=typeof l=="function"?l(e):l;return Yv(t)?t:new ed({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...l})};function LE(l,e){if(e)return e;if(typeof HTMLCanvasElement<"u"&&l instanceof HTMLCanvasElement&&l.parentElement){const{width:t,height:n,top:i,left:r}=l.parentElement.getBoundingClientRect();return{width:t,height:n,top:i,left:r}}else if(typeof OffscreenCanvas<"u"&&l instanceof OffscreenCanvas)return{width:l.width,height:l.height,top:0,left:0};return{width:0,height:0,top:0,left:0}}function RE(l){const e=io.get(l),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||bE(Rg,Ig),a=t||Nc.createContainer(r,gr.ConcurrentRoot,null,!1,null,"",i,null);e||io.set(l,{fiber:a,store:r});let c,u=!1;return{configure(h={}){let{gl:d,size:p,events:m,onCreated:v,shadows:x=!1,linear:_=!1,flat:y=!1,legacy:S=!1,orthographic:b=!1,frameloop:w="always",dpr:E=[1,2],performance:C,raycaster:L,camera:N,onPointerMissed:A}=h,P=r.getState(),O=P.gl;P.gl||P.set({gl:O=PE(d,l)});let H=P.raycaster;H||P.set({raycaster:H=new Nv});const{params:K,...X}=L||{};if(zt.equ(X,H,qo)||Mc(H,{...X}),zt.equ(K,H.params,qo)||Mc(H,{params:{...H.params,...K}}),!P.camera){const k=N instanceof Ma,J=k?N:b?new wa(0,0,0,0,.1,1e3):new ln(75,0,.1,1e3);k||(J.position.z=5,N&&Mc(J,N),N!=null&&N.rotation||J.lookAt(0,0,0)),P.set({camera:J})}if(!P.xr){const k=(he,W)=>{const ue=r.getState();ue.frameloop!=="never"&&Ig(he,!0,ue,W)},J=()=>{const he=r.getState();he.gl.xr.enabled=he.gl.xr.isPresenting,he.gl.xr.setAnimationLoop(he.gl.xr.isPresenting?k:null),he.gl.xr.isPresenting||Rg(he)},j={connect(){const he=r.getState().gl;he.xr.addEventListener("sessionstart",J),he.xr.addEventListener("sessionend",J)},disconnect(){const he=r.getState().gl;he.xr.removeEventListener("sessionstart",J),he.xr.removeEventListener("sessionend",J)}};O.xr&&j.connect(),P.set({xr:j})}if(O.shadowMap){const k=O.shadowMap.enabled,J=O.shadowMap.type;if(O.shadowMap.enabled=!!x,zt.boo(x))O.shadowMap.type=Zo;else if(zt.str(x)){var V;const j={basic:Ug,percentage:kc,soft:Zo,variance:Yr};O.shadowMap.type=(V=j[x])!=null?V:Zo}else zt.obj(x)&&Object.assign(O.shadowMap,x);(k!==O.shadowMap.enabled||J!==O.shadowMap.type)&&(O.shadowMap.needsUpdate=!0)}Xs&&("enabled"in Xs?Xs.enabled=!S:"legacyMode"in Xs&&(Xs.legacyMode=S));const ee=_?Qi:Tt,oe=y?fi:Bf;O.outputEncoding!==ee&&(O.outputEncoding=ee),O.toneMapping!==oe&&(O.toneMapping=oe),P.legacy!==S&&P.set(()=>({legacy:S})),P.linear!==_&&P.set(()=>({linear:_})),P.flat!==y&&P.set(()=>({flat:y})),d&&!zt.fun(d)&&!Yv(d)&&!zt.equ(d,O,qo)&&Mc(O,d),m&&!P.events.handlers&&P.set({events:m(r)});const de=LE(l,p);return zt.equ(de,P.size,qo)||P.setSize(de.width,de.height,de.updateStyle,de.top,de.left),E&&P.viewport.dpr!==Wv(E)&&P.setDpr(E),P.frameloop!==w&&P.setFrameloop(w),P.onPointerMissed||P.set({onPointerMissed:A}),C&&!zt.equ(C,P.performance,qo)&&P.set(k=>({performance:{...k.performance,...C}})),c=v,u=!0,this},render(h){return u||this.configure(),Nc.updateContainer(Re.createElement(IE,{store:r,children:h,onCreated:c,rootElement:l}),a,null,()=>{}),r},unmount(){Kv(l)}}}function IE({store:l,children:e,onCreated:t,rootElement:n}){return Oa(()=>{const i=l.getState();i.set(r=>({internal:{...r.internal,active:!0}})),t&&t(i),l.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Re.createElement(Zv.Provider,{value:l},e)}function Kv(l,e){const t=io.get(l),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Nc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,a,c,u;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(a=r.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),vE(i),io.delete(l),e&&e(l)}catch{}},500)})}}Nc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Re.version});function Fc(){return Fc=Object.assign?Object.assign.bind():function(l){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(l[n]=t[n])}return l},Fc.apply(this,arguments)}function Of(l,e,t){var n,i,r,a,c;e==null&&(e=100);function u(){var d=Date.now()-a;d<e&&d>=0?n=setTimeout(u,e-d):(n=null,t||(c=l.apply(r,i),r=i=null))}var h=function(){r=this,i=arguments,a=Date.now();var d=t&&!n;return n||(n=setTimeout(u,e)),d&&(c=l.apply(r,i),r=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=l.apply(r,i),r=i=null,clearTimeout(n),n=null)},h}Of.debounce=Of;var Dg=Of;function DE(l){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=l===void 0?{debounce:0,scroll:!1,offsetSize:!1}:l;const r=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!r)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,c]=Re.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=Re.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a}),h=e?typeof e=="number"?e:e.scroll:null,d=e?typeof e=="number"?e:e.resize:null,p=Re.useRef(!1);Re.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,v,x]=Re.useMemo(()=>{const b=()=>{if(!u.current.element)return;const{left:w,top:E,width:C,height:L,bottom:N,right:A,x:P,y:O}=u.current.element.getBoundingClientRect(),H={left:w,top:E,width:C,height:L,bottom:N,right:A,x:P,y:O};u.current.element instanceof HTMLElement&&i&&(H.height=u.current.element.offsetHeight,H.width=u.current.element.offsetWidth),Object.freeze(H),p.current&&!OE(u.current.lastBounds,H)&&c(u.current.lastBounds=H)};return[b,d?Dg(b,d):b,h?Dg(b,h):b]},[c,i,h,d]);function _(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(b=>b.removeEventListener("scroll",x,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function y(){u.current.element&&(u.current.resizeObserver=new r(x),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(b=>b.addEventListener("scroll",x,{capture:!0,passive:!0})))}const S=b=>{!b||b===u.current.element||(_(),u.current.element=b,u.current.scrollContainers=$v(b),y())};return NE(x,Boolean(t)),zE(v),Re.useEffect(()=>{_(),y()},[t,x,v]),Re.useEffect(()=>_,[]),[S,a,m]}function zE(l){Re.useEffect(()=>{const e=l;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[l])}function NE(l,e){Re.useEffect(()=>{if(e){const t=l;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[l,e])}function $v(l){const e=[];if(!l||l===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(l);return[t,n,i].some(r=>r==="auto"||r==="scroll")&&e.push(l),[...e,...$v(l.parentElement)]}const FE=["x","y","top","bottom","left","right","width","height"],OE=(l,e)=>FE.every(t=>l[t]===e[t]);var kE=Object.defineProperty,UE=Object.defineProperties,BE=Object.getOwnPropertyDescriptors,zg=Object.getOwnPropertySymbols,VE=Object.prototype.hasOwnProperty,GE=Object.prototype.propertyIsEnumerable,Ng=(l,e,t)=>e in l?kE(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,Fg=(l,e)=>{for(var t in e||(e={}))VE.call(e,t)&&Ng(l,t,e[t]);if(zg)for(var t of zg(e))GE.call(e,t)&&Ng(l,t,e[t]);return l},HE=(l,e)=>UE(l,BE(e));function e_(l,e,t){if(!l)return;if(t(l)===!0)return l;let n=e?l.return:l.child;for(;n;){const i=e_(n,e,t);if(i)return i;n=e?null:n.sibling}}function t_(l){try{return Object.defineProperties(l,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return l}}const bd=t_(Re.createContext(null));class n_ extends Re.Component{render(){return Re.createElement(bd.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:WE,ReactCurrentDispatcher:XE}=Re.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function qE(){const l=Re.useContext(bd);if(!l)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Re.useId();return Re.useMemo(()=>{var n;return(n=WE.current)!=null?n:e_(l,!1,i=>{let r=i.memoizedState;for(;r;){if(r.memoizedState===e)return!0;r=r.next}})},[l,e])}function YE(){var l,e;const t=qE(),[n]=Re.useState(()=>new Map);n.clear();let i=t;for(;i;){const r=(l=i.type)==null?void 0:l._context;r&&r!==bd&&!n.has(r)&&n.set(r,(e=XE.current)==null?void 0:e.readContext(t_(r))),i=i.return}return Re.useMemo(()=>Array.from(n.keys()).reduce((r,a)=>c=>Re.createElement(r,null,Re.createElement(a.Provider,HE(Fg({},c),{value:n.get(a)}))),r=>Re.createElement(n_,Fg({},r))),[n])}const Xh={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function ZE(l){const{handlePointer:e}=ME(l);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Xh).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=l.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:r}=l.getState();r.disconnect==null||r.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=r.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=Xh[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=l.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([r,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Xh[r];n.connected.removeEventListener(c,a)}}),t(r=>({events:{...r.events,connected:void 0}}))}}}}const JE=Re.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:r,events:a=ZE,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:x,dpr:_,performance:y,raycaster:S,camera:b,onPointerMissed:w,onCreated:E,...C},L){Re.useMemo(()=>SE(If),[]);const N=YE(),[A,P]=DE({scroll:!0,debounce:{scroll:50,resize:0},...n}),O=Re.useRef(null),H=Re.useRef(null),[K,X]=Re.useState(null);Re.useImperativeHandle(L,()=>O.current);const V=Vv(w),[ee,oe]=Re.useState(!1),[de,k]=Re.useState(!1);if(ee)throw ee;if(de)throw de;const J=Re.useRef(null);P.width>0&&P.height>0&&K&&(J.current||(J.current=RE(K)),J.current.configure({gl:r,events:a,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:x,dpr:_,performance:y,raycaster:S,camera:b,size:P,onPointerMissed:(...he)=>V.current==null?void 0:V.current(...he),onCreated:he=>{he.events.connect==null||he.events.connect(c?dE(c)?c.current:c:H.current),u&&he.setEvents({compute:(W,ue)=>{const ge=W[u+"X"],_e=W[u+"Y"];ue.pointer.set(ge/ue.size.width*2-1,-(_e/ue.size.height)*2+1),ue.raycaster.setFromCamera(ue.pointer,ue.camera)}}),E==null||E(he)}}),J.current.render(Re.createElement(N,null,Re.createElement(Gv,{set:k},Re.createElement(Re.Suspense,{fallback:Re.createElement(pE,{set:oe})},e))))),Oa(()=>{X(O.current)},[]),Re.useEffect(()=>{if(K)return()=>Kv(K)},[K]);const j=c?"none":"auto";return Re.createElement("div",Fc({ref:H,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:j,...i}},C),Re.createElement("div",{ref:A,style:{width:"100%",height:"100%"}},Re.createElement("canvas",{ref:O,style:{display:"block"}},t)))}),$E=Re.forwardRef(function(e,t){return Re.createElement(n_,null,Re.createElement(JE,Fc({},e,{ref:t})))});function e3({all:l,scene:e,camera:t}){const n=Wh(({gl:a})=>a),i=Wh(({camera:a})=>a),r=Wh(({scene:a})=>a);return Re.useLayoutEffect(()=>{const a=[];l&&(e||r).traverse(h=>{h.visible===!1&&(a.push(h),h.visible=!0)}),n.compile(e||r,t||i);const c=new jf(128);new Jf(.01,1e5,c).update(n,e||r),c.dispose(),a.forEach(h=>h.visible=!1)},[]),null}export{sy as $,j0 as A,at as B,$E as C,My as D,xa as E,Ie as F,Ei as G,Mr as H,Bb as I,K0 as J,$0 as K,Vn as L,tt as M,js as N,xt as O,rd as P,ln as Q,ta as R,Tv as S,zb as T,wa as U,fe as V,ra as W,ma as X,id as Y,Yc as Z,Fc as _,D as a,Wt as a0,Ic as a1,Vf as a2,Jo as a3,_n as a4,na as a5,ia as a6,Ji as a7,ss as a8,Bt as a9,ry as aa,pa as ab,uo as ac,da as ad,ls as ae,cs as af,Fa as ag,Dn as ah,rE as ai,wv as aj,$i as ak,J_ as al,j_ as am,dT as an,e3 as b,Wh as c,Qv as d,un as e,Mc as f,Hy as g,Lf as h,Ki as i,Pe as j,Ev as k,Av as l,wr as m,fv as n,Sr as o,qc as p,Lt as q,Xt as r,Tt as s,xr as t,QE as u,hn as v,Tn as w,fd as x,Xi as y,gt as z};
